;
;#include <mega32a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <i2c.h>
;#include <ds1307.h>
;#include <1wire.h>
;#include <ds18b20.h>
;#include <alcd.h>
;#include <delay.h>
;#include <math.h>
;#include <stdio.h>
;
;// Declare your global variables here
;float Temp;
;char lcd_buff[16];
;unsigned char Hour, Minute, Second = 0;
;eeprom unsigned char Year_century;
;unsigned char Year, Month, Day, Weekday = 0;
;unsigned int sYear = 0;
;unsigned char sMonth, sDay = 0;
;unsigned char menu_selector = 0;
;flash char degreeSymbol[8] =
;{0b000110,0b001001,0b001001,0b000110,0b000000,0b000000,0b000000,0b000000};
;
;// Declare your global functions
;void time_date_functions();
;int isLeapYear(int _year, int _type);
;void main_loop();
;void Georgian2Solar(int gYear, char gMonth, char gDay, unsigned int* sYear, char* sMonth, char* sDay);
;void define_char(char flash *pc, char char_code);
;
;// Timer2 overflow interrupt service routine
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 0021 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0022     if (Second >= 0 && Second <= 58)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0023     {
; 0000 0024         Second++;
;PCODE: $00000019 VOL: 0
; 0000 0025     }
; 0000 0026     else if (Second >= 59)
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0027     {
; 0000 0028         Second = 0;
;PCODE: $0000001F VOL: 0
; 0000 0029         Minute++;
;PCODE: $00000020 VOL: 0
; 0000 002A         if (Minute > 59)
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002B         {
; 0000 002C             Minute = 0;
;PCODE: $00000024 VOL: 0
; 0000 002D             Hour++;
;PCODE: $00000025 VOL: 0
; 0000 002E             if (Hour > 23)
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002F             {
; 0000 0030                 Hour = 0;
;PCODE: $00000029 VOL: 0
; 0000 0031                 Day++;
;PCODE: $0000002A VOL: 0
; 0000 0032                 Weekday++;
;PCODE: $0000002B VOL: 0
; 0000 0033             }
; 0000 0034         }
;PCODE: $0000002C VOL: 0
; 0000 0035     }
;PCODE: $0000002D VOL: 0
; 0000 0036 }
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;
;void main(void)
; 0000 0039 {
;PCODE: $00000033 VOL: 0
; 0000 003A // Declare your local variables here
; 0000 003B 
; 0000 003C // Input/Output Ports initialization
; 0000 003D // Port A initialization
; 0000 003E // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=In Bit1=In Bit0=In
; 0000 003F DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0040 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=P Bit1=P Bit0=P
; 0000 0041 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0042 
; 0000 0043 // Port B initialization
; 0000 0044 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0045 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0046 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0047 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0048 
; 0000 0049 // Port C initialization
; 0000 004A // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 004B DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 004C // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 004D PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 004E 
; 0000 004F // Port D initialization
; 0000 0050 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0051 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0052 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0053 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0054 
; 0000 0055 // Timer/Counter 0 initialization
; 0000 0056 // Clock source: System Clock
; 0000 0057 // Clock value: Timer 0 Stopped
; 0000 0058 // Mode: Normal top=0xFF
; 0000 0059 // OC0 output: Disconnected
; 0000 005A TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 005B TCNT0=0xD8;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 005C OCR0=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 005D 
; 0000 005E // Timer/Counter 1 initialization
; 0000 005F // Clock source: System Clock
; 0000 0060 // Clock value: Timer1 Stopped
; 0000 0061 // Mode: Normal top=0xFFFF
; 0000 0062 // OC1A output: Disconnected
; 0000 0063 // OC1B output: Disconnected
; 0000 0064 // Noise Canceler: Off
; 0000 0065 // Input Capture on Falling Edge
; 0000 0066 // Timer1 Overflow Interrupt: Off
; 0000 0067 // Input Capture Interrupt: Off
; 0000 0068 // Compare A Match Interrupt: Off
; 0000 0069 // Compare B Match Interrupt: Off
; 0000 006A TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 006B TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 006C TCNT1H=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 006D TCNT1L=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 006E ICR1H=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 006F ICR1L=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0070 OCR1AH=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0071 OCR1AL=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0072 OCR1BH=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0073 OCR1BL=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0074 
; 0000 0075 // Timer/Counter 2 initialization
; 0000 0076 // Clock source: TOSC1 pin
; 0000 0077 // Clock value: PCK2/128
; 0000 0078 // Mode: Normal top=0xFF
; 0000 0079 // OC2 output: Disconnected
; 0000 007A ASSR=1<<AS2;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 007B TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (1<<CS22) | (0<<CS21) | (1<<CS20);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 007C TCNT2=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 007D OCR2=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 007E 
; 0000 007F // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0080 TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0081 
; 0000 0082 // External Interrupt(s) initialization
; 0000 0083 // INT0: Off
; 0000 0084 // INT1: Off
; 0000 0085 // INT2: Off
; 0000 0086 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0087 MCUCSR=(0<<ISC2);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0088 
; 0000 0089 // USART initialization
; 0000 008A // USART disabled
; 0000 008B UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 008C 
; 0000 008D // Analog Comparator initialization
; 0000 008E // Analog Comparator: Off
; 0000 008F // The Analog Comparator's positive input is
; 0000 0090 // connected to the AIN0 pin
; 0000 0091 // The Analog Comparator's negative input is
; 0000 0092 // connected to the AIN1 pin
; 0000 0093 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0094 SFIOR=(0<<ACME);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0095 
; 0000 0096 // ADC initialization
; 0000 0097 // ADC disabled
; 0000 0098 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0099 
; 0000 009A // SPI initialization
; 0000 009B // SPI disabled
; 0000 009C SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 009D 
; 0000 009E // TWI initialization
; 0000 009F // TWI disabled
; 0000 00A0 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 00A1 
; 0000 00A2 // Bit-Banged I2C Bus initialization
; 0000 00A3 // I2C Port: PORTC
; 0000 00A4 // I2C SDA bit: 1
; 0000 00A5 // I2C SCL bit: 0
; 0000 00A6 // Bit Rate: 100 kHz
; 0000 00A7 // Note: I2C settings are specified in the
; 0000 00A8 // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 00A9 i2c_init();
;PCODE: $00000078 VOL: 0
; 0000 00AA 
; 0000 00AB // DS1307 Real Time Clock initialization
; 0000 00AC // Square wave output on pin SQW/OUT: Off
; 0000 00AD // SQW/OUT pin state: 0
; 0000 00AE rtc_init(0,0,0);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 00AF 
; 0000 00B0 // 1 Wire Bus initialization
; 0000 00B1 // 1 Wire Data port: PORTB
; 0000 00B2 // 1 Wire Data bit: 0
; 0000 00B3 // Note: 1 Wire port settings are specified in the
; 0000 00B4 // Project|Configure|C Compiler|Libraries|1 Wire menu.
; 0000 00B5 w1_init();
;PCODE: $0000007F VOL: 0
; 0000 00B6 
; 0000 00B7 // Alphanumeric LCD initialization
; 0000 00B8 // Connections are specified in the
; 0000 00B9 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00BA // RS - PORTB Bit 1
; 0000 00BB // RD - PORTB Bit 2
; 0000 00BC // EN - PORTB Bit 3
; 0000 00BD // D4 - PORTB Bit 4
; 0000 00BE // D5 - PORTB Bit 5
; 0000 00BF // D6 - PORTB Bit 6
; 0000 00C0 // D7 - PORTB Bit 7
; 0000 00C1 // Characters/line: 16
; 0000 00C2 lcd_init(16);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 00C3 define_char(degreeSymbol, 0);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 00C4 lcd_clear();
;PCODE: $00000086 VOL: 0
; 0000 00C5 
; 0000 00C6 // Global enable interrupts
; 0000 00C7 #asm("sei")
;PCODE: $00000087 VOL: 0
	sei
;PCODE: $00000088 VOL: 0
; 0000 00C8 
; 0000 00C9 rtc_get_time(&Hour, &Minute, &Second);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00CA rtc_get_date(&Weekday, &Day, &Month, &Year);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00CB 
; 0000 00CC if (Year_century == 0) Year_century = 20;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 00CD main_loop();
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 00CE 
; 0000 00CF }
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;
;void main_loop()
; 0000 00D2 {
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00D3     while(1)
;PCODE: $000000A5 VOL: 0
; 0000 00D4     {
; 0000 00D5         time_date_functions();
;PCODE: $000000A6 VOL: 0
; 0000 00D6 
; 0000 00D7 
; 0000 00D8         if (menu_selector == 0)
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 00D9         {
; 0000 00DA             Temp = ds18b20_temperature(0);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 00DB 
; 0000 00DC             if (Second % 10 < 5)
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 00DD             {
; 0000 00DE                 sprintf(lcd_buff, "%.4i/%.2i/%.2i ", (Year_century * 100) + Year, Month, Day);
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 00DF             }
; 0000 00E0             else
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00E1             {
; 0000 00E2                 Georgian2Solar((Year_century * 100) + Year, Month, Day, &sYear, &sMonth, &sDay);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 00E3                 sprintf(lcd_buff, "%.4i/%.2i/%.2i ", sYear, sMonth, sDay);
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 00E4             }
;PCODE: $000000F2 VOL: 0
; 0000 00E5             lcd_gotoxy(0, 0);
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 00E6             lcd_puts(lcd_buff);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00E7 
; 0000 00E8             switch(Weekday)
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00E9             {
; 0000 00EA                 case 1:
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 00EB                     sprintf(lcd_buff, "SUN");
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00EC                     break;
;PCODE: $00000106 VOL: 0
; 0000 00ED                 case 2:
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 00EE                     sprintf(lcd_buff, "MON");
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 00EF                     break;
;PCODE: $00000113 VOL: 0
; 0000 00F0                 case 3:
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00F1                     sprintf(lcd_buff, "TUE");
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00F2                     break;
;PCODE: $00000120 VOL: 0
; 0000 00F3                 case 4:
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00F4                     sprintf(lcd_buff, "WED");
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00F5                     break;
;PCODE: $0000012D VOL: 0
; 0000 00F6                 case 5:
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00F7                     sprintf(lcd_buff, "THU");
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00F8                     break;
;PCODE: $0000013A VOL: 0
; 0000 00F9                 case 6:
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00FA                     sprintf(lcd_buff, "FRI");
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00FB                     break;
;PCODE: $00000147 VOL: 0
; 0000 00FC                 case 7:
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00FD                     sprintf(lcd_buff, "SAT");
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00FE                     break;
;PCODE: $00000154 VOL: 0
; 0000 00FF             }
;PCODE: $00000155 VOL: 0
; 0000 0100             lcd_gotoxy(13, 0);
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0101             lcd_puts(lcd_buff);
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 0102             sprintf(lcd_buff, "%.2i:%.2i:%.2i %.1f", Hour, Minute, Second, Temp);
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 0103             lcd_gotoxy(0, 1);
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 0104             lcd_puts(lcd_buff);
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 0105             lcd_putchar(0);
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 0106             lcd_puts("C  ");
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 0107         }
; 0000 0108 
; 0000 0109     }
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 010A }
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0

	.DSEG
_0x1C:
	.BYTE 0x4
;
;void time_date_functions()
; 0000 010D {

	.CSEG
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 010E     if (menu_selector == 0)
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 010F     {
; 0000 0110         if (Weekday == 0 || Weekday > 7) Weekday = 1;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 0111         if (Day == 0) Day = 1;
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 0112         if ((Day > 31) && (Month == 1 || Month == 3 || Month == 5 || Month == 7 || Month == 8 || Month == 10 || Month == ...
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 0113         {
; 0000 0114             Day = 1;
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 0115             Month++;
;PCODE: $000001B4 VOL: 0
; 0000 0116         }
; 0000 0117         if ((Day > 30) && (Month == 4 || Month == 6 || Month == 9 || Month == 11))
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 0118         {
; 0000 0119             Day = 1;
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 011A             Month++;
;PCODE: $000001CD VOL: 0
; 0000 011B         }
; 0000 011C         if (Day > 28 && Month == 2 && isLeapYear((Year_century * 100) + Year, 1) == 0)
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 011D         {
; 0000 011E             Day = 1;
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 011F             Month++;
;PCODE: $000001E9 VOL: 0
; 0000 0120         }
; 0000 0121         if (Month == 0) Month = 1;
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 0122         if (Month > 12)
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 0123         {
; 0000 0124             Month = 1;
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 0125             Year++;
;PCODE: $000001F5 VOL: 0
; 0000 0126         }
; 0000 0127         if (Year > 99)
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 0128         {
; 0000 0129             Year = 0;
;PCODE: $000001FA VOL: 0
; 0000 012A             Year_century++;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 012B         }
; 0000 012C         if (Year_century > 99)
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 012D         {
; 0000 012E             Year = 0;
;PCODE: $00000204 VOL: 0
; 0000 012F             Year_century = 0;
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 0130         }
; 0000 0131     }
;PCODE: $00000208 VOL: 0
; 0000 0132 }
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;
;
;int isLeapYear(int _year, int _type)
; 0000 0136 {
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 0137     switch(_type)
;PCODE: $0000020E VOL: 0
;	_year -> Y+2
;	_type -> Y+0
;PCODE: $0000020F VOL: 0
; 0000 0138     {
; 0000 0139         case 1:
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 013A             if (_year % 4 == 0) return 1; else return 0;
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 013B             if ((_year % 100 == 0) && (_year % 400 == 0)) return 1; else return 0;
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 013C             break;
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 013D         case 2:
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 013E             if (_year % 4 == 3) return 1; else return 0;
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 013F             break;
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 0140     }
;PCODE: $00000247 VOL: 0
; 0000 0141 }
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;
;void Georgian2Solar(int gYear, char gMonth, char gDay, unsigned int* sYear, char* sMonth, char* sDay)
; 0000 0144 {
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 0145     float s, r;
; 0000 0146     int m;
; 0000 0147     long sa, ss;
; 0000 0148     int ma, ro;
; 0000 0149 
; 0000 014A     s = gYear - 1;
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;	gYear -> Y+30
;	gMonth -> Y+29
;	gDay -> Y+28
;	*sYear -> Y+26
;	*sMonth -> Y+24
;	*sDay -> Y+22
;	s -> Y+18
;	r -> Y+14
;	m -> R16,R17
;	sa -> Y+10
;	ss -> Y+6
;	ma -> R18,R19
;	ro -> R20,R21
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 014B     m = gMonth - 1;
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 014C     r = (s * 365.25) + gDay;
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 014D 
; 0000 014E     if (gYear % 4 == 0)
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0000 014F     {
; 0000 0150         switch(m)
;PCODE: $00000266 VOL: 0
; 0000 0151         {
; 0000 0152             case 1:
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 0153                 r += 31; break;
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
; 0000 0154             case 2:
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
; 0000 0155                 r += 60; break;
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 0156             case 3:
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 0157                 r += 91; break;
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 0158             case 4:
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0000 0159                 r += 121; break;
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
; 0000 015A             case 5:
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 015B                 r += 152; break;
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 015C             case 6:
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 015D                 r += 182; break;
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 015E             case 7:
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
; 0000 015F                 r += 213; break;
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0000 0160             case 8:
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 0161                 r += 244; break;
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
; 0000 0162             case 9:
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
; 0000 0163                 r += 274; break;
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 0164             case 10:
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 0165                 r += 305; break;
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 0166             case 11:
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 0167                 r += 335; break;
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
; 0000 0168         }
;PCODE: $000002BE VOL: 0
; 0000 0169     }
; 0000 016A     else
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 016B     {
; 0000 016C         switch(m)
;PCODE: $000002C1 VOL: 0
; 0000 016D         {
; 0000 016E             case 1:
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 016F                 r += 31; break;
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
; 0000 0170             case 2:
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 0171                 r += 59; break;
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 0172             case 3:
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
; 0000 0173                 r += 90; break;
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 0174             case 4:
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 0175                 r += 120; break;
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 0176             case 5:
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
; 0000 0177                 r += 151; break;
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 0178             case 6:
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
; 0000 0179                 r += 181; break;
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0000 017A             case 7:
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 017B                 r += 212; break;
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
; 0000 017C             case 8:
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
; 0000 017D                 r += 243; break;
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0000 017E             case 9:
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 017F                 r += 273; break;
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
; 0000 0180             case 10:
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
; 0000 0181                 r += 304; break;
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0000 0182             case 11:
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
; 0000 0183                 r += 334; break;
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
; 0000 0184         }
;PCODE: $00000319 VOL: 0
; 0000 0185     }
;PCODE: $0000031A VOL: 0
; 0000 0186     r -= 226899;
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
; 0000 0187     sa = (r / 365.25) + 1;
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0000 0188     ss = r / 365.25;
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
; 0000 0189     r -= (ss * 365.25) + 0.25;
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
; 0000 018A     if (sa % 4 == 3) r += 1;
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
; 0000 018B     if (r >= 336) {ma = 12; ro = r - 336;}
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
; 0000 018C     else if (r >= 306) {ma = 11; ro = r - 306;}
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
; 0000 018D     else if (r >= 276) {ma = 10; ro = r - 276;}
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
; 0000 018E     else if (r >= 246) {ma = 9; ro = r - 246;}
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
; 0000 018F     else if (r >= 216) {ma = 8; ro = r - 216;}
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
; 0000 0190     else if (r >= 186) {ma = 7; ro = r - 186;}
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
; 0000 0191     else if (r >= 155) {ma = 6; ro = r - 155;}
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
; 0000 0192     else if (r >= 124) {ma = 5; ro = r - 124;}
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
; 0000 0193     else if (r >= 93) {ma = 4; ro = r - 93;}
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
; 0000 0194     else if (r >= 62) {ma = 3; ro = r - 62;}
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0000 0195     else if (r >= 31) {ma = 2; ro = r - 31;}
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
; 0000 0196     else if (r > 0) {ma = 1; ro = r;}
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
; 0000 0197     else if (r == 0)
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 0198     {
; 0000 0199         if (sa % 4 != 0) {sa -= 1; ma = 12; ro = 29;}
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
; 0000 019A         else {sa -= 1; ma = 12; ro = 30;}
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 019B     }
; 0000 019C     if (ro < 1)
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
; 0000 019D     {
; 0000 019E         switch(ma)
;PCODE: $00000403 VOL: 0
; 0000 019F         {
; 0000 01A0             case 1:
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
; 0000 01A1                 sa -= 1; ma = 12;
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
; 0000 01A2                 if (isLeapYear(sa, 2) == 1) ro = 30; else ro = 29;
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
; 0000 01A3                 break;
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
; 0000 01A4             case 2:
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
; 0000 01A5                 ma = 1; ro = 31; break;
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
; 0000 01A6             case 3:
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
; 0000 01A7                 ma = 2; ro = 31; break;
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
; 0000 01A8             case 4:
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
; 0000 01A9                 ma = 3; ro = 31; break;
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
; 0000 01AA             case 5:
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
; 0000 01AB                 ma = 4; ro = 31; break;
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
; 0000 01AC             case 6:
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
; 0000 01AD                 ma = 5; ro = 31; break;
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
; 0000 01AE             case 7:
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
; 0000 01AF                 ma = 6; ro = 31; break;
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
; 0000 01B0             case 8:
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
; 0000 01B1                 ma = 7; ro = 30; break;
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
; 0000 01B2             case 9:
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 01B3                 ma = 8; ro = 30; break;
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
; 0000 01B4             case 10:
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
; 0000 01B5                 ma = 9; ro = 30; break;
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
; 0000 01B6             case 11:
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
; 0000 01B7                 ma = 10; ro = 30; break;
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
; 0000 01B8             case 12:
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
; 0000 01B9                 ma = 11; ro = 30; break;
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
; 0000 01BA         }
;PCODE: $00000472 VOL: 0
; 0000 01BB     }
; 0000 01BC     *sYear = sa; *sMonth = ma; *sDay = ro;
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
; 0000 01BD 
; 0000 01BE     // This function has not been optimized to make understanding easier.
; 0000 01BF }
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;
;
;void define_char(char flash *pc, char char_code)
; 0000 01C3 {
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
; 0000 01C4     char i, a;
; 0000 01C5     a = (char_code << 3) | 0x40;
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;	*pc -> Y+3
;	char_code -> Y+2
;	i -> R17
;	a -> R16
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
; 0000 01C6     for (i = 0; i < 8; i++) lcd_write_byte(a++, *pc++);
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
; 0000 01C7 }
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
