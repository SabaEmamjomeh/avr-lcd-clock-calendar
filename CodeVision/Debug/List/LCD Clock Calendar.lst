
AVRASM ver. 2.1.30  C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm Sat Dec 31 02:31:01 2022

C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1087): warning: Register r5 already defined by the .DEF directive
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1089): warning: Register r7 already defined by the .DEF directive
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1090): warning: Register r6 already defined by the .DEF directive
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1091): warning: Register r9 already defined by the .DEF directive
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1093): warning: Register r11 already defined by the .DEF directive
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1094): warning: Register r12 already defined by the .DEF directive
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1095): warning: Register r13 already defined by the .DEF directive
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1096): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : long, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _Hour=R5
                 	.DEF _Minute=R4
                 	.DEF _Second=R7
                 	.DEF _Year=R6
                 	.DEF _Month=R9
                 	.DEF _Day=R8
                 	.DEF _Weekday=R11
                 	.DEF _sYear=R12
                 	.DEF _sYear_msb=R13
                 	.DEF _sMonth=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0073 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 009f 	JMP  _timer2_ovf_isr
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _degreeSymbol:
00002a 0906
00002b 0609
00002c 0000
00002d 0000      	.DB  0x6,0x9,0x9,0x6,0x0,0x0,0x0,0x0
                 _conv_delay_G101:
00002e 0064
00002f 00c8
000030 0190
000031 0320      	.DB  0x64,0x0,0xC8,0x0,0x90,0x1,0x20,0x3
                 _bit_mask_G101:
000032 fff8
000033 fffc
000034 fffe
000035 ffff      	.DB  0xF8,0xFF,0xFC,0xFF,0xFE,0xFF,0xFF,0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000036 0000
000037 0000      	.DB  0x0,0x0,0x0,0x0
000038 0000
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1137): warning: .cseg .db misalignment - padding zero byte
000039 0000      	.DB  0x0,0x0,0x0
                 
                 _0x0:
00003a 2e25
00003b 6934
00003c 252f
00003d 322e      	.DB  0x25,0x2E,0x34,0x69,0x2F,0x25,0x2E,0x32
00003e 2f69
00003f 2e25
000040 6932
000041 0020      	.DB  0x69,0x2F,0x25,0x2E,0x32,0x69,0x20,0x0
000042 5553
000043 004e
000044 4f4d
000045 004e      	.DB  0x53,0x55,0x4E,0x0,0x4D,0x4F,0x4E,0x0
000046 5554
000047 0045
000048 4557
000049 0044      	.DB  0x54,0x55,0x45,0x0,0x57,0x45,0x44,0x0
00004a 4854
00004b 0055
00004c 5246
00004d 0049      	.DB  0x54,0x48,0x55,0x0,0x46,0x52,0x49,0x0
00004e 4153
00004f 0054
000050 2e25
000051 6932      	.DB  0x53,0x41,0x54,0x0,0x25,0x2E,0x32,0x69
000052 253a
000053 322e
000054 3a69
000055 2e25      	.DB  0x3A,0x25,0x2E,0x32,0x69,0x3A,0x25,0x2E
000056 6932
000057 2520
000058 312e
000059 0066      	.DB  0x32,0x69,0x20,0x25,0x2E,0x31,0x66,0x0
00005a 2043
00005b 0020      	.DB  0x43,0x20,0x20,0x0
                 _0x2040003:
00005c c080      	.DB  0x80,0xC0
                 _0x2080000:
00005d 4e2d
00005e 4e41
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1152): warning: .cseg .db misalignment - padding zero byte
00005f 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20C0060:
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1154): warning: .cseg .db misalignment - padding zero byte
000060 0001      	.DB  0x1
                 _0x20C0000:
000061 4e2d
000062 4e41
000063 4900
000064 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ASUS FX504GM\Desktop\LCD Clock Calendar\CodeVision\Debug\List\LCD Clock Calendar.asm(1157): warning: .cseg .db misalignment - padding zero byte
000065 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000066 0007      	.DW  0x07
000067 0007      	.DW  0x07
000068 006c      	.DW  __REG_VARS*2
                 
000069 0004      	.DW  0x04
00006a 0260      	.DW  _0x1C
00006b 00b4      	.DW  _0x0*2+64
                 
00006c 0002      	.DW  0x02
00006d 0283      	.DW  __base_y_G102
00006e 00b8      	.DW  _0x2040003*2
                 
00006f 0001      	.DW  0x01
000070 028a      	.DW  __seed_G106
000071 00c0      	.DW  _0x20C0060*2
                 
                 _0xFFFFFFFF:
000072 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000073 94f8      	CLI
000074 27ee      	CLR  R30
000075 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000076 e0f1      	LDI  R31,1
000077 bff5      	OUT  MCUCR,R31
000078 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000079 e08d      	LDI  R24,(14-2)+1
00007a e0a2      	LDI  R26,2
00007b 27bb      	CLR  R27
                 __CLEAR_REG:
00007c 93ed      	ST   X+,R30
00007d 958a      	DEC  R24
00007e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00007f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000080 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000081 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000082 93ed      	ST   X+,R30
000083 9701      	SBIW R24,1
000084 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000085 ecec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000086 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000087 9185      	LPM  R24,Z+
000088 9195      	LPM  R25,Z+
000089 9700      	SBIW R24,0
00008a f061      	BREQ __GLOBAL_INI_END
00008b 91a5      	LPM  R26,Z+
00008c 91b5      	LPM  R27,Z+
00008d 9005      	LPM  R0,Z+
00008e 9015      	LPM  R1,Z+
00008f 01bf      	MOVW R22,R30
000090 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000091 9005      	LPM  R0,Z+
000092 920d      	ST   X+,R0
000093 9701      	SBIW R24,1
000094 f7e1      	BRNE __GLOBAL_INI_LOOP
000095 01fb      	MOVW R30,R22
000096 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000097 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000098 bfed      	OUT  SPL,R30
000099 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00009a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00009b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00009c e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00009d 940c 00be 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;
                 ;#include <mega32a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <i2c.h>
                 ;#include <ds1307.h>
                 ;#include <1wire.h>
                 ;#include <ds18b20.h>
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;#include <stdio.h>
                 ;
                 ;// Declare your global variables here
                 ;float Temp;
                 ;char lcd_buff[16];
                 ;unsigned char Hour, Minute, Second = 0;
                 ;eeprom unsigned char Year_century;
                 ;unsigned char Year, Month, Day, Weekday = 0;
                 ;unsigned int sYear = 0;
                 ;unsigned char sMonth, sDay = 0;
                 ;unsigned char menu_selector = 0;
                 ;flash char degreeSymbol[8] =
                 ;{0b000110,0b001001,0b001001,0b000110,0b000000,0b000000,0b000000,0b000000};
                 ;
                 ;// Declare your global functions
                 ;void time_date_functions();
                 ;int isLeapYear(int _year, int _type);
                 ;void main_loop();
                 ;void Georgian2Solar(int gYear, char gMonth, char gDay, unsigned int* sYear, char* sMonth, char* sDay);
                 ;void define_char(char flash *pc, char char_code);
                 ;
                 ;// Timer2 overflow interrupt service routine
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 0021 {
                 
                 	.CSEG
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
00009f 93ea      	ST   -Y,R30
0000a0 b7ef      	IN   R30,SREG
0000a1 93ea      	ST   -Y,R30
                 ; 0000 0022     if (Second >= 0 && Second <= 58)
0000a2 e0e0      	LDI  R30,LOW(0)
0000a3 167e      	CP   R7,R30
0000a4 f018      	BRLO _0x4
0000a5 e3ea      	LDI  R30,LOW(58)
0000a6 15e7      	CP   R30,R7
0000a7 f408      	BRSH _0x5
                 _0x4:
0000a8 c002      	RJMP _0x3
                 _0x5:
                 ; 0000 0023     {
                 ; 0000 0024         Second++;
0000a9 9473      	INC  R7
                 ; 0000 0025     }
                 ; 0000 0026     else if (Second >= 59)
0000aa c00f      	RJMP _0x6
                 _0x3:
0000ab e3eb      	LDI  R30,LOW(59)
0000ac 167e      	CP   R7,R30
0000ad f060      	BRLO _0x7
                 ; 0000 0027     {
                 ; 0000 0028         Second = 0;
0000ae 2477      	CLR  R7
                 ; 0000 0029         Minute++;
0000af 9443      	INC  R4
                 ; 0000 002A         if (Minute > 59)
0000b0 15e4      	CP   R30,R4
0000b1 f440      	BRSH _0x8
                 ; 0000 002B         {
                 ; 0000 002C             Minute = 0;
0000b2 2444      	CLR  R4
                 ; 0000 002D             Hour++;
0000b3 9453      	INC  R5
                 ; 0000 002E             if (Hour > 23)
0000b4 e1e7      	LDI  R30,LOW(23)
0000b5 15e5      	CP   R30,R5
0000b6 f418      	BRSH _0x9
                 ; 0000 002F             {
                 ; 0000 0030                 Hour = 0;
0000b7 2455      	CLR  R5
                 ; 0000 0031                 Day++;
0000b8 9483      	INC  R8
                 ; 0000 0032                 Weekday++;
0000b9 94b3      	INC  R11
                 ; 0000 0033             }
                 ; 0000 0034         }
                 _0x9:
                 ; 0000 0035     }
                 _0x8:
                 ; 0000 0036 }
                 _0x7:
                 _0x6:
0000ba 91e9      	LD   R30,Y+
0000bb bfef      	OUT  SREG,R30
0000bc 91e9      	LD   R30,Y+
0000bd 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0039 {
                 _main:
                 ; .FSTART _main
                 ; 0000 003A // Declare your local variables here
                 ; 0000 003B 
                 ; 0000 003C // Input/Output Ports initialization
                 ; 0000 003D // Port A initialization
                 ; 0000 003E // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=In Bit1=In Bit0=In
                 ; 0000 003F DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
0000be efe8      	LDI  R30,LOW(248)
0000bf bbea      	OUT  0x1A,R30
                 ; 0000 0040 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=P Bit1=P Bit0=P
                 ; 0000 0041 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
0000c0 e0e7      	LDI  R30,LOW(7)
0000c1 bbeb      	OUT  0x1B,R30
                 ; 0000 0042 
                 ; 0000 0043 // Port B initialization
                 ; 0000 0044 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0045 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
0000c2 efef      	LDI  R30,LOW(255)
0000c3 bbe7      	OUT  0x17,R30
                 ; 0000 0046 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0047 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0000c4 e0e0      	LDI  R30,LOW(0)
0000c5 bbe8      	OUT  0x18,R30
                 ; 0000 0048 
                 ; 0000 0049 // Port C initialization
                 ; 0000 004A // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 004B DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
0000c6 efef      	LDI  R30,LOW(255)
0000c7 bbe4      	OUT  0x14,R30
                 ; 0000 004C // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 004D PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0000c8 e0e0      	LDI  R30,LOW(0)
0000c9 bbe5      	OUT  0x15,R30
                 ; 0000 004E 
                 ; 0000 004F // Port D initialization
                 ; 0000 0050 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0051 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
0000ca efef      	LDI  R30,LOW(255)
0000cb bbe1      	OUT  0x11,R30
                 ; 0000 0052 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0053 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
0000cc e0e0      	LDI  R30,LOW(0)
0000cd bbe2      	OUT  0x12,R30
                 ; 0000 0054 
                 ; 0000 0055 // Timer/Counter 0 initialization
                 ; 0000 0056 // Clock source: System Clock
                 ; 0000 0057 // Clock value: Timer 0 Stopped
                 ; 0000 0058 // Mode: Normal top=0xFF
                 ; 0000 0059 // OC0 output: Disconnected
                 ; 0000 005A TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
0000ce bfe3      	OUT  0x33,R30
                 ; 0000 005B TCNT0=0xD8;
0000cf ede8      	LDI  R30,LOW(216)
0000d0 bfe2      	OUT  0x32,R30
                 ; 0000 005C OCR0=0x00;
0000d1 e0e0      	LDI  R30,LOW(0)
0000d2 bfec      	OUT  0x3C,R30
                 ; 0000 005D 
                 ; 0000 005E // Timer/Counter 1 initialization
                 ; 0000 005F // Clock source: System Clock
                 ; 0000 0060 // Clock value: Timer1 Stopped
                 ; 0000 0061 // Mode: Normal top=0xFFFF
                 ; 0000 0062 // OC1A output: Disconnected
                 ; 0000 0063 // OC1B output: Disconnected
                 ; 0000 0064 // Noise Canceler: Off
                 ; 0000 0065 // Input Capture on Falling Edge
                 ; 0000 0066 // Timer1 Overflow Interrupt: Off
                 ; 0000 0067 // Input Capture Interrupt: Off
                 ; 0000 0068 // Compare A Match Interrupt: Off
                 ; 0000 0069 // Compare B Match Interrupt: Off
                 ; 0000 006A TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0000d3 bdef      	OUT  0x2F,R30
                 ; 0000 006B TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
0000d4 bdee      	OUT  0x2E,R30
                 ; 0000 006C TCNT1H=0x00;
0000d5 bded      	OUT  0x2D,R30
                 ; 0000 006D TCNT1L=0x00;
0000d6 bdec      	OUT  0x2C,R30
                 ; 0000 006E ICR1H=0x00;
0000d7 bde7      	OUT  0x27,R30
                 ; 0000 006F ICR1L=0x00;
0000d8 bde6      	OUT  0x26,R30
                 ; 0000 0070 OCR1AH=0x00;
0000d9 bdeb      	OUT  0x2B,R30
                 ; 0000 0071 OCR1AL=0x00;
0000da bdea      	OUT  0x2A,R30
                 ; 0000 0072 OCR1BH=0x00;
0000db bde9      	OUT  0x29,R30
                 ; 0000 0073 OCR1BL=0x00;
0000dc bde8      	OUT  0x28,R30
                 ; 0000 0074 
                 ; 0000 0075 // Timer/Counter 2 initialization
                 ; 0000 0076 // Clock source: TOSC1 pin
                 ; 0000 0077 // Clock value: PCK2/128
                 ; 0000 0078 // Mode: Normal top=0xFF
                 ; 0000 0079 // OC2 output: Disconnected
                 ; 0000 007A ASSR=1<<AS2;
0000dd e0e8      	LDI  R30,LOW(8)
0000de bde2      	OUT  0x22,R30
                 ; 0000 007B TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (1<<CS22) | (0<<CS21) | (1<<CS20);
0000df e0e5      	LDI  R30,LOW(5)
0000e0 bde5      	OUT  0x25,R30
                 ; 0000 007C TCNT2=0x00;
0000e1 e0e0      	LDI  R30,LOW(0)
0000e2 bde4      	OUT  0x24,R30
                 ; 0000 007D OCR2=0x00;
0000e3 bde3      	OUT  0x23,R30
                 ; 0000 007E 
                 ; 0000 007F // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0080 TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
0000e4 e4e0      	LDI  R30,LOW(64)
0000e5 bfe9      	OUT  0x39,R30
                 ; 0000 0081 
                 ; 0000 0082 // External Interrupt(s) initialization
                 ; 0000 0083 // INT0: Off
                 ; 0000 0084 // INT1: Off
                 ; 0000 0085 // INT2: Off
                 ; 0000 0086 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0000e6 e0e0      	LDI  R30,LOW(0)
0000e7 bfe5      	OUT  0x35,R30
                 ; 0000 0087 MCUCSR=(0<<ISC2);
0000e8 bfe4      	OUT  0x34,R30
                 ; 0000 0088 
                 ; 0000 0089 // USART initialization
                 ; 0000 008A // USART disabled
                 ; 0000 008B UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000e9 b9ea      	OUT  0xA,R30
                 ; 0000 008C 
                 ; 0000 008D // Analog Comparator initialization
                 ; 0000 008E // Analog Comparator: Off
                 ; 0000 008F // The Analog Comparator's positive input is
                 ; 0000 0090 // connected to the AIN0 pin
                 ; 0000 0091 // The Analog Comparator's negative input is
                 ; 0000 0092 // connected to the AIN1 pin
                 ; 0000 0093 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000ea e8e0      	LDI  R30,LOW(128)
0000eb b9e8      	OUT  0x8,R30
                 ; 0000 0094 SFIOR=(0<<ACME);
0000ec e0e0      	LDI  R30,LOW(0)
0000ed bfe0      	OUT  0x30,R30
                 ; 0000 0095 
                 ; 0000 0096 // ADC initialization
                 ; 0000 0097 // ADC disabled
                 ; 0000 0098 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000ee b9e6      	OUT  0x6,R30
                 ; 0000 0099 
                 ; 0000 009A // SPI initialization
                 ; 0000 009B // SPI disabled
                 ; 0000 009C SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000ef b9ed      	OUT  0xD,R30
                 ; 0000 009D 
                 ; 0000 009E // TWI initialization
                 ; 0000 009F // TWI disabled
                 ; 0000 00A0 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000f0 bfe6      	OUT  0x36,R30
                 ; 0000 00A1 
                 ; 0000 00A2 // Bit-Banged I2C Bus initialization
                 ; 0000 00A3 // I2C Port: PORTC
                 ; 0000 00A4 // I2C SDA bit: 1
                 ; 0000 00A5 // I2C SCL bit: 0
                 ; 0000 00A6 // Bit Rate: 100 kHz
                 ; 0000 00A7 // Note: I2C settings are specified in the
                 ; 0000 00A8 // Project|Configure|C Compiler|Libraries|I2C menu.
                 ; 0000 00A9 i2c_init();
0000f1 940e 0d62 	CALL _i2c_init
                 ; 0000 00AA 
                 ; 0000 00AB // DS1307 Real Time Clock initialization
                 ; 0000 00AC // Square wave output on pin SQW/OUT: Off
                 ; 0000 00AD // SQW/OUT pin state: 0
                 ; 0000 00AE rtc_init(0,0,0);
0000f3 e0e0      	LDI  R30,LOW(0)
0000f4 93ea      	ST   -Y,R30
0000f5 93ea      	ST   -Y,R30
0000f6 e0a0      	LDI  R26,LOW(0)
0000f7 d49c      	RCALL _rtc_init
                 ; 0000 00AF 
                 ; 0000 00B0 // 1 Wire Bus initialization
                 ; 0000 00B1 // 1 Wire Data port: PORTB
                 ; 0000 00B2 // 1 Wire Data bit: 0
                 ; 0000 00B3 // Note: 1 Wire port settings are specified in the
                 ; 0000 00B4 // Project|Configure|C Compiler|Libraries|1 Wire menu.
                 ; 0000 00B5 w1_init();
0000f8 940e 0dbd 	CALL _w1_init
                 ; 0000 00B6 
                 ; 0000 00B7 // Alphanumeric LCD initialization
                 ; 0000 00B8 // Connections are specified in the
                 ; 0000 00B9 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 00BA // RS - PORTB Bit 1
                 ; 0000 00BB // RD - PORTB Bit 2
                 ; 0000 00BC // EN - PORTB Bit 3
                 ; 0000 00BD // D4 - PORTB Bit 4
                 ; 0000 00BE // D5 - PORTB Bit 5
                 ; 0000 00BF // D6 - PORTB Bit 6
                 ; 0000 00C0 // D7 - PORTB Bit 7
                 ; 0000 00C1 // Characters/line: 16
                 ; 0000 00C2 lcd_init(16);
0000fa e1a0      	LDI  R26,LOW(16)
0000fb 940e 06f0 	CALL _lcd_init
                 ; 0000 00C3 define_char(degreeSymbol, 0);
0000fd e5e4      	LDI  R30,LOW(_degreeSymbol*2)
0000fe e0f0      	LDI  R31,HIGH(_degreeSymbol*2)
0000ff 93fa      	ST   -Y,R31
000100 93ea      	ST   -Y,R30
000101 e0a0      	LDI  R26,LOW(0)
000102 d477      	RCALL _define_char
                 ; 0000 00C4 lcd_clear();
000103 940e 06b1 	CALL _lcd_clear
                 ; 0000 00C5 
                 ; 0000 00C6 // Global enable interrupts
                 ; 0000 00C7 #asm("sei")
000105 9478      	sei
                 ; 0000 00C8 
                 ; 0000 00C9 rtc_get_time(&Hour, &Minute, &Second);
000106 e0e5      	LDI  R30,LOW(5)
000107 e0f0      	LDI  R31,HIGH(5)
000108 93fa      	ST   -Y,R31
000109 93ea      	ST   -Y,R30
00010a e0e4      	LDI  R30,LOW(4)
00010b e0f0      	LDI  R31,HIGH(4)
00010c 93fa      	ST   -Y,R31
00010d 93ea      	ST   -Y,R30
00010e e0a7      	LDI  R26,LOW(7)
00010f e0b0      	LDI  R27,HIGH(7)
000110 d49c      	RCALL _rtc_get_time
                 ; 0000 00CA rtc_get_date(&Weekday, &Day, &Month, &Year);
000111 e0eb      	LDI  R30,LOW(11)
000112 e0f0      	LDI  R31,HIGH(11)
000113 93fa      	ST   -Y,R31
000114 93ea      	ST   -Y,R30
000115 e0e8      	LDI  R30,LOW(8)
000116 e0f0      	LDI  R31,HIGH(8)
000117 93fa      	ST   -Y,R31
000118 93ea      	ST   -Y,R30
000119 e0e9      	LDI  R30,LOW(9)
00011a e0f0      	LDI  R31,HIGH(9)
00011b 93fa      	ST   -Y,R31
00011c 93ea      	ST   -Y,R30
00011d e0a6      	LDI  R26,LOW(6)
00011e e0b0      	LDI  R27,HIGH(6)
00011f d4a5      	RCALL _rtc_get_date
                 ; 0000 00CB 
                 ; 0000 00CC if (Year_century == 0) Year_century = 20;
000120 940e 0bb4 	CALL SUBOPT_0x0
000122 30e0      	CPI  R30,0
000123 f429      	BRNE _0xA
000124 e0a0      	LDI  R26,LOW(_Year_century)
000125 e0b0      	LDI  R27,HIGH(_Year_century)
000126 e1e4      	LDI  R30,LOW(20)
000127 940e 10bd 	CALL __EEPROMWRB
                 ; 0000 00CD main_loop();
                 _0xA:
000129 d001      	RCALL _main_loop
                 ; 0000 00CE 
                 ; 0000 00CF }
                 _0xB:
00012a cfff      	RJMP _0xB
                 ; .FEND
                 ;
                 ;void main_loop()
                 ; 0000 00D2 {
                 _main_loop:
                 ; .FSTART _main_loop
                 ; 0000 00D3     while(1)
                 _0xC:
                 ; 0000 00D4     {
                 ; 0000 00D5         time_date_functions();
00012b d0c9      	RCALL _time_date_functions
                 ; 0000 00D6 
                 ; 0000 00D7 
                 ; 0000 00D8         if (menu_selector == 0)
00012c 91e0 0282 	LDS  R30,_menu_selector
00012e 30e0      	CPI  R30,0
00012f f009      	BREQ PC+2
000130 c0c3      	RJMP _0xF
                 ; 0000 00D9         {
                 ; 0000 00DA             Temp = ds18b20_temperature(0);
000131 e0a0      	LDI  R26,LOW(0)
000132 e0b0      	LDI  R27,0
000133 d4f8      	RCALL _ds18b20_temperature
000134 93e0 026d 	STS  _Temp,R30
000136 93f0 026e 	STS  _Temp+1,R31
000138 9360 026f 	STS  _Temp+2,R22
00013a 9370 0270 	STS  _Temp+3,R23
                 ; 0000 00DB 
                 ; 0000 00DC             if (Second % 10 < 5)
00013c 2da7      	MOV  R26,R7
00013d 27bb      	CLR  R27
00013e e0ea      	LDI  R30,LOW(10)
00013f e0f0      	LDI  R31,HIGH(10)
000140 940e 1043 	CALL __MODW21
000142 9735      	SBIW R30,5
000143 f47c      	BRGE _0x10
                 ; 0000 00DD             {
                 ; 0000 00DE                 sprintf(lcd_buff, "%.4i/%.2i/%.2i ", (Year_century * 100) + Year, Month, Day);
000144 940e 0bb9 	CALL SUBOPT_0x1
000146 940e 0bb4 	CALL SUBOPT_0x0
000148 940e 0bc2 	CALL SUBOPT_0x2
00014a 940e 0fe2 	CALL __CWD1
00014c 940e 109a 	CALL __PUTPARD1
00014e 2de9      	MOV  R30,R9
00014f 940e 0bcb 	CALL SUBOPT_0x3
000151 2de8      	MOV  R30,R8
000152 c01f      	RJMP _0x8F
                 ; 0000 00DF             }
                 ; 0000 00E0             else
                 _0x10:
                 ; 0000 00E1             {
                 ; 0000 00E2                 Georgian2Solar((Year_century * 100) + Year, Month, Day, &sYear, &sMonth, &sDay);
000153 940e 0bb4 	CALL SUBOPT_0x0
000155 940e 0bc2 	CALL SUBOPT_0x2
000157 93fa      	ST   -Y,R31
000158 93ea      	ST   -Y,R30
000159 929a      	ST   -Y,R9
00015a 928a      	ST   -Y,R8
00015b e0ec      	LDI  R30,LOW(12)
00015c e0f0      	LDI  R31,HIGH(12)
00015d 93fa      	ST   -Y,R31
00015e 93ea      	ST   -Y,R30
00015f e0ea      	LDI  R30,LOW(10)
000160 e0f0      	LDI  R31,HIGH(10)
000161 93fa      	ST   -Y,R31
000162 93ea      	ST   -Y,R30
000163 e8a1      	LDI  R26,LOW(_sDay)
000164 e0b2      	LDI  R27,HIGH(_sDay)
000165 d12b      	RCALL _Georgian2Solar
                 ; 0000 00E3                 sprintf(lcd_buff, "%.4i/%.2i/%.2i ", sYear, sMonth, sDay);
000166 940e 0bb9 	CALL SUBOPT_0x1
000168 01f6      	MOVW R30,R12
000169 2766      	CLR  R22
00016a 2777      	CLR  R23
00016b 940e 109a 	CALL __PUTPARD1
00016d 2dea      	MOV  R30,R10
00016e 940e 0bcb 	CALL SUBOPT_0x3
000170 91e0 0281 	LDS  R30,_sDay
                 _0x8F:
000172 27ff      	CLR  R31
000173 2766      	CLR  R22
000174 2777      	CLR  R23
000175 940e 109a 	CALL __PUTPARD1
000177 e08c      	LDI  R24,12
000178 940e 0a8b 	CALL _sprintf
00017a 9660      	ADIW R28,16
                 ; 0000 00E4             }
                 ; 0000 00E5             lcd_gotoxy(0, 0);
00017b e0e0      	LDI  R30,LOW(0)
00017c 940e 0bd1 	CALL SUBOPT_0x4
                 ; 0000 00E6             lcd_puts(lcd_buff);
                 ; 0000 00E7 
                 ; 0000 00E8             switch(Weekday)
00017e 2deb      	MOV  R30,R11
00017f e0f0      	LDI  R31,0
                 ; 0000 00E9             {
                 ; 0000 00EA                 case 1:
000180 30e1      	CPI  R30,LOW(0x1)
000181 e0a0      	LDI  R26,HIGH(0x1)
000182 07fa      	CPC  R31,R26
000183 f429      	BRNE _0x15
                 ; 0000 00EB                     sprintf(lcd_buff, "SUN");
000184 940e 0bd9 	CALL SUBOPT_0x5
                +
000186 e8e4     +LDI R30 , LOW ( 2 * _0x0 + ( 16 ) )
000187 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW1FN _0x0,16
000188 c035      	RJMP _0x90
                 ; 0000 00EC                     break;
                 ; 0000 00ED                 case 2:
                 _0x15:
000189 30e2      	CPI  R30,LOW(0x2)
00018a e0a0      	LDI  R26,HIGH(0x2)
00018b 07fa      	CPC  R31,R26
00018c f429      	BRNE _0x16
                 ; 0000 00EE                     sprintf(lcd_buff, "MON");
00018d 940e 0bd9 	CALL SUBOPT_0x5
                +
00018f e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 20 ) )
000190 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW1FN _0x0,20
000191 c02c      	RJMP _0x90
                 ; 0000 00EF                     break;
                 ; 0000 00F0                 case 3:
                 _0x16:
000192 30e3      	CPI  R30,LOW(0x3)
000193 e0a0      	LDI  R26,HIGH(0x3)
000194 07fa      	CPC  R31,R26
000195 f429      	BRNE _0x17
                 ; 0000 00F1                     sprintf(lcd_buff, "TUE");
000196 940e 0bd9 	CALL SUBOPT_0x5
                +
000198 e8ec     +LDI R30 , LOW ( 2 * _0x0 + ( 24 ) )
000199 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 24 ) )
                 	__POINTW1FN _0x0,24
00019a c023      	RJMP _0x90
                 ; 0000 00F2                     break;
                 ; 0000 00F3                 case 4:
                 _0x17:
00019b 30e4      	CPI  R30,LOW(0x4)
00019c e0a0      	LDI  R26,HIGH(0x4)
00019d 07fa      	CPC  R31,R26
00019e f429      	BRNE _0x18
                 ; 0000 00F4                     sprintf(lcd_buff, "WED");
00019f 940e 0bd9 	CALL SUBOPT_0x5
                +
0001a1 e9e0     +LDI R30 , LOW ( 2 * _0x0 + ( 28 ) )
0001a2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 28 ) )
                 	__POINTW1FN _0x0,28
0001a3 c01a      	RJMP _0x90
                 ; 0000 00F5                     break;
                 ; 0000 00F6                 case 5:
                 _0x18:
0001a4 30e5      	CPI  R30,LOW(0x5)
0001a5 e0a0      	LDI  R26,HIGH(0x5)
0001a6 07fa      	CPC  R31,R26
0001a7 f429      	BRNE _0x19
                 ; 0000 00F7                     sprintf(lcd_buff, "THU");
0001a8 940e 0bd9 	CALL SUBOPT_0x5
                +
0001aa e9e4     +LDI R30 , LOW ( 2 * _0x0 + ( 32 ) )
0001ab e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 32 ) )
                 	__POINTW1FN _0x0,32
0001ac c011      	RJMP _0x90
                 ; 0000 00F8                     break;
                 ; 0000 00F9                 case 6:
                 _0x19:
0001ad 30e6      	CPI  R30,LOW(0x6)
0001ae e0a0      	LDI  R26,HIGH(0x6)
0001af 07fa      	CPC  R31,R26
0001b0 f429      	BRNE _0x1A
                 ; 0000 00FA                     sprintf(lcd_buff, "FRI");
0001b1 940e 0bd9 	CALL SUBOPT_0x5
                +
0001b3 e9e8     +LDI R30 , LOW ( 2 * _0x0 + ( 36 ) )
0001b4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 36 ) )
                 	__POINTW1FN _0x0,36
0001b5 c008      	RJMP _0x90
                 ; 0000 00FB                     break;
                 ; 0000 00FC                 case 7:
                 _0x1A:
0001b6 30e7      	CPI  R30,LOW(0x7)
0001b7 e0a0      	LDI  R26,HIGH(0x7)
0001b8 07fa      	CPC  R31,R26
0001b9 f451      	BRNE _0x14
                 ; 0000 00FD                     sprintf(lcd_buff, "SAT");
0001ba 940e 0bd9 	CALL SUBOPT_0x5
                +
0001bc e9ec     +LDI R30 , LOW ( 2 * _0x0 + ( 40 ) )
0001bd e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 40 ) )
                 	__POINTW1FN _0x0,40
                 _0x90:
0001be 93fa      	ST   -Y,R31
0001bf 93ea      	ST   -Y,R30
0001c0 e080      	LDI  R24,0
0001c1 940e 0a8b 	CALL _sprintf
0001c3 9624      	ADIW R28,4
                 ; 0000 00FE                     break;
                 ; 0000 00FF             }
                 _0x14:
                 ; 0000 0100             lcd_gotoxy(13, 0);
0001c4 e0ed      	LDI  R30,LOW(13)
0001c5 940e 0bd1 	CALL SUBOPT_0x4
                 ; 0000 0101             lcd_puts(lcd_buff);
                 ; 0000 0102             sprintf(lcd_buff, "%.2i:%.2i:%.2i %.1f", Hour, Minute, Second, Temp);
0001c7 940e 0bd9 	CALL SUBOPT_0x5
                +
0001c9 eae0     +LDI R30 , LOW ( 2 * _0x0 + ( 44 ) )
0001ca e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 44 ) )
                 	__POINTW1FN _0x0,44
0001cb 93fa      	ST   -Y,R31
0001cc 93ea      	ST   -Y,R30
0001cd 2de5      	MOV  R30,R5
0001ce 940e 0bcb 	CALL SUBOPT_0x3
0001d0 2de4      	MOV  R30,R4
0001d1 940e 0bcb 	CALL SUBOPT_0x3
0001d3 2de7      	MOV  R30,R7
0001d4 940e 0bcb 	CALL SUBOPT_0x3
0001d6 91e0 026d 	LDS  R30,_Temp
0001d8 91f0 026e 	LDS  R31,_Temp+1
0001da 9160 026f 	LDS  R22,_Temp+2
0001dc 9170 0270 	LDS  R23,_Temp+3
0001de 940e 109a 	CALL __PUTPARD1
0001e0 e180      	LDI  R24,16
0001e1 940e 0a8b 	CALL _sprintf
0001e3 9664      	ADIW R28,20
                 ; 0000 0103             lcd_gotoxy(0, 1);
0001e4 e0e0      	LDI  R30,LOW(0)
0001e5 93ea      	ST   -Y,R30
0001e6 e0a1      	LDI  R26,LOW(1)
0001e7 940e 06a0 	CALL _lcd_gotoxy
                 ; 0000 0104             lcd_puts(lcd_buff);
0001e9 e7a1      	LDI  R26,LOW(_lcd_buff)
0001ea e0b2      	LDI  R27,HIGH(_lcd_buff)
0001eb 940e 06df 	CALL _lcd_puts
                 ; 0000 0105             lcd_putchar(0);
0001ed e0a0      	LDI  R26,LOW(0)
0001ee 940e 06bf 	CALL _lcd_putchar
                 ; 0000 0106             lcd_puts("C  ");
                +
0001f0 e6a0     +LDI R26 , LOW ( _0x1C + ( 0 ) )
0001f1 e0b2     +LDI R27 , HIGH ( _0x1C + ( 0 ) )
                 	__POINTW2MN _0x1C,0
0001f2 940e 06df 	CALL _lcd_puts
                 ; 0000 0107         }
                 ; 0000 0108 
                 ; 0000 0109     }
                 _0xF:
0001f4 cf36      	RJMP _0xC
                 ; 0000 010A }
                 ; .FEND
                 
                 	.DSEG
                 _0x1C:
000260           	.BYTE 0x4
                 ;
                 ;void time_date_functions()
                 ; 0000 010D {
                 
                 	.CSEG
                 _time_date_functions:
                 ; .FSTART _time_date_functions
                 ; 0000 010E     if (menu_selector == 0)
0001f5 91e0 0282 	LDS  R30,_menu_selector
0001f7 30e0      	CPI  R30,0
0001f8 f009      	BREQ PC+2
0001f9 c06e      	RJMP _0x1D
                 ; 0000 010F     {
                 ; 0000 0110         if (Weekday == 0 || Weekday > 7) Weekday = 1;
0001fa 20bb      	TST  R11
0001fb f019      	BREQ _0x1F
0001fc e0e7      	LDI  R30,LOW(7)
0001fd 15eb      	CP   R30,R11
0001fe f410      	BRSH _0x1E
                 _0x1F:
0001ff e0e1      	LDI  R30,LOW(1)
000200 2ebe      	MOV  R11,R30
                 ; 0000 0111         if (Day == 0) Day = 1;
                 _0x1E:
000201 2088      	TST  R8
000202 f411      	BRNE _0x21
000203 e0e1      	LDI  R30,LOW(1)
000204 2e8e      	MOV  R8,R30
                 ; 0000 0112         if ((Day > 31) && (Month == 1 || Month == 3 || Month == 5 || Month == 7 || Month == 8 || Month == 10 || Month == ...
                 _0x21:
000205 e1ef      	LDI  R30,LOW(31)
000206 15e8      	CP   R30,R8
000207 f4b0      	BRSH _0x23
000208 e0e1      	LDI  R30,LOW(1)
000209 15e9      	CP   R30,R9
00020a f091      	BREQ _0x24
00020b e0e3      	LDI  R30,LOW(3)
00020c 15e9      	CP   R30,R9
00020d f079      	BREQ _0x24
00020e e0e5      	LDI  R30,LOW(5)
00020f 15e9      	CP   R30,R9
000210 f061      	BREQ _0x24
000211 e0e7      	LDI  R30,LOW(7)
000212 15e9      	CP   R30,R9
000213 f049      	BREQ _0x24
000214 e0e8      	LDI  R30,LOW(8)
000215 15e9      	CP   R30,R9
000216 f031      	BREQ _0x24
000217 e0ea      	LDI  R30,LOW(10)
000218 15e9      	CP   R30,R9
000219 f019      	BREQ _0x24
00021a e0ec      	LDI  R30,LOW(12)
00021b 15e9      	CP   R30,R9
00021c f409      	BRNE _0x23
                 _0x24:
00021d c001      	RJMP _0x26
                 _0x23:
00021e c003      	RJMP _0x22
                 _0x26:
                 ; 0000 0113         {
                 ; 0000 0114             Day = 1;
00021f e0e1      	LDI  R30,LOW(1)
000220 2e8e      	MOV  R8,R30
                 ; 0000 0115             Month++;
000221 9493      	INC  R9
                 ; 0000 0116         }
                 ; 0000 0117         if ((Day > 30) && (Month == 4 || Month == 6 || Month == 9 || Month == 11))
                 _0x22:
000222 e1ee      	LDI  R30,LOW(30)
000223 15e8      	CP   R30,R8
000224 f468      	BRSH _0x28
000225 e0e4      	LDI  R30,LOW(4)
000226 15e9      	CP   R30,R9
000227 f049      	BREQ _0x29
000228 e0e6      	LDI  R30,LOW(6)
000229 15e9      	CP   R30,R9
00022a f031      	BREQ _0x29
00022b e0e9      	LDI  R30,LOW(9)
00022c 15e9      	CP   R30,R9
00022d f019      	BREQ _0x29
00022e e0eb      	LDI  R30,LOW(11)
00022f 15e9      	CP   R30,R9
000230 f409      	BRNE _0x28
                 _0x29:
000231 c001      	RJMP _0x2B
                 _0x28:
000232 c003      	RJMP _0x27
                 _0x2B:
                 ; 0000 0118         {
                 ; 0000 0119             Day = 1;
000233 e0e1      	LDI  R30,LOW(1)
000234 2e8e      	MOV  R8,R30
                 ; 0000 011A             Month++;
000235 9493      	INC  R9
                 ; 0000 011B         }
                 ; 0000 011C         if (Day > 28 && Month == 2 && isLeapYear((Year_century * 100) + Year, 1) == 0)
                 _0x27:
000236 e1ec      	LDI  R30,LOW(28)
000237 15e8      	CP   R30,R8
000238 f470      	BRSH _0x2D
000239 e0e2      	LDI  R30,LOW(2)
00023a 15e9      	CP   R30,R9
00023b f459      	BRNE _0x2D
00023c 940e 0bb4 	CALL SUBOPT_0x0
00023e 940e 0bc2 	CALL SUBOPT_0x2
000240 93fa      	ST   -Y,R31
000241 93ea      	ST   -Y,R30
000242 e0a1      	LDI  R26,LOW(1)
000243 e0b0      	LDI  R27,0
000244 d024      	RCALL _isLeapYear
000245 9730      	SBIW R30,0
000246 f009      	BREQ _0x2E
                 _0x2D:
000247 c003      	RJMP _0x2C
                 _0x2E:
                 ; 0000 011D         {
                 ; 0000 011E             Day = 1;
000248 e0e1      	LDI  R30,LOW(1)
000249 2e8e      	MOV  R8,R30
                 ; 0000 011F             Month++;
00024a 9493      	INC  R9
                 ; 0000 0120         }
                 ; 0000 0121         if (Month == 0) Month = 1;
                 _0x2C:
00024b 2099      	TST  R9
00024c f411      	BRNE _0x2F
00024d e0e1      	LDI  R30,LOW(1)
00024e 2e9e      	MOV  R9,R30
                 ; 0000 0122         if (Month > 12)
                 _0x2F:
00024f e0ec      	LDI  R30,LOW(12)
000250 15e9      	CP   R30,R9
000251 f418      	BRSH _0x30
                 ; 0000 0123         {
                 ; 0000 0124             Month = 1;
000252 e0e1      	LDI  R30,LOW(1)
000253 2e9e      	MOV  R9,R30
                 ; 0000 0125             Year++;
000254 9463      	INC  R6
                 ; 0000 0126         }
                 ; 0000 0127         if (Year > 99)
                 _0x30:
000255 e6e3      	LDI  R30,LOW(99)
000256 15e6      	CP   R30,R6
000257 f430      	BRSH _0x31
                 ; 0000 0128         {
                 ; 0000 0129             Year = 0;
000258 2466      	CLR  R6
                 ; 0000 012A             Year_century++;
000259 940e 0bb4 	CALL SUBOPT_0x0
00025b 5fef      	SUBI R30,-LOW(1)
00025c 940e 10bd 	CALL __EEPROMWRB
                 ; 0000 012B         }
                 ; 0000 012C         if (Year_century > 99)
                 _0x31:
00025e 940e 0bb4 	CALL SUBOPT_0x0
000260 36e4      	CPI  R30,LOW(0x64)
000261 f030      	BRLO _0x32
                 ; 0000 012D         {
                 ; 0000 012E             Year = 0;
000262 2466      	CLR  R6
                 ; 0000 012F             Year_century = 0;
000263 e0a0      	LDI  R26,LOW(_Year_century)
000264 e0b0      	LDI  R27,HIGH(_Year_century)
000265 e0e0      	LDI  R30,LOW(0)
000266 940e 10bd 	CALL __EEPROMWRB
                 ; 0000 0130         }
                 ; 0000 0131     }
                 _0x32:
                 ; 0000 0132 }
                 _0x1D:
000268 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;int isLeapYear(int _year, int _type)
                 ; 0000 0136 {
                 _isLeapYear:
                 ; .FSTART _isLeapYear
                 ; 0000 0137     switch(_type)
000269 93ba      	ST   -Y,R27
00026a 93aa      	ST   -Y,R26
                 ;	_year -> Y+2
                 ;	_type -> Y+0
00026b 81e8      	LD   R30,Y
00026c 81f9      	LDD  R31,Y+1
                 ; 0000 0138     {
                 ; 0000 0139         case 1:
00026d 30e1      	CPI  R30,LOW(0x1)
00026e e0a0      	LDI  R26,HIGH(0x1)
00026f 07fa      	CPC  R31,R26
000270 f461      	BRNE _0x36
                 ; 0000 013A             if (_year % 4 == 0) return 1; else return 0;
000271 940e 0bde 	CALL SUBOPT_0x6
000273 9730      	SBIW R30,0
000274 f421      	BRNE _0x37
000275 e0e1      	LDI  R30,LOW(1)
000276 e0f0      	LDI  R31,HIGH(1)
000277 940c 0763 	JMP  _0x2120006
                 _0x37:
000279 e0e0      	LDI  R30,LOW(0)
00027a e0f0      	LDI  R31,HIGH(0)
00027b 940c 0763 	JMP  _0x2120006
                 ; 0000 013B             if ((_year % 100 == 0) && (_year % 400 == 0)) return 1; else return 0;
                 ; 0000 013C             break;
                 ; 0000 013D         case 2:
                 _0x36:
00027d 30e2      	CPI  R30,LOW(0x2)
00027e e0a0      	LDI  R26,HIGH(0x2)
00027f 07fa      	CPC  R31,R26
000280 f471      	BRNE _0x35
                 ; 0000 013E             if (_year % 4 == 3) return 1; else return 0;
000281 940e 0bde 	CALL SUBOPT_0x6
000283 30e3      	CPI  R30,LOW(0x3)
000284 e0a0      	LDI  R26,HIGH(0x3)
000285 07fa      	CPC  R31,R26
000286 f421      	BRNE _0x3E
000287 e0e1      	LDI  R30,LOW(1)
000288 e0f0      	LDI  R31,HIGH(1)
000289 940c 0763 	JMP  _0x2120006
                 _0x3E:
00028b e0e0      	LDI  R30,LOW(0)
00028c e0f0      	LDI  R31,HIGH(0)
00028d 940c 0763 	JMP  _0x2120006
                 ; 0000 013F             break;
                 ; 0000 0140     }
                 _0x35:
                 ; 0000 0141 }
00028f 940c 0763 	JMP  _0x2120006
                 ; .FEND
                 ;
                 ;void Georgian2Solar(int gYear, char gMonth, char gDay, unsigned int* sYear, char* sMonth, char* sDay)
                 ; 0000 0144 {
                 _Georgian2Solar:
                 ; .FSTART _Georgian2Solar
                 ; 0000 0145     float s, r;
                 ; 0000 0146     int m;
                 ; 0000 0147     long sa, ss;
                 ; 0000 0148     int ma, ro;
                 ; 0000 0149 
                 ; 0000 014A     s = gYear - 1;
000291 93ba      	ST   -Y,R27
000292 93aa      	ST   -Y,R26
000293 9760      	SBIW R28,16
000294 940e 10d8 	CALL __SAVELOCR6
                 ;	gYear -> Y+30
                 ;	gMonth -> Y+29
                 ;	gDay -> Y+28
                 ;	*sYear -> Y+26
                 ;	*sMonth -> Y+24
                 ;	*sDay -> Y+22
                 ;	s -> Y+18
                 ;	r -> Y+14
                 ;	m -> R16,R17
                 ;	sa -> Y+10
                 ;	ss -> Y+6
                 ;	ma -> R18,R19
                 ;	ro -> R20,R21
000296 8dee      	LDD  R30,Y+30
000297 8dff      	LDD  R31,Y+30+1
000298 9731      	SBIW R30,1
000299 940e 0be5 	CALL SUBOPT_0x7
                +
00029b 8bea     +STD Y + 18 , R30
00029c 8bfb     +STD Y + 18 + 1 , R31
00029d 8b6c     +STD Y + 18 + 2 , R22
00029e 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
                 ; 0000 014B     m = gMonth - 1;
00029f 8ded      	LDD  R30,Y+29
0002a0 e0f0      	LDI  R31,0
0002a1 9731      	SBIW R30,1
0002a2 018f      	MOVW R16,R30
                 ; 0000 014C     r = (s * 365.25) + gDay;
                +
0002a3 89aa     +LDD R26 , Y + 18
0002a4 89bb     +LDD R27 , Y + 18 + 1
0002a5 898c     +LDD R24 , Y + 18 + 2
0002a6 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
0002a7 940e 0bea 	CALL SUBOPT_0x8
0002a9 940e 0f19 	CALL __MULF12
0002ab 01df      	MOVW R26,R30
0002ac 01cb      	MOVW R24,R22
0002ad 8dec      	LDD  R30,Y+28
0002ae e0f0      	LDI  R31,0
0002af 940e 0be5 	CALL SUBOPT_0x7
0002b1 940e 0bef 	CALL SUBOPT_0x9
                 ; 0000 014D 
                 ; 0000 014E     if (gYear % 4 == 0)
0002b3 8dae      	LDD  R26,Y+30
0002b4 8dbf      	LDD  R27,Y+30+1
0002b5 e0e4      	LDI  R30,LOW(4)
0002b6 e0f0      	LDI  R31,HIGH(4)
0002b7 940e 1043 	CALL __MODW21
0002b9 9730      	SBIW R30,0
0002ba f009      	BREQ PC+2
0002bb c07c      	RJMP _0x40
                 ; 0000 014F     {
                 ; 0000 0150         switch(m)
0002bc 01f8      	MOVW R30,R16
                 ; 0000 0151         {
                 ; 0000 0152             case 1:
0002bd 30e1      	CPI  R30,LOW(0x1)
0002be e0a0      	LDI  R26,HIGH(0x1)
0002bf 07fa      	CPC  R31,R26
0002c0 f429      	BRNE _0x44
                 ; 0000 0153                 r += 31; break;
0002c1 940e 0bf6 	CALL SUBOPT_0xA
0002c3 940e 0bfb 	CALL SUBOPT_0xB
0002c5 c06d      	RJMP _0x91
                 ; 0000 0154             case 2:
                 _0x44:
0002c6 30e2      	CPI  R30,LOW(0x2)
0002c7 e0a0      	LDI  R26,HIGH(0x2)
0002c8 07fa      	CPC  R31,R26
0002c9 f439      	BRNE _0x45
                 ; 0000 0155                 r += 60; break;
0002ca 940e 0bf6 	CALL SUBOPT_0xA
                +
0002cc e0a0     +LDI R26 , LOW ( 0x42700000 )
0002cd e0b0     +LDI R27 , HIGH ( 0x42700000 )
0002ce e780     +LDI R24 , BYTE3 ( 0x42700000 )
0002cf e492     +LDI R25 , BYTE4 ( 0x42700000 )
                 	__GETD2N 0x42700000
0002d0 c062      	RJMP _0x91
                 ; 0000 0156             case 3:
                 _0x45:
0002d1 30e3      	CPI  R30,LOW(0x3)
0002d2 e0a0      	LDI  R26,HIGH(0x3)
0002d3 07fa      	CPC  R31,R26
0002d4 f439      	BRNE _0x46
                 ; 0000 0157                 r += 91; break;
0002d5 940e 0bf6 	CALL SUBOPT_0xA
                +
0002d7 e0a0     +LDI R26 , LOW ( 0x42B60000 )
0002d8 e0b0     +LDI R27 , HIGH ( 0x42B60000 )
0002d9 eb86     +LDI R24 , BYTE3 ( 0x42B60000 )
0002da e492     +LDI R25 , BYTE4 ( 0x42B60000 )
                 	__GETD2N 0x42B60000
0002db c057      	RJMP _0x91
                 ; 0000 0158             case 4:
                 _0x46:
0002dc 30e4      	CPI  R30,LOW(0x4)
0002dd e0a0      	LDI  R26,HIGH(0x4)
0002de 07fa      	CPC  R31,R26
0002df f439      	BRNE _0x47
                 ; 0000 0159                 r += 121; break;
0002e0 940e 0bf6 	CALL SUBOPT_0xA
                +
0002e2 e0a0     +LDI R26 , LOW ( 0x42F20000 )
0002e3 e0b0     +LDI R27 , HIGH ( 0x42F20000 )
0002e4 ef82     +LDI R24 , BYTE3 ( 0x42F20000 )
0002e5 e492     +LDI R25 , BYTE4 ( 0x42F20000 )
                 	__GETD2N 0x42F20000
0002e6 c04c      	RJMP _0x91
                 ; 0000 015A             case 5:
                 _0x47:
0002e7 30e5      	CPI  R30,LOW(0x5)
0002e8 e0a0      	LDI  R26,HIGH(0x5)
0002e9 07fa      	CPC  R31,R26
0002ea f439      	BRNE _0x48
                 ; 0000 015B                 r += 152; break;
0002eb 940e 0bf6 	CALL SUBOPT_0xA
                +
0002ed e0a0     +LDI R26 , LOW ( 0x43180000 )
0002ee e0b0     +LDI R27 , HIGH ( 0x43180000 )
0002ef e188     +LDI R24 , BYTE3 ( 0x43180000 )
0002f0 e493     +LDI R25 , BYTE4 ( 0x43180000 )
                 	__GETD2N 0x43180000
0002f1 c041      	RJMP _0x91
                 ; 0000 015C             case 6:
                 _0x48:
0002f2 30e6      	CPI  R30,LOW(0x6)
0002f3 e0a0      	LDI  R26,HIGH(0x6)
0002f4 07fa      	CPC  R31,R26
0002f5 f439      	BRNE _0x49
                 ; 0000 015D                 r += 182; break;
0002f6 940e 0bf6 	CALL SUBOPT_0xA
                +
0002f8 e0a0     +LDI R26 , LOW ( 0x43360000 )
0002f9 e0b0     +LDI R27 , HIGH ( 0x43360000 )
0002fa e386     +LDI R24 , BYTE3 ( 0x43360000 )
0002fb e493     +LDI R25 , BYTE4 ( 0x43360000 )
                 	__GETD2N 0x43360000
0002fc c036      	RJMP _0x91
                 ; 0000 015E             case 7:
                 _0x49:
0002fd 30e7      	CPI  R30,LOW(0x7)
0002fe e0a0      	LDI  R26,HIGH(0x7)
0002ff 07fa      	CPC  R31,R26
000300 f439      	BRNE _0x4A
                 ; 0000 015F                 r += 213; break;
000301 940e 0bf6 	CALL SUBOPT_0xA
                +
000303 e0a0     +LDI R26 , LOW ( 0x43550000 )
000304 e0b0     +LDI R27 , HIGH ( 0x43550000 )
000305 e585     +LDI R24 , BYTE3 ( 0x43550000 )
000306 e493     +LDI R25 , BYTE4 ( 0x43550000 )
                 	__GETD2N 0x43550000
000307 c02b      	RJMP _0x91
                 ; 0000 0160             case 8:
                 _0x4A:
000308 30e8      	CPI  R30,LOW(0x8)
000309 e0a0      	LDI  R26,HIGH(0x8)
00030a 07fa      	CPC  R31,R26
00030b f439      	BRNE _0x4B
                 ; 0000 0161                 r += 244; break;
00030c 940e 0bf6 	CALL SUBOPT_0xA
                +
00030e e0a0     +LDI R26 , LOW ( 0x43740000 )
00030f e0b0     +LDI R27 , HIGH ( 0x43740000 )
000310 e784     +LDI R24 , BYTE3 ( 0x43740000 )
000311 e493     +LDI R25 , BYTE4 ( 0x43740000 )
                 	__GETD2N 0x43740000
000312 c020      	RJMP _0x91
                 ; 0000 0162             case 9:
                 _0x4B:
000313 30e9      	CPI  R30,LOW(0x9)
000314 e0a0      	LDI  R26,HIGH(0x9)
000315 07fa      	CPC  R31,R26
000316 f439      	BRNE _0x4C
                 ; 0000 0163                 r += 274; break;
000317 940e 0bf6 	CALL SUBOPT_0xA
                +
000319 e0a0     +LDI R26 , LOW ( 0x43890000 )
00031a e0b0     +LDI R27 , HIGH ( 0x43890000 )
00031b e889     +LDI R24 , BYTE3 ( 0x43890000 )
00031c e493     +LDI R25 , BYTE4 ( 0x43890000 )
                 	__GETD2N 0x43890000
00031d c015      	RJMP _0x91
                 ; 0000 0164             case 10:
                 _0x4C:
00031e 30ea      	CPI  R30,LOW(0xA)
00031f e0a0      	LDI  R26,HIGH(0xA)
000320 07fa      	CPC  R31,R26
000321 f439      	BRNE _0x4D
                 ; 0000 0165                 r += 305; break;
000322 940e 0bf6 	CALL SUBOPT_0xA
                +
000324 e0a0     +LDI R26 , LOW ( 0x43988000 )
000325 e8b0     +LDI R27 , HIGH ( 0x43988000 )
000326 e988     +LDI R24 , BYTE3 ( 0x43988000 )
000327 e493     +LDI R25 , BYTE4 ( 0x43988000 )
                 	__GETD2N 0x43988000
000328 c00a      	RJMP _0x91
                 ; 0000 0166             case 11:
                 _0x4D:
000329 30eb      	CPI  R30,LOW(0xB)
00032a e0a0      	LDI  R26,HIGH(0xB)
00032b 07fa      	CPC  R31,R26
00032c f451      	BRNE _0x43
                 ; 0000 0167                 r += 335; break;
00032d 940e 0bf6 	CALL SUBOPT_0xA
                +
00032f e0a0     +LDI R26 , LOW ( 0x43A78000 )
000330 e8b0     +LDI R27 , HIGH ( 0x43A78000 )
000331 ea87     +LDI R24 , BYTE3 ( 0x43A78000 )
000332 e493     +LDI R25 , BYTE4 ( 0x43A78000 )
                 	__GETD2N 0x43A78000
                 _0x91:
000333 940e 0ec9 	CALL __ADDF12
000335 940e 0c00 	CALL SUBOPT_0xC
                 ; 0000 0168         }
                 _0x43:
                 ; 0000 0169     }
                 ; 0000 016A     else
000337 c07b      	RJMP _0x4F
                 _0x40:
                 ; 0000 016B     {
                 ; 0000 016C         switch(m)
000338 01f8      	MOVW R30,R16
                 ; 0000 016D         {
                 ; 0000 016E             case 1:
000339 30e1      	CPI  R30,LOW(0x1)
00033a e0a0      	LDI  R26,HIGH(0x1)
00033b 07fa      	CPC  R31,R26
00033c f429      	BRNE _0x53
                 ; 0000 016F                 r += 31; break;
00033d 940e 0bf6 	CALL SUBOPT_0xA
00033f 940e 0bfb 	CALL SUBOPT_0xB
000341 c06d      	RJMP _0x92
                 ; 0000 0170             case 2:
                 _0x53:
000342 30e2      	CPI  R30,LOW(0x2)
000343 e0a0      	LDI  R26,HIGH(0x2)
000344 07fa      	CPC  R31,R26
000345 f439      	BRNE _0x54
                 ; 0000 0171                 r += 59; break;
000346 940e 0bf6 	CALL SUBOPT_0xA
                +
000348 e0a0     +LDI R26 , LOW ( 0x426C0000 )
000349 e0b0     +LDI R27 , HIGH ( 0x426C0000 )
00034a e68c     +LDI R24 , BYTE3 ( 0x426C0000 )
00034b e492     +LDI R25 , BYTE4 ( 0x426C0000 )
                 	__GETD2N 0x426C0000
00034c c062      	RJMP _0x92
                 ; 0000 0172             case 3:
                 _0x54:
00034d 30e3      	CPI  R30,LOW(0x3)
00034e e0a0      	LDI  R26,HIGH(0x3)
00034f 07fa      	CPC  R31,R26
000350 f439      	BRNE _0x55
                 ; 0000 0173                 r += 90; break;
000351 940e 0bf6 	CALL SUBOPT_0xA
                +
000353 e0a0     +LDI R26 , LOW ( 0x42B40000 )
000354 e0b0     +LDI R27 , HIGH ( 0x42B40000 )
000355 eb84     +LDI R24 , BYTE3 ( 0x42B40000 )
000356 e492     +LDI R25 , BYTE4 ( 0x42B40000 )
                 	__GETD2N 0x42B40000
000357 c057      	RJMP _0x92
                 ; 0000 0174             case 4:
                 _0x55:
000358 30e4      	CPI  R30,LOW(0x4)
000359 e0a0      	LDI  R26,HIGH(0x4)
00035a 07fa      	CPC  R31,R26
00035b f439      	BRNE _0x56
                 ; 0000 0175                 r += 120; break;
00035c 940e 0bf6 	CALL SUBOPT_0xA
                +
00035e e0a0     +LDI R26 , LOW ( 0x42F00000 )
00035f e0b0     +LDI R27 , HIGH ( 0x42F00000 )
000360 ef80     +LDI R24 , BYTE3 ( 0x42F00000 )
000361 e492     +LDI R25 , BYTE4 ( 0x42F00000 )
                 	__GETD2N 0x42F00000
000362 c04c      	RJMP _0x92
                 ; 0000 0176             case 5:
                 _0x56:
000363 30e5      	CPI  R30,LOW(0x5)
000364 e0a0      	LDI  R26,HIGH(0x5)
000365 07fa      	CPC  R31,R26
000366 f439      	BRNE _0x57
                 ; 0000 0177                 r += 151; break;
000367 940e 0bf6 	CALL SUBOPT_0xA
                +
000369 e0a0     +LDI R26 , LOW ( 0x43170000 )
00036a e0b0     +LDI R27 , HIGH ( 0x43170000 )
00036b e187     +LDI R24 , BYTE3 ( 0x43170000 )
00036c e493     +LDI R25 , BYTE4 ( 0x43170000 )
                 	__GETD2N 0x43170000
00036d c041      	RJMP _0x92
                 ; 0000 0178             case 6:
                 _0x57:
00036e 30e6      	CPI  R30,LOW(0x6)
00036f e0a0      	LDI  R26,HIGH(0x6)
000370 07fa      	CPC  R31,R26
000371 f439      	BRNE _0x58
                 ; 0000 0179                 r += 181; break;
000372 940e 0bf6 	CALL SUBOPT_0xA
                +
000374 e0a0     +LDI R26 , LOW ( 0x43350000 )
000375 e0b0     +LDI R27 , HIGH ( 0x43350000 )
000376 e385     +LDI R24 , BYTE3 ( 0x43350000 )
000377 e493     +LDI R25 , BYTE4 ( 0x43350000 )
                 	__GETD2N 0x43350000
000378 c036      	RJMP _0x92
                 ; 0000 017A             case 7:
                 _0x58:
000379 30e7      	CPI  R30,LOW(0x7)
00037a e0a0      	LDI  R26,HIGH(0x7)
00037b 07fa      	CPC  R31,R26
00037c f439      	BRNE _0x59
                 ; 0000 017B                 r += 212; break;
00037d 940e 0bf6 	CALL SUBOPT_0xA
                +
00037f e0a0     +LDI R26 , LOW ( 0x43540000 )
000380 e0b0     +LDI R27 , HIGH ( 0x43540000 )
000381 e584     +LDI R24 , BYTE3 ( 0x43540000 )
000382 e493     +LDI R25 , BYTE4 ( 0x43540000 )
                 	__GETD2N 0x43540000
000383 c02b      	RJMP _0x92
                 ; 0000 017C             case 8:
                 _0x59:
000384 30e8      	CPI  R30,LOW(0x8)
000385 e0a0      	LDI  R26,HIGH(0x8)
000386 07fa      	CPC  R31,R26
000387 f439      	BRNE _0x5A
                 ; 0000 017D                 r += 243; break;
000388 940e 0bf6 	CALL SUBOPT_0xA
                +
00038a e0a0     +LDI R26 , LOW ( 0x43730000 )
00038b e0b0     +LDI R27 , HIGH ( 0x43730000 )
00038c e783     +LDI R24 , BYTE3 ( 0x43730000 )
00038d e493     +LDI R25 , BYTE4 ( 0x43730000 )
                 	__GETD2N 0x43730000
00038e c020      	RJMP _0x92
                 ; 0000 017E             case 9:
                 _0x5A:
00038f 30e9      	CPI  R30,LOW(0x9)
000390 e0a0      	LDI  R26,HIGH(0x9)
000391 07fa      	CPC  R31,R26
000392 f439      	BRNE _0x5B
                 ; 0000 017F                 r += 273; break;
000393 940e 0bf6 	CALL SUBOPT_0xA
                +
000395 e0a0     +LDI R26 , LOW ( 0x43888000 )
000396 e8b0     +LDI R27 , HIGH ( 0x43888000 )
000397 e888     +LDI R24 , BYTE3 ( 0x43888000 )
000398 e493     +LDI R25 , BYTE4 ( 0x43888000 )
                 	__GETD2N 0x43888000
000399 c015      	RJMP _0x92
                 ; 0000 0180             case 10:
                 _0x5B:
00039a 30ea      	CPI  R30,LOW(0xA)
00039b e0a0      	LDI  R26,HIGH(0xA)
00039c 07fa      	CPC  R31,R26
00039d f439      	BRNE _0x5C
                 ; 0000 0181                 r += 304; break;
00039e 940e 0bf6 	CALL SUBOPT_0xA
                +
0003a0 e0a0     +LDI R26 , LOW ( 0x43980000 )
0003a1 e0b0     +LDI R27 , HIGH ( 0x43980000 )
0003a2 e988     +LDI R24 , BYTE3 ( 0x43980000 )
0003a3 e493     +LDI R25 , BYTE4 ( 0x43980000 )
                 	__GETD2N 0x43980000
0003a4 c00a      	RJMP _0x92
                 ; 0000 0182             case 11:
                 _0x5C:
0003a5 30eb      	CPI  R30,LOW(0xB)
0003a6 e0a0      	LDI  R26,HIGH(0xB)
0003a7 07fa      	CPC  R31,R26
0003a8 f451      	BRNE _0x52
                 ; 0000 0183                 r += 334; break;
0003a9 940e 0bf6 	CALL SUBOPT_0xA
                +
0003ab e0a0     +LDI R26 , LOW ( 0x43A70000 )
0003ac e0b0     +LDI R27 , HIGH ( 0x43A70000 )
0003ad ea87     +LDI R24 , BYTE3 ( 0x43A70000 )
0003ae e493     +LDI R25 , BYTE4 ( 0x43A70000 )
                 	__GETD2N 0x43A70000
                 _0x92:
0003af 940e 0ec9 	CALL __ADDF12
0003b1 940e 0c00 	CALL SUBOPT_0xC
                 ; 0000 0184         }
                 _0x52:
                 ; 0000 0185     }
                 _0x4F:
                 ; 0000 0186     r -= 226899;
0003b3 940e 0bf6 	CALL SUBOPT_0xA
                +
0003b5 eca0     +LDI R26 , LOW ( 0x485D94C0 )
0003b6 e9b4     +LDI R27 , HIGH ( 0x485D94C0 )
0003b7 e58d     +LDI R24 , BYTE3 ( 0x485D94C0 )
0003b8 e498     +LDI R25 , BYTE4 ( 0x485D94C0 )
                 	__GETD2N 0x485D94C0
0003b9 940e 0ec2 	CALL __SUBF12
0003bb 940e 0c00 	CALL SUBOPT_0xC
                 ; 0000 0187     sa = (r / 365.25) + 1;
0003bd 940e 0c05 	CALL SUBOPT_0xD
0003bf 940e 0c0d 	CALL SUBOPT_0xE
0003c1 940e 0ec9 	CALL __ADDF12
0003c3 01de      	MOVW R26,R28
0003c4 961a      	ADIW R26,10
0003c5 940e 0e58 	CALL __CFD1
0003c7 940e 107f 	CALL __PUTDP1
                 ; 0000 0188     ss = r / 365.25;
0003c9 940e 0c05 	CALL SUBOPT_0xD
0003cb 01de      	MOVW R26,R28
0003cc 9616      	ADIW R26,6
0003cd 940e 0e58 	CALL __CFD1
0003cf 940e 107f 	CALL __PUTDP1
                 ; 0000 0189     r -= (ss * 365.25) + 0.25;
                +
0003d1 81ee     +LDD R30 , Y + 6
0003d2 81ff     +LDD R31 , Y + 6 + 1
0003d3 8568     +LDD R22 , Y + 6 + 2
0003d4 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
0003d5 940e 0e8f 	CALL __CDF1
                +
0003d7 e0a0     +LDI R26 , LOW ( 0x43B6A000 )
0003d8 eab0     +LDI R27 , HIGH ( 0x43B6A000 )
0003d9 eb86     +LDI R24 , BYTE3 ( 0x43B6A000 )
0003da e493     +LDI R25 , BYTE4 ( 0x43B6A000 )
                 	__GETD2N 0x43B6A000
0003db 940e 0f19 	CALL __MULF12
                +
0003dd e0a0     +LDI R26 , LOW ( 0x3E800000 )
0003de e0b0     +LDI R27 , HIGH ( 0x3E800000 )
0003df e880     +LDI R24 , BYTE3 ( 0x3E800000 )
0003e0 e39e     +LDI R25 , BYTE4 ( 0x3E800000 )
                 	__GETD2N 0x3E800000
0003e1 940e 0ec9 	CALL __ADDF12
0003e3 940e 0c12 	CALL SUBOPT_0xF
0003e5 940e 0c17 	CALL SUBOPT_0x10
0003e7 940e 0c00 	CALL SUBOPT_0xC
                 ; 0000 018A     if (sa % 4 == 3) r += 1;
0003e9 940e 0c1c 	CALL SUBOPT_0x11
                +
0003eb 30e3     +CPI R30 , LOW ( 0x3 )
0003ec e0a0     +LDI R26 , HIGH ( 0x3 )
0003ed 07fa     +CPC R31 , R26
0003ee e0a0     +LDI R26 , BYTE3 ( 0x3 )
0003ef 076a     +CPC R22 , R26
0003f0 e0a0     +LDI R26 , BYTE4 ( 0x3 )
0003f1 077a     +CPC R23 , R26
                 	__CPD1N 0x3
0003f2 f431      	BRNE _0x5E
0003f3 940e 0bf6 	CALL SUBOPT_0xA
0003f5 940e 0c0d 	CALL SUBOPT_0xE
0003f7 940e 0bef 	CALL SUBOPT_0x9
                 ; 0000 018B     if (r >= 336) {ma = 12; ro = r - 336;}
                 _0x5E:
0003f9 940e 0c12 	CALL SUBOPT_0xF
                +
0003fb e0e0     +LDI R30 , LOW ( 0x43A80000 )
0003fc e0f0     +LDI R31 , HIGH ( 0x43A80000 )
0003fd ea68     +LDI R22 , BYTE3 ( 0x43A80000 )
0003fe e473     +LDI R23 , BYTE4 ( 0x43A80000 )
                 	__GETD1N 0x43A80000
0003ff 940e 0fac 	CALL __CMPF12
000401 f058      	BRLO _0x5F
                +
000402 e02c     +LDI R18 , LOW ( 12 )
000403 e030     +LDI R19 , HIGH ( 12 )
                 	__GETWRN 18,19,12
000404 940e 0bf6 	CALL SUBOPT_0xA
                +
000406 e0a0     +LDI R26 , LOW ( 0x43A80000 )
000407 e0b0     +LDI R27 , HIGH ( 0x43A80000 )
000408 ea88     +LDI R24 , BYTE3 ( 0x43A80000 )
000409 e493     +LDI R25 , BYTE4 ( 0x43A80000 )
                 	__GETD2N 0x43A80000
00040a 940e 0c27 	CALL SUBOPT_0x12
                 ; 0000 018C     else if (r >= 306) {ma = 11; ro = r - 306;}
00040c c0e6      	RJMP _0x60
                 _0x5F:
00040d 940e 0c12 	CALL SUBOPT_0xF
                +
00040f e0e0     +LDI R30 , LOW ( 0x43990000 )
000410 e0f0     +LDI R31 , HIGH ( 0x43990000 )
000411 e969     +LDI R22 , BYTE3 ( 0x43990000 )
000412 e473     +LDI R23 , BYTE4 ( 0x43990000 )
                 	__GETD1N 0x43990000
000413 940e 0fac 	CALL __CMPF12
000415 f058      	BRLO _0x61
                +
000416 e02b     +LDI R18 , LOW ( 11 )
000417 e030     +LDI R19 , HIGH ( 11 )
                 	__GETWRN 18,19,11
000418 940e 0bf6 	CALL SUBOPT_0xA
                +
00041a e0a0     +LDI R26 , LOW ( 0x43990000 )
00041b e0b0     +LDI R27 , HIGH ( 0x43990000 )
00041c e989     +LDI R24 , BYTE3 ( 0x43990000 )
00041d e493     +LDI R25 , BYTE4 ( 0x43990000 )
                 	__GETD2N 0x43990000
00041e 940e 0c27 	CALL SUBOPT_0x12
                 ; 0000 018D     else if (r >= 276) {ma = 10; ro = r - 276;}
000420 c0d2      	RJMP _0x62
                 _0x61:
000421 940e 0c12 	CALL SUBOPT_0xF
                +
000423 e0e0     +LDI R30 , LOW ( 0x438A0000 )
000424 e0f0     +LDI R31 , HIGH ( 0x438A0000 )
000425 e86a     +LDI R22 , BYTE3 ( 0x438A0000 )
000426 e473     +LDI R23 , BYTE4 ( 0x438A0000 )
                 	__GETD1N 0x438A0000
000427 940e 0fac 	CALL __CMPF12
000429 f058      	BRLO _0x63
                +
00042a e02a     +LDI R18 , LOW ( 10 )
00042b e030     +LDI R19 , HIGH ( 10 )
                 	__GETWRN 18,19,10
00042c 940e 0bf6 	CALL SUBOPT_0xA
                +
00042e e0a0     +LDI R26 , LOW ( 0x438A0000 )
00042f e0b0     +LDI R27 , HIGH ( 0x438A0000 )
000430 e88a     +LDI R24 , BYTE3 ( 0x438A0000 )
000431 e493     +LDI R25 , BYTE4 ( 0x438A0000 )
                 	__GETD2N 0x438A0000
000432 940e 0c27 	CALL SUBOPT_0x12
                 ; 0000 018E     else if (r >= 246) {ma = 9; ro = r - 246;}
000434 c0be      	RJMP _0x64
                 _0x63:
000435 940e 0c12 	CALL SUBOPT_0xF
                +
000437 e0e0     +LDI R30 , LOW ( 0x43760000 )
000438 e0f0     +LDI R31 , HIGH ( 0x43760000 )
000439 e766     +LDI R22 , BYTE3 ( 0x43760000 )
00043a e473     +LDI R23 , BYTE4 ( 0x43760000 )
                 	__GETD1N 0x43760000
00043b 940e 0fac 	CALL __CMPF12
00043d f058      	BRLO _0x65
                +
00043e e029     +LDI R18 , LOW ( 9 )
00043f e030     +LDI R19 , HIGH ( 9 )
                 	__GETWRN 18,19,9
000440 940e 0bf6 	CALL SUBOPT_0xA
                +
000442 e0a0     +LDI R26 , LOW ( 0x43760000 )
000443 e0b0     +LDI R27 , HIGH ( 0x43760000 )
000444 e786     +LDI R24 , BYTE3 ( 0x43760000 )
000445 e493     +LDI R25 , BYTE4 ( 0x43760000 )
                 	__GETD2N 0x43760000
000446 940e 0c27 	CALL SUBOPT_0x12
                 ; 0000 018F     else if (r >= 216) {ma = 8; ro = r - 216;}
000448 c0aa      	RJMP _0x66
                 _0x65:
000449 940e 0c12 	CALL SUBOPT_0xF
                +
00044b e0e0     +LDI R30 , LOW ( 0x43580000 )
00044c e0f0     +LDI R31 , HIGH ( 0x43580000 )
00044d e568     +LDI R22 , BYTE3 ( 0x43580000 )
00044e e473     +LDI R23 , BYTE4 ( 0x43580000 )
                 	__GETD1N 0x43580000
00044f 940e 0fac 	CALL __CMPF12
000451 f058      	BRLO _0x67
                +
000452 e028     +LDI R18 , LOW ( 8 )
000453 e030     +LDI R19 , HIGH ( 8 )
                 	__GETWRN 18,19,8
000454 940e 0bf6 	CALL SUBOPT_0xA
                +
000456 e0a0     +LDI R26 , LOW ( 0x43580000 )
000457 e0b0     +LDI R27 , HIGH ( 0x43580000 )
000458 e588     +LDI R24 , BYTE3 ( 0x43580000 )
000459 e493     +LDI R25 , BYTE4 ( 0x43580000 )
                 	__GETD2N 0x43580000
00045a 940e 0c27 	CALL SUBOPT_0x12
                 ; 0000 0190     else if (r >= 186) {ma = 7; ro = r - 186;}
00045c c096      	RJMP _0x68
                 _0x67:
00045d 940e 0c12 	CALL SUBOPT_0xF
                +
00045f e0e0     +LDI R30 , LOW ( 0x433A0000 )
000460 e0f0     +LDI R31 , HIGH ( 0x433A0000 )
000461 e36a     +LDI R22 , BYTE3 ( 0x433A0000 )
000462 e473     +LDI R23 , BYTE4 ( 0x433A0000 )
                 	__GETD1N 0x433A0000
000463 940e 0fac 	CALL __CMPF12
000465 f058      	BRLO _0x69
                +
000466 e027     +LDI R18 , LOW ( 7 )
000467 e030     +LDI R19 , HIGH ( 7 )
                 	__GETWRN 18,19,7
000468 940e 0bf6 	CALL SUBOPT_0xA
                +
00046a e0a0     +LDI R26 , LOW ( 0x433A0000 )
00046b e0b0     +LDI R27 , HIGH ( 0x433A0000 )
00046c e38a     +LDI R24 , BYTE3 ( 0x433A0000 )
00046d e493     +LDI R25 , BYTE4 ( 0x433A0000 )
                 	__GETD2N 0x433A0000
00046e 940e 0c27 	CALL SUBOPT_0x12
                 ; 0000 0191     else if (r >= 155) {ma = 6; ro = r - 155;}
000470 c082      	RJMP _0x6A
                 _0x69:
000471 940e 0c12 	CALL SUBOPT_0xF
                +
000473 e0e0     +LDI R30 , LOW ( 0x431B0000 )
000474 e0f0     +LDI R31 , HIGH ( 0x431B0000 )
000475 e16b     +LDI R22 , BYTE3 ( 0x431B0000 )
000476 e473     +LDI R23 , BYTE4 ( 0x431B0000 )
                 	__GETD1N 0x431B0000
000477 940e 0fac 	CALL __CMPF12
000479 f058      	BRLO _0x6B
                +
00047a e026     +LDI R18 , LOW ( 6 )
00047b e030     +LDI R19 , HIGH ( 6 )
                 	__GETWRN 18,19,6
00047c 940e 0bf6 	CALL SUBOPT_0xA
                +
00047e e0a0     +LDI R26 , LOW ( 0x431B0000 )
00047f e0b0     +LDI R27 , HIGH ( 0x431B0000 )
000480 e18b     +LDI R24 , BYTE3 ( 0x431B0000 )
000481 e493     +LDI R25 , BYTE4 ( 0x431B0000 )
                 	__GETD2N 0x431B0000
000482 940e 0c27 	CALL SUBOPT_0x12
                 ; 0000 0192     else if (r >= 124) {ma = 5; ro = r - 124;}
000484 c06e      	RJMP _0x6C
                 _0x6B:
000485 940e 0c12 	CALL SUBOPT_0xF
                +
000487 e0e0     +LDI R30 , LOW ( 0x42F80000 )
000488 e0f0     +LDI R31 , HIGH ( 0x42F80000 )
000489 ef68     +LDI R22 , BYTE3 ( 0x42F80000 )
00048a e472     +LDI R23 , BYTE4 ( 0x42F80000 )
                 	__GETD1N 0x42F80000
00048b 940e 0fac 	CALL __CMPF12
00048d f058      	BRLO _0x6D
                +
00048e e025     +LDI R18 , LOW ( 5 )
00048f e030     +LDI R19 , HIGH ( 5 )
                 	__GETWRN 18,19,5
000490 940e 0bf6 	CALL SUBOPT_0xA
                +
000492 e0a0     +LDI R26 , LOW ( 0x42F80000 )
000493 e0b0     +LDI R27 , HIGH ( 0x42F80000 )
000494 ef88     +LDI R24 , BYTE3 ( 0x42F80000 )
000495 e492     +LDI R25 , BYTE4 ( 0x42F80000 )
                 	__GETD2N 0x42F80000
000496 940e 0c27 	CALL SUBOPT_0x12
                 ; 0000 0193     else if (r >= 93) {ma = 4; ro = r - 93;}
000498 c05a      	RJMP _0x6E
                 _0x6D:
000499 940e 0c12 	CALL SUBOPT_0xF
                +
00049b e0e0     +LDI R30 , LOW ( 0x42BA0000 )
00049c e0f0     +LDI R31 , HIGH ( 0x42BA0000 )
00049d eb6a     +LDI R22 , BYTE3 ( 0x42BA0000 )
00049e e472     +LDI R23 , BYTE4 ( 0x42BA0000 )
                 	__GETD1N 0x42BA0000
00049f 940e 0fac 	CALL __CMPF12
0004a1 f058      	BRLO _0x6F
                +
0004a2 e024     +LDI R18 , LOW ( 4 )
0004a3 e030     +LDI R19 , HIGH ( 4 )
                 	__GETWRN 18,19,4
0004a4 940e 0bf6 	CALL SUBOPT_0xA
                +
0004a6 e0a0     +LDI R26 , LOW ( 0x42BA0000 )
0004a7 e0b0     +LDI R27 , HIGH ( 0x42BA0000 )
0004a8 eb8a     +LDI R24 , BYTE3 ( 0x42BA0000 )
0004a9 e492     +LDI R25 , BYTE4 ( 0x42BA0000 )
                 	__GETD2N 0x42BA0000
0004aa 940e 0c27 	CALL SUBOPT_0x12
                 ; 0000 0194     else if (r >= 62) {ma = 3; ro = r - 62;}
0004ac c046      	RJMP _0x70
                 _0x6F:
0004ad 940e 0c12 	CALL SUBOPT_0xF
                +
0004af e0e0     +LDI R30 , LOW ( 0x42780000 )
0004b0 e0f0     +LDI R31 , HIGH ( 0x42780000 )
0004b1 e768     +LDI R22 , BYTE3 ( 0x42780000 )
0004b2 e472     +LDI R23 , BYTE4 ( 0x42780000 )
                 	__GETD1N 0x42780000
0004b3 940e 0fac 	CALL __CMPF12
0004b5 f058      	BRLO _0x71
                +
0004b6 e023     +LDI R18 , LOW ( 3 )
0004b7 e030     +LDI R19 , HIGH ( 3 )
                 	__GETWRN 18,19,3
0004b8 940e 0bf6 	CALL SUBOPT_0xA
                +
0004ba e0a0     +LDI R26 , LOW ( 0x42780000 )
0004bb e0b0     +LDI R27 , HIGH ( 0x42780000 )
0004bc e788     +LDI R24 , BYTE3 ( 0x42780000 )
0004bd e492     +LDI R25 , BYTE4 ( 0x42780000 )
                 	__GETD2N 0x42780000
0004be 940e 0c27 	CALL SUBOPT_0x12
                 ; 0000 0195     else if (r >= 31) {ma = 2; ro = r - 31;}
0004c0 c032      	RJMP _0x72
                 _0x71:
0004c1 940e 0c12 	CALL SUBOPT_0xF
                +
0004c3 e0e0     +LDI R30 , LOW ( 0x41F80000 )
0004c4 e0f0     +LDI R31 , HIGH ( 0x41F80000 )
0004c5 ef68     +LDI R22 , BYTE3 ( 0x41F80000 )
0004c6 e471     +LDI R23 , BYTE4 ( 0x41F80000 )
                 	__GETD1N 0x41F80000
0004c7 940e 0fac 	CALL __CMPF12
0004c9 f048      	BRLO _0x73
                +
0004ca e022     +LDI R18 , LOW ( 2 )
0004cb e030     +LDI R19 , HIGH ( 2 )
                 	__GETWRN 18,19,2
0004cc 940e 0bf6 	CALL SUBOPT_0xA
0004ce 940e 0bfb 	CALL SUBOPT_0xB
0004d0 940e 0c27 	CALL SUBOPT_0x12
                 ; 0000 0196     else if (r > 0) {ma = 1; ro = r;}
0004d2 c020      	RJMP _0x74
                 _0x73:
0004d3 940e 0c12 	CALL SUBOPT_0xF
0004d5 940e 10d2 	CALL __CPD02
0004d7 f444      	BRGE _0x75
                +
0004d8 e021     +LDI R18 , LOW ( 1 )
0004d9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
0004da 940e 0bf6 	CALL SUBOPT_0xA
0004dc 940e 0e58 	CALL __CFD1
0004de 01af      	MOVW R20,R30
                 ; 0000 0197     else if (r == 0)
0004df c013      	RJMP _0x76
                 _0x75:
0004e0 940e 0bf6 	CALL SUBOPT_0xA
0004e2 940e 10ce 	CALL __CPD10
0004e4 f471      	BRNE _0x77
                 ; 0000 0198     {
                 ; 0000 0199         if (sa % 4 != 0) {sa -= 1; ma = 12; ro = 29;}
0004e5 940e 0c1c 	CALL SUBOPT_0x11
0004e7 940e 10ce 	CALL __CPD10
0004e9 f029      	BREQ _0x78
0004ea 940e 0c2d 	CALL SUBOPT_0x13
                +
0004ec e14d     +LDI R20 , LOW ( 29 )
0004ed e050     +LDI R21 , HIGH ( 29 )
                 	__GETWRN 20,21,29
                 ; 0000 019A         else {sa -= 1; ma = 12; ro = 30;}
0004ee c004      	RJMP _0x79
                 _0x78:
0004ef 940e 0c2d 	CALL SUBOPT_0x13
                +
0004f1 e14e     +LDI R20 , LOW ( 30 )
0004f2 e050     +LDI R21 , HIGH ( 30 )
                 	__GETWRN 20,21,30
                 _0x79:
                 ; 0000 019B     }
                 ; 0000 019C     if (ro < 1)
                 _0x77:
                 _0x76:
                 _0x74:
                 _0x72:
                 _0x70:
                 _0x6E:
                 _0x6C:
                 _0x6A:
                 _0x68:
                 _0x66:
                 _0x64:
                 _0x62:
                 _0x60:
                +
0004f3 3041     +CPI R20 , LOW ( 1 )
0004f4 e0e0     +LDI R30 , HIGH ( 1 )
0004f5 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1
0004f6 f00c      	BRLT PC+2
0004f7 c072      	RJMP _0x7A
                 ; 0000 019D     {
                 ; 0000 019E         switch(ma)
0004f8 01f9      	MOVW R30,R18
                 ; 0000 019F         {
                 ; 0000 01A0             case 1:
0004f9 30e1      	CPI  R30,LOW(0x1)
0004fa e0a0      	LDI  R26,HIGH(0x1)
0004fb 07fa      	CPC  R31,R26
0004fc f499      	BRNE _0x7E
                 ; 0000 01A1                 sa -= 1; ma = 12;
0004fd 940e 0c2d 	CALL SUBOPT_0x13
                 ; 0000 01A2                 if (isLeapYear(sa, 2) == 1) ro = 30; else ro = 29;
0004ff 85ea      	LDD  R30,Y+10
000500 85fb      	LDD  R31,Y+10+1
000501 93fa      	ST   -Y,R31
000502 93ea      	ST   -Y,R30
000503 e0a2      	LDI  R26,LOW(2)
000504 e0b0      	LDI  R27,0
000505 dd63      	RCALL _isLeapYear
000506 30e1      	CPI  R30,LOW(0x1)
000507 e0a0      	LDI  R26,HIGH(0x1)
000508 07fa      	CPC  R31,R26
000509 f419      	BRNE _0x7F
                +
00050a e14e     +LDI R20 , LOW ( 30 )
00050b e050     +LDI R21 , HIGH ( 30 )
                 	__GETWRN 20,21,30
00050c c002      	RJMP _0x80
                 _0x7F:
                +
00050d e14d     +LDI R20 , LOW ( 29 )
00050e e050     +LDI R21 , HIGH ( 29 )
                 	__GETWRN 20,21,29
                 ; 0000 01A3                 break;
                 _0x80:
00050f c05a      	RJMP _0x7D
                 ; 0000 01A4             case 2:
                 _0x7E:
000510 30e2      	CPI  R30,LOW(0x2)
000511 e0a0      	LDI  R26,HIGH(0x2)
000512 07fa      	CPC  R31,R26
000513 f429      	BRNE _0x81
                 ; 0000 01A5                 ma = 1; ro = 31; break;
                +
000514 e021     +LDI R18 , LOW ( 1 )
000515 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                +
000516 e14f     +LDI R20 , LOW ( 31 )
000517 e050     +LDI R21 , HIGH ( 31 )
                 	__GETWRN 20,21,31
000518 c051      	RJMP _0x7D
                 ; 0000 01A6             case 3:
                 _0x81:
000519 30e3      	CPI  R30,LOW(0x3)
00051a e0a0      	LDI  R26,HIGH(0x3)
00051b 07fa      	CPC  R31,R26
00051c f429      	BRNE _0x82
                 ; 0000 01A7                 ma = 2; ro = 31; break;
                +
00051d e022     +LDI R18 , LOW ( 2 )
00051e e030     +LDI R19 , HIGH ( 2 )
                 	__GETWRN 18,19,2
                +
00051f e14f     +LDI R20 , LOW ( 31 )
000520 e050     +LDI R21 , HIGH ( 31 )
                 	__GETWRN 20,21,31
000521 c048      	RJMP _0x7D
                 ; 0000 01A8             case 4:
                 _0x82:
000522 30e4      	CPI  R30,LOW(0x4)
000523 e0a0      	LDI  R26,HIGH(0x4)
000524 07fa      	CPC  R31,R26
000525 f429      	BRNE _0x83
                 ; 0000 01A9                 ma = 3; ro = 31; break;
                +
000526 e023     +LDI R18 , LOW ( 3 )
000527 e030     +LDI R19 , HIGH ( 3 )
                 	__GETWRN 18,19,3
                +
000528 e14f     +LDI R20 , LOW ( 31 )
000529 e050     +LDI R21 , HIGH ( 31 )
                 	__GETWRN 20,21,31
00052a c03f      	RJMP _0x7D
                 ; 0000 01AA             case 5:
                 _0x83:
00052b 30e5      	CPI  R30,LOW(0x5)
00052c e0a0      	LDI  R26,HIGH(0x5)
00052d 07fa      	CPC  R31,R26
00052e f429      	BRNE _0x84
                 ; 0000 01AB                 ma = 4; ro = 31; break;
                +
00052f e024     +LDI R18 , LOW ( 4 )
000530 e030     +LDI R19 , HIGH ( 4 )
                 	__GETWRN 18,19,4
                +
000531 e14f     +LDI R20 , LOW ( 31 )
000532 e050     +LDI R21 , HIGH ( 31 )
                 	__GETWRN 20,21,31
000533 c036      	RJMP _0x7D
                 ; 0000 01AC             case 6:
                 _0x84:
000534 30e6      	CPI  R30,LOW(0x6)
000535 e0a0      	LDI  R26,HIGH(0x6)
000536 07fa      	CPC  R31,R26
000537 f429      	BRNE _0x85
                 ; 0000 01AD                 ma = 5; ro = 31; break;
                +
000538 e025     +LDI R18 , LOW ( 5 )
000539 e030     +LDI R19 , HIGH ( 5 )
                 	__GETWRN 18,19,5
                +
00053a e14f     +LDI R20 , LOW ( 31 )
00053b e050     +LDI R21 , HIGH ( 31 )
                 	__GETWRN 20,21,31
00053c c02d      	RJMP _0x7D
                 ; 0000 01AE             case 7:
                 _0x85:
00053d 30e7      	CPI  R30,LOW(0x7)
00053e e0a0      	LDI  R26,HIGH(0x7)
00053f 07fa      	CPC  R31,R26
000540 f429      	BRNE _0x86
                 ; 0000 01AF                 ma = 6; ro = 31; break;
                +
000541 e026     +LDI R18 , LOW ( 6 )
000542 e030     +LDI R19 , HIGH ( 6 )
                 	__GETWRN 18,19,6
                +
000543 e14f     +LDI R20 , LOW ( 31 )
000544 e050     +LDI R21 , HIGH ( 31 )
                 	__GETWRN 20,21,31
000545 c024      	RJMP _0x7D
                 ; 0000 01B0             case 8:
                 _0x86:
000546 30e8      	CPI  R30,LOW(0x8)
000547 e0a0      	LDI  R26,HIGH(0x8)
000548 07fa      	CPC  R31,R26
000549 f419      	BRNE _0x87
                 ; 0000 01B1                 ma = 7; ro = 30; break;
                +
00054a e027     +LDI R18 , LOW ( 7 )
00054b e030     +LDI R19 , HIGH ( 7 )
                 	__GETWRN 18,19,7
00054c c01b      	RJMP _0x93
                 ; 0000 01B2             case 9:
                 _0x87:
00054d 30e9      	CPI  R30,LOW(0x9)
00054e e0a0      	LDI  R26,HIGH(0x9)
00054f 07fa      	CPC  R31,R26
000550 f419      	BRNE _0x88
                 ; 0000 01B3                 ma = 8; ro = 30; break;
                +
000551 e028     +LDI R18 , LOW ( 8 )
000552 e030     +LDI R19 , HIGH ( 8 )
                 	__GETWRN 18,19,8
000553 c014      	RJMP _0x93
                 ; 0000 01B4             case 10:
                 _0x88:
000554 30ea      	CPI  R30,LOW(0xA)
000555 e0a0      	LDI  R26,HIGH(0xA)
000556 07fa      	CPC  R31,R26
000557 f419      	BRNE _0x89
                 ; 0000 01B5                 ma = 9; ro = 30; break;
                +
000558 e029     +LDI R18 , LOW ( 9 )
000559 e030     +LDI R19 , HIGH ( 9 )
                 	__GETWRN 18,19,9
00055a c00d      	RJMP _0x93
                 ; 0000 01B6             case 11:
                 _0x89:
00055b 30eb      	CPI  R30,LOW(0xB)
00055c e0a0      	LDI  R26,HIGH(0xB)
00055d 07fa      	CPC  R31,R26
00055e f419      	BRNE _0x8A
                 ; 0000 01B7                 ma = 10; ro = 30; break;
                +
00055f e02a     +LDI R18 , LOW ( 10 )
000560 e030     +LDI R19 , HIGH ( 10 )
                 	__GETWRN 18,19,10
000561 c006      	RJMP _0x93
                 ; 0000 01B8             case 12:
                 _0x8A:
000562 30ec      	CPI  R30,LOW(0xC)
000563 e0a0      	LDI  R26,HIGH(0xC)
000564 07fa      	CPC  R31,R26
000565 f421      	BRNE _0x7D
                 ; 0000 01B9                 ma = 11; ro = 30; break;
                +
000566 e02b     +LDI R18 , LOW ( 11 )
000567 e030     +LDI R19 , HIGH ( 11 )
                 	__GETWRN 18,19,11
                 _0x93:
                +
000568 e14e     +LDI R20 , LOW ( 30 )
000569 e050     +LDI R21 , HIGH ( 30 )
                 	__GETWRN 20,21,30
                 ; 0000 01BA         }
                 _0x7D:
                 ; 0000 01BB     }
                 ; 0000 01BC     *sYear = sa; *sMonth = ma; *sDay = ro;
                 _0x7A:
00056a 85ea      	LDD  R30,Y+10
00056b 85fb      	LDD  R31,Y+10+1
00056c 8daa      	LDD  R26,Y+26
00056d 8dbb      	LDD  R27,Y+26+1
00056e 93ed      	ST   X+,R30
00056f 93fc      	ST   X,R31
000570 8da8      	LDD  R26,Y+24
000571 8db9      	LDD  R27,Y+24+1
000572 932c      	ST   X,R18
000573 89ae      	LDD  R26,Y+22
000574 89bf      	LDD  R27,Y+22+1
000575 934c      	ST   X,R20
                 ; 0000 01BD 
                 ; 0000 01BE     // This function has not been optimized to make understanding easier.
                 ; 0000 01BF }
000576 940e 10df 	CALL __LOADLOCR6
000578 96a0      	ADIW R28,32
000579 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void define_char(char flash *pc, char char_code)
                 ; 0000 01C3 {
                 _define_char:
                 ; .FSTART _define_char
                 ; 0000 01C4     char i, a;
                 ; 0000 01C5     a = (char_code << 3) | 0x40;
00057a 93aa      	ST   -Y,R26
00057b 931a      	ST   -Y,R17
00057c 930a      	ST   -Y,R16
                 ;	*pc -> Y+3
                 ;	char_code -> Y+2
                 ;	i -> R17
                 ;	a -> R16
00057d 81ea      	LDD  R30,Y+2
00057e 0fee      	LSL  R30
00057f 0fee      	LSL  R30
000580 0fee      	LSL  R30
000581 64e0      	ORI  R30,0x40
000582 2f0e      	MOV  R16,R30
                 ; 0000 01C6     for (i = 0; i < 8; i++) lcd_write_byte(a++, *pc++);
000583 e010      	LDI  R17,LOW(0)
                 _0x8D:
000584 3018      	CPI  R17,8
000585 f460      	BRSH _0x8E
000586 930a      	ST   -Y,R16
000587 9503      	INC  R16
000588 81ec      	LDD  R30,Y+4
000589 81fd      	LDD  R31,Y+4+1
00058a 9631      	ADIW R30,1
00058b 83ec      	STD  Y+4,R30
00058c 83fd      	STD  Y+4+1,R31
00058d 9731      	SBIW R30,1
00058e 91a4      	LPM  R26,Z
00058f d108      	RCALL _lcd_write_byte
000590 5f1f      	SUBI R17,-1
000591 cff2      	RJMP _0x8D
                 _0x8E:
                 ; 0000 01C7 }
000592 940c 079b 	JMP  _0x2120005
                 ; .FEND
                 
                 	.CSEG
                 _rtc_init:
                 ; .FSTART _rtc_init
000594 93aa      	ST   -Y,R26
000595 81ea      	LDD  R30,Y+2
000596 70e3      	ANDI R30,LOW(0x3)
000597 83ea      	STD  Y+2,R30
000598 81e9      	LDD  R30,Y+1
000599 30e0      	CPI  R30,0
00059a f019      	BREQ _0x2000003
00059b 81ea      	LDD  R30,Y+2
00059c 61e0      	ORI  R30,0x10
00059d 83ea      	STD  Y+2,R30
                 _0x2000003:
00059e 81e8      	LD   R30,Y
00059f 30e0      	CPI  R30,0
0005a0 f019      	BREQ _0x2000004
0005a1 81ea      	LDD  R30,Y+2
0005a2 68e0      	ORI  R30,0x80
0005a3 83ea      	STD  Y+2,R30
                 _0x2000004:
0005a4 940e 0c3c 	CALL SUBOPT_0x14
0005a6 e0a7      	LDI  R26,LOW(7)
0005a7 940e 0d9b 	CALL _i2c_write
0005a9 81aa      	LDD  R26,Y+2
0005aa 940e 0c41 	CALL SUBOPT_0x15
0005ac c141      	RJMP _0x2120009
                 ; .FEND
                 _rtc_get_time:
                 ; .FSTART _rtc_get_time
0005ad 93ba      	ST   -Y,R27
0005ae 93aa      	ST   -Y,R26
0005af 940e 0c3c 	CALL SUBOPT_0x14
0005b1 e0a0      	LDI  R26,LOW(0)
0005b2 940e 0c41 	CALL SUBOPT_0x15
0005b4 940e 0c45 	CALL SUBOPT_0x16
0005b6 940e 0c4d 	CALL SUBOPT_0x17
0005b8 940e 0c54 	CALL SUBOPT_0x18
0005ba 940e 0c5a 	CALL SUBOPT_0x19
0005bc 2fae      	MOV  R26,R30
0005bd 940e 0abf 	CALL _bcd2bin
0005bf 81ac      	LDD  R26,Y+4
0005c0 81bd      	LDD  R27,Y+4+1
0005c1 93ec      	ST   X,R30
0005c2 940e 0d76 	CALL _i2c_stop
0005c4 c065      	RJMP _0x212000C
                 ; .FEND
                 _rtc_get_date:
                 ; .FSTART _rtc_get_date
0005c5 93ba      	ST   -Y,R27
0005c6 93aa      	ST   -Y,R26
0005c7 940e 0c3c 	CALL SUBOPT_0x14
0005c9 e0a3      	LDI  R26,LOW(3)
0005ca 940e 0c41 	CALL SUBOPT_0x15
0005cc 940e 0c45 	CALL SUBOPT_0x16
0005ce 81ae      	LDD  R26,Y+6
0005cf 81bf      	LDD  R27,Y+6+1
0005d0 93ec      	ST   X,R30
0005d1 940e 0c54 	CALL SUBOPT_0x18
0005d3 81ac      	LDD  R26,Y+4
0005d4 81bd      	LDD  R27,Y+4+1
0005d5 93ec      	ST   X,R30
0005d6 940e 0c54 	CALL SUBOPT_0x18
0005d8 940e 0c5a 	CALL SUBOPT_0x19
0005da 940e 0c4d 	CALL SUBOPT_0x17
0005dc 940e 0d76 	CALL _i2c_stop
0005de 9628      	ADIW R28,8
0005df 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ds18b20_select:
                 ; .FSTART _ds18b20_select
0005e0 93ba      	ST   -Y,R27
0005e1 93aa      	ST   -Y,R26
0005e2 931a      	ST   -Y,R17
0005e3 940e 0dbd 	CALL _w1_init
0005e5 30e0      	CPI  R30,0
0005e6 f411      	BRNE _0x2020003
0005e7 e0e0      	LDI  R30,LOW(0)
0005e8 c104      	RJMP _0x2120008
                 _0x2020003:
0005e9 81e9      	LDD  R30,Y+1
0005ea 81fa      	LDD  R31,Y+1+1
0005eb 9730      	SBIW R30,0
0005ec f081      	BREQ _0x2020004
0005ed e5a5      	LDI  R26,LOW(85)
0005ee 940e 0e03 	CALL _w1_write
0005f0 e010      	LDI  R17,LOW(0)
                 _0x2020006:
0005f1 81a9      	LDD  R26,Y+1
0005f2 81ba      	LDD  R27,Y+1+1
0005f3 91ed      	LD   R30,X+
0005f4 83a9      	STD  Y+1,R26
0005f5 83ba      	STD  Y+1+1,R27
0005f6 2fae      	MOV  R26,R30
0005f7 940e 0e03 	CALL _w1_write
0005f9 5f1f      	SUBI R17,-LOW(1)
0005fa 3018      	CPI  R17,8
0005fb f3a8      	BRLO _0x2020006
0005fc c003      	RJMP _0x2020008
                 _0x2020004:
0005fd ecac      	LDI  R26,LOW(204)
0005fe 940e 0e03 	CALL _w1_write
                 _0x2020008:
000600 e0e1      	LDI  R30,LOW(1)
000601 c0eb      	RJMP _0x2120008
                 ; .FEND
                 _ds18b20_read_spd:
                 ; .FSTART _ds18b20_read_spd
000602 93ba      	ST   -Y,R27
000603 93aa      	ST   -Y,R26
000604 940e 10da 	CALL __SAVELOCR4
000606 81ac      	LDD  R26,Y+4
000607 81bd      	LDD  R27,Y+4+1
000608 dfd7      	RCALL _ds18b20_select
000609 30e0      	CPI  R30,0
00060a f411      	BRNE _0x2020009
00060b e0e0      	LDI  R30,LOW(0)
00060c c01b      	RJMP _0x212000B
                 _0x2020009:
00060d ebae      	LDI  R26,LOW(190)
00060e 940e 0e03 	CALL _w1_write
000610 e010      	LDI  R17,LOW(0)
                +
000611 e624     +LDI R18 , LOW ( ___ds18b20_scratch_pad )
000612 e032     +LDI R19 , HIGH ( ___ds18b20_scratch_pad )
                 	__POINTWRM 18,19,___ds18b20_scratch_pad
                 _0x202000B:
000613 933f      	PUSH R19
000614 932f      	PUSH R18
                +
000615 5f2f     +SUBI R18 , LOW ( - 1 )
000616 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000617 940e 0dfe 	CALL _w1_read
000619 91af      	POP  R26
00061a 91bf      	POP  R27
00061b 93ec      	ST   X,R30
00061c 5f1f      	SUBI R17,-LOW(1)
00061d 3019      	CPI  R17,9
00061e f3a0      	BRLO _0x202000B
00061f e6e4      	LDI  R30,LOW(___ds18b20_scratch_pad)
000620 e0f2      	LDI  R31,HIGH(___ds18b20_scratch_pad)
000621 93fa      	ST   -Y,R31
000622 93ea      	ST   -Y,R30
000623 e0a9      	LDI  R26,LOW(9)
000624 940e 0e0d 	CALL _w1_dow_crc8
000626 940e 0fe7 	CALL __LNEGB1
                 _0x212000B:
000628 940e 10e1 	CALL __LOADLOCR4
                 _0x212000C:
00062a 9626      	ADIW R28,6
00062b 9508      	RET
                 ; .FEND
                 _ds18b20_temperature:
                 ; .FSTART _ds18b20_temperature
00062c 93ba      	ST   -Y,R27
00062d 93aa      	ST   -Y,R26
00062e 931a      	ST   -Y,R17
00062f 81a9      	LDD  R26,Y+1
000630 81ba      	LDD  R27,Y+1+1
000631 dfd0      	RCALL _ds18b20_read_spd
000632 30e0      	CPI  R30,0
000633 f419      	BRNE _0x202000D
000634 940e 0c60 	CALL SUBOPT_0x1A
000636 c0b6      	RJMP _0x2120008
                 _0x202000D:
                +
000637 91e0 0268+LDS R30 , ___ds18b20_scratch_pad + ( 4 )
                 	__GETB1MN ___ds18b20_scratch_pad,4
000639 95e2      	SWAP R30
00063a 70ef      	ANDI R30,0xF
00063b 95e6      	LSR  R30
00063c 70e3      	ANDI R30,LOW(0x3)
00063d 2f1e      	MOV  R17,R30
00063e 81a9      	LDD  R26,Y+1
00063f 81ba      	LDD  R27,Y+1+1
000640 df9f      	RCALL _ds18b20_select
000641 30e0      	CPI  R30,0
000642 f419      	BRNE _0x202000E
000643 940e 0c60 	CALL SUBOPT_0x1A
000645 c0a7      	RJMP _0x2120008
                 _0x202000E:
000646 e4a4      	LDI  R26,LOW(68)
000647 940e 0e03 	CALL _w1_write
000649 2fe1      	MOV  R30,R17
00064a e5ac      	LDI  R26,LOW(_conv_delay_G101*2)
00064b e0b0      	LDI  R27,HIGH(_conv_delay_G101*2)
00064c e0f0      	LDI  R31,0
00064d 0fee      	LSL  R30
00064e 1fff      	ROL  R31
00064f 0fea      	ADD  R30,R26
000650 1ffb      	ADC  R31,R27
000651 940e 1088 	CALL __GETW2PF
000653 940e 0db3 	CALL _delay_ms
000655 81a9      	LDD  R26,Y+1
000656 81ba      	LDD  R27,Y+1+1
000657 dfaa      	RCALL _ds18b20_read_spd
000658 30e0      	CPI  R30,0
000659 f419      	BRNE _0x202000F
00065a 940e 0c60 	CALL SUBOPT_0x1A
00065c c090      	RJMP _0x2120008
                 _0x202000F:
00065d 940e 0dbd 	CALL _w1_init
00065f 2fe1      	MOV  R30,R17
000660 e6a4      	LDI  R26,LOW(_bit_mask_G101*2)
000661 e0b0      	LDI  R27,HIGH(_bit_mask_G101*2)
000662 e0f0      	LDI  R31,0
000663 0fee      	LSL  R30
000664 1fff      	ROL  R31
000665 0fea      	ADD  R30,R26
000666 1ffb      	ADC  R31,R27
000667 940e 1084 	CALL __GETW1PF
000669 91a0 0264 	LDS  R26,___ds18b20_scratch_pad
00066b 91b0 0265 	LDS  R27,___ds18b20_scratch_pad+1
00066d 23ea      	AND  R30,R26
00066e 23fb      	AND  R31,R27
00066f 940e 0be5 	CALL SUBOPT_0x7
                +
000671 e0a0     +LDI R26 , LOW ( 0x3D800000 )
000672 e0b0     +LDI R27 , HIGH ( 0x3D800000 )
000673 e880     +LDI R24 , BYTE3 ( 0x3D800000 )
000674 e39d     +LDI R25 , BYTE4 ( 0x3D800000 )
                 	__GETD2N 0x3D800000
000675 940e 0f19 	CALL __MULF12
000677 c075      	RJMP _0x2120008
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
000678 93aa      	ST   -Y,R26
000679 b3e8      	IN   R30,0x18
00067a 70ef      	ANDI R30,LOW(0xF)
00067b 2fae      	MOV  R26,R30
00067c 81e8      	LD   R30,Y
00067d 7fe0      	ANDI R30,LOW(0xF0)
00067e 2bea      	OR   R30,R26
00067f bbe8      	OUT  0x18,R30
                +
000680 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000681 958a     +DEC R24
000682 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000683 9ac3      	SBI  0x18,3
                +
000684 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000685 958a     +DEC R24
000686 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000687 98c3      	CBI  0x18,3
                +
000688 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000689 958a     +DEC R24
00068a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00068b c091      	RJMP _0x2120007
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00068c 93aa      	ST   -Y,R26
00068d 81a8      	LD   R26,Y
00068e dfe9      	RCALL __lcd_write_nibble_G102
00068f 81e8          ld    r30,y
000690 95e2          swap  r30
000691 83e8          st    y,r30
000692 81a8      	LD   R26,Y
000693 dfe4      	RCALL __lcd_write_nibble_G102
                +
000694 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000695 958a     +DEC R24
000696 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000697 c085      	RJMP _0x2120007
                 ; .FEND
                 _lcd_write_byte:
                 ; .FSTART _lcd_write_byte
000698 93aa      	ST   -Y,R26
000699 81a9      	LDD  R26,Y+1
00069a dff1      	RCALL __lcd_write_data
00069b 9ac1      	SBI  0x18,1
00069c 81a8      	LD   R26,Y
00069d dfee      	RCALL __lcd_write_data
00069e 98c1      	CBI  0x18,1
00069f c00f      	RJMP _0x212000A
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0006a0 93aa      	ST   -Y,R26
0006a1 81e8      	LD   R30,Y
0006a2 e0f0      	LDI  R31,0
0006a3 57ed      	SUBI R30,LOW(-__base_y_G102)
0006a4 4ffd      	SBCI R31,HIGH(-__base_y_G102)
0006a5 81e0      	LD   R30,Z
0006a6 81a9      	LDD  R26,Y+1
0006a7 0fae      	ADD  R26,R30
0006a8 dfe3      	RCALL __lcd_write_data
0006a9 81e9      	LDD  R30,Y+1
0006aa 93e0 0287 	STS  __lcd_x,R30
0006ac 81e8      	LD   R30,Y
0006ad 93e0 0288 	STS  __lcd_y,R30
                 _0x212000A:
0006af 9622      	ADIW R28,2
0006b0 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0006b1 e0a2      	LDI  R26,LOW(2)
0006b2 940e 0c65 	CALL SUBOPT_0x1B
0006b4 e0ac      	LDI  R26,LOW(12)
0006b5 dfd6      	RCALL __lcd_write_data
0006b6 e0a1      	LDI  R26,LOW(1)
0006b7 940e 0c65 	CALL SUBOPT_0x1B
0006b9 e0e0      	LDI  R30,LOW(0)
0006ba 93e0 0288 	STS  __lcd_y,R30
0006bc 93e0 0287 	STS  __lcd_x,R30
0006be 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0006bf 93aa      	ST   -Y,R26
0006c0 81a8      	LD   R26,Y
0006c1 30aa      	CPI  R26,LOW(0xA)
0006c2 f031      	BREQ _0x2040005
0006c3 91e0 0289 	LDS  R30,__lcd_maxx
0006c5 91a0 0287 	LDS  R26,__lcd_x
0006c7 17ae      	CP   R26,R30
0006c8 f060      	BRLO _0x2040004
                 _0x2040005:
0006c9 e0e0      	LDI  R30,LOW(0)
0006ca 93ea      	ST   -Y,R30
0006cb 91a0 0288 	LDS  R26,__lcd_y
0006cd 5faf      	SUBI R26,-LOW(1)
0006ce 93a0 0288 	STS  __lcd_y,R26
0006d0 dfcf      	RCALL _lcd_gotoxy
0006d1 81a8      	LD   R26,Y
0006d2 30aa      	CPI  R26,LOW(0xA)
0006d3 f409      	BRNE _0x2040007
0006d4 c048      	RJMP _0x2120007
                 _0x2040007:
                 _0x2040004:
0006d5 91e0 0287 	LDS  R30,__lcd_x
0006d7 5fef      	SUBI R30,-LOW(1)
0006d8 93e0 0287 	STS  __lcd_x,R30
0006da 9ac1      	SBI  0x18,1
0006db 81a8      	LD   R26,Y
0006dc dfaf      	RCALL __lcd_write_data
0006dd 98c1      	CBI  0x18,1
0006de c03e      	RJMP _0x2120007
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0006df 93ba      	ST   -Y,R27
0006e0 93aa      	ST   -Y,R26
0006e1 931a      	ST   -Y,R17
                 _0x2040008:
0006e2 81a9      	LDD  R26,Y+1
0006e3 81ba      	LDD  R27,Y+1+1
0006e4 91ed      	LD   R30,X+
0006e5 83a9      	STD  Y+1,R26
0006e6 83ba      	STD  Y+1+1,R27
0006e7 2f1e      	MOV  R17,R30
0006e8 30e0      	CPI  R30,0
0006e9 f019      	BREQ _0x204000A
0006ea 2fa1      	MOV  R26,R17
0006eb dfd3      	RCALL _lcd_putchar
0006ec cff5      	RJMP _0x2040008
                 _0x204000A:
                 _0x2120008:
0006ed 8118      	LDD  R17,Y+0
                 _0x2120009:
0006ee 9623      	ADIW R28,3
0006ef 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0006f0 93aa      	ST   -Y,R26
0006f1 b3e7      	IN   R30,0x17
0006f2 6fe0      	ORI  R30,LOW(0xF0)
0006f3 bbe7      	OUT  0x17,R30
0006f4 9abb      	SBI  0x17,3
0006f5 9ab9      	SBI  0x17,1
0006f6 9aba      	SBI  0x17,2
0006f7 98c3      	CBI  0x18,3
0006f8 98c1      	CBI  0x18,1
0006f9 98c2      	CBI  0x18,2
0006fa 81e8      	LD   R30,Y
0006fb 93e0 0289 	STS  __lcd_maxx,R30
0006fd 58e0      	SUBI R30,-LOW(128)
                +
0006fe 93e0 0285+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
000700 81e8      	LD   R30,Y
000701 54e0      	SUBI R30,-LOW(192)
                +
000702 93e0 0286+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
000704 e1a4      	LDI  R26,LOW(20)
000705 e0b0      	LDI  R27,0
000706 940e 0db3 	CALL _delay_ms
000708 940e 0c6b 	CALL SUBOPT_0x1C
00070a 940e 0c6b 	CALL SUBOPT_0x1C
00070c 940e 0c6b 	CALL SUBOPT_0x1C
00070e e2a0      	LDI  R26,LOW(32)
00070f df68      	RCALL __lcd_write_nibble_G102
                +
000710 ec88     +LDI R24 , LOW ( 200 )
000711 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000712 9701     +SBIW R24 , 1
000713 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000714 e2a8      	LDI  R26,LOW(40)
000715 df76      	RCALL __lcd_write_data
000716 e0a4      	LDI  R26,LOW(4)
000717 df74      	RCALL __lcd_write_data
000718 e8a5      	LDI  R26,LOW(133)
000719 df72      	RCALL __lcd_write_data
00071a e0a6      	LDI  R26,LOW(6)
00071b df70      	RCALL __lcd_write_data
00071c df94      	RCALL _lcd_clear
                 _0x2120007:
00071d 9621      	ADIW R28,1
00071e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00071f 940e 109f 	CALL __PUTPARD2
000721 817b         ldd  r23,y+3
000722 816a         ldd  r22,y+2
000723 81f9         ldd  r31,y+1
000724 81e8         ld   r30,y
000725 fb77         bst  r23,7
000726 0f77         lsl  r23
000727 fd67         sbrc r22,7
000728 6071         sbr  r23,1
000729 2f97         mov  r25,r23
00072a 579e         subi r25,0x7e
00072b f081         breq __ftrunc0
00072c f078         brcs __ftrunc0
00072d 3198         cpi  r25,24
00072e f490         brsh __ftrunc1
00072f 27aa         clr  r26
000730 27bb         clr  r27
000731 2788         clr  r24
                 __ftrunc2:
000732 9408         sec
000733 9587         ror  r24
000734 95b7         ror  r27
000735 95a7         ror  r26
000736 959a         dec  r25
000737 f7d1         brne __ftrunc2
000738 23ea         and  r30,r26
000739 23fb         and  r31,r27
00073a 2368         and  r22,r24
00073b c005         rjmp __ftrunc1
                 __ftrunc0:
00073c 94e8         clt
00073d 2777         clr  r23
00073e 27ee         clr  r30
00073f 27ff         clr  r31
000740 2766         clr  r22
                 __ftrunc1:
000741 776f         cbr  r22,0x80
000742 9576         lsr  r23
000743 f408         brcc __ftrunc3
000744 6860         sbr  r22,0x80
                 __ftrunc3:
000745 f977         bld  r23,7
000746 91a9         ld   r26,y+
000747 91b9         ld   r27,y+
000748 9189         ld   r24,y+
000749 9199         ld   r25,y+
00074a 17ea         cp   r30,r26
00074b 07fb         cpc  r31,r27
00074c 0768         cpc  r22,r24
00074d 0779         cpc  r23,r25
00074e fb97         bst  r25,7
00074f 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000750 940e 109f 	CALL __PUTPARD2
000752 940e 1090 	CALL __GETD2S0
000754 940e 071f 	CALL _ftrunc
000756 940e 1095 	CALL __PUTD1S0
000758 f419          brne __floor1
                 __floor0:
000759 940e 108b 	CALL __GETD1S0
00075b c007      	RJMP _0x2120006
                 __floor1:
00075c f7e6          brtc __floor0
00075d 940e 108b 	CALL __GETD1S0
00075f 940e 0c0d 	CALL SUBOPT_0xE
000761 940e 0ec2 	CALL __SUBF12
                 _0x2120006:
000763 9624      	ADIW R28,4
000764 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G104:
                 ; .FSTART _put_buff_G104
000765 93ba      	ST   -Y,R27
000766 93aa      	ST   -Y,R26
000767 931a      	ST   -Y,R17
000768 930a      	ST   -Y,R16
000769 81aa      	LDD  R26,Y+2
00076a 81bb      	LDD  R27,Y+2+1
00076b 9612      	ADIW R26,2
00076c 940e 1075 	CALL __GETW1P
00076e 9730      	SBIW R30,0
00076f f129      	BREQ _0x2080010
000770 81aa      	LDD  R26,Y+2
000771 81bb      	LDD  R27,Y+2+1
000772 9614      	ADIW R26,4
000773 940e 1075 	CALL __GETW1P
000775 018f      	MOVW R16,R30
000776 9730      	SBIW R30,0
000777 f061      	BREQ _0x2080012
                +
000778 3002     +CPI R16 , LOW ( 2 )
000779 e0e0     +LDI R30 , HIGH ( 2 )
00077a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00077b f080      	BRLO _0x2080013
00077c 01f8      	MOVW R30,R16
00077d 9731      	SBIW R30,1
00077e 018f      	MOVW R16,R30
                +
00077f 81aa     +LDD R26 , Y + 2
000780 81bb     +LDD R27 , Y + 2 + 1
000781 9614     +ADIW R26 , 4
000782 93ed     +ST X + , R30
000783 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2080012:
000784 81aa      	LDD  R26,Y+2
000785 81bb      	LDD  R27,Y+2+1
000786 9612      	ADIW R26,2
000787 940e 0c73 	CALL SUBOPT_0x1D
000789 9731      	SBIW R30,1
00078a 81ac      	LDD  R26,Y+4
00078b 83a0      	STD  Z+0,R26
                 _0x2080013:
00078c 81aa      	LDD  R26,Y+2
00078d 81bb      	LDD  R27,Y+2+1
00078e 940e 1075 	CALL __GETW1P
000790 23ff      	TST  R31
000791 f012      	BRMI _0x2080014
000792 940e 0c73 	CALL SUBOPT_0x1D
                 _0x2080014:
000794 c006      	RJMP _0x2080015
                 _0x2080010:
000795 81aa      	LDD  R26,Y+2
000796 81bb      	LDD  R27,Y+2+1
000797 efef      	LDI  R30,LOW(65535)
000798 efff      	LDI  R31,HIGH(65535)
000799 93ed      	ST   X+,R30
00079a 93fc      	ST   X,R31
                 _0x2080015:
                 _0x2120005:
00079b 8119      	LDD  R17,Y+1
00079c 8108      	LDD  R16,Y+0
00079d 9625      	ADIW R28,5
00079e 9508      	RET
                 ; .FEND
                 __ftoe_G104:
                 ; .FSTART __ftoe_G104
00079f 940e 0c79 	CALL SUBOPT_0x1E
0007a1 e8e0      	LDI  R30,LOW(128)
0007a2 83ea      	STD  Y+2,R30
0007a3 e3ef      	LDI  R30,LOW(63)
0007a4 83eb      	STD  Y+3,R30
0007a5 940e 10da 	CALL __SAVELOCR4
0007a7 85ee      	LDD  R30,Y+14
0007a8 85ff      	LDD  R31,Y+14+1
0007a9 3fef      	CPI  R30,LOW(0xFFFF)
0007aa efaf      	LDI  R26,HIGH(0xFFFF)
0007ab 07fa      	CPC  R31,R26
0007ac f449      	BRNE _0x2080019
0007ad 85e8      	LDD  R30,Y+8
0007ae 85f9      	LDD  R31,Y+8+1
0007af 93fa      	ST   -Y,R31
0007b0 93ea      	ST   -Y,R30
                +
0007b1 ebaa     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
0007b2 e0b0     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW2FN _0x2080000,0
0007b3 940e 0b8e 	CALL _strcpyf
0007b5 c0b7      	RJMP _0x2120004
                 _0x2080019:
0007b6 3fef      	CPI  R30,LOW(0x7FFF)
0007b7 e7af      	LDI  R26,HIGH(0x7FFF)
0007b8 07fa      	CPC  R31,R26
0007b9 f449      	BRNE _0x2080018
0007ba 85e8      	LDD  R30,Y+8
0007bb 85f9      	LDD  R31,Y+8+1
0007bc 93fa      	ST   -Y,R31
0007bd 93ea      	ST   -Y,R30
                +
0007be ebab     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
0007bf e0b0     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW2FN _0x2080000,1
0007c0 940e 0b8e 	CALL _strcpyf
0007c2 c0aa      	RJMP _0x2120004
                 _0x2080018:
0007c3 85ab      	LDD  R26,Y+11
0007c4 30a7      	CPI  R26,LOW(0x7)
0007c5 f010      	BRLO _0x208001B
0007c6 e0e6      	LDI  R30,LOW(6)
0007c7 87eb      	STD  Y+11,R30
                 _0x208001B:
0007c8 851b      	LDD  R17,Y+11
                 _0x208001C:
0007c9 2fe1      	MOV  R30,R17
0007ca 5011      	SUBI R17,1
0007cb 30e0      	CPI  R30,0
0007cc f019      	BREQ _0x208001E
0007cd 940e 0c80 	CALL SUBOPT_0x1F
0007cf cff9      	RJMP _0x208001C
                 _0x208001E:
                +
0007d0 85ec     +LDD R30 , Y + 12
0007d1 85fd     +LDD R31 , Y + 12 + 1
0007d2 856e     +LDD R22 , Y + 12 + 2
0007d3 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0007d4 940e 10ce 	CALL __CPD10
0007d6 f421      	BRNE _0x208001F
0007d7 e030      	LDI  R19,LOW(0)
0007d8 940e 0c80 	CALL SUBOPT_0x1F
0007da c02d      	RJMP _0x2080020
                 _0x208001F:
0007db 853b      	LDD  R19,Y+11
0007dc 940e 0c8f 	CALL SUBOPT_0x20
0007de f009      	BREQ PC+2
0007df f408      	BRCC PC+2
0007e0 c00b      	RJMP _0x2080021
0007e1 940e 0c80 	CALL SUBOPT_0x1F
                 _0x2080022:
0007e3 940e 0c8f 	CALL SUBOPT_0x20
0007e5 f028      	BRLO _0x2080024
0007e6 940e 0c9a 	CALL SUBOPT_0x21
0007e8 940e 0c9f 	CALL SUBOPT_0x22
0007ea cff8      	RJMP _0x2080022
                 _0x2080024:
0007eb c00d      	RJMP _0x2080025
                 _0x2080021:
                 _0x2080026:
0007ec 940e 0c8f 	CALL SUBOPT_0x20
0007ee f440      	BRSH _0x2080028
0007ef 940e 0c9a 	CALL SUBOPT_0x21
0007f1 940e 0cab 	CALL SUBOPT_0x23
0007f3 940e 0cb2 	CALL SUBOPT_0x24
0007f5 5031      	SUBI R19,LOW(1)
0007f6 cff5      	RJMP _0x2080026
                 _0x2080028:
0007f7 940e 0c80 	CALL SUBOPT_0x1F
                 _0x2080025:
                +
0007f9 85ec     +LDD R30 , Y + 12
0007fa 85fd     +LDD R31 , Y + 12 + 1
0007fb 856e     +LDD R22 , Y + 12 + 2
0007fc 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0007fd 940e 0cb7 	CALL SUBOPT_0x25
0007ff 940e 0cb2 	CALL SUBOPT_0x24
000801 940e 0c8f 	CALL SUBOPT_0x20
000803 f020      	BRLO _0x2080029
000804 940e 0c9a 	CALL SUBOPT_0x21
000806 940e 0c9f 	CALL SUBOPT_0x22
                 _0x2080029:
                 _0x2080020:
000808 e010      	LDI  R17,LOW(0)
                 _0x208002A:
000809 85eb      	LDD  R30,Y+11
00080a 17e1      	CP   R30,R17
00080b f1a8      	BRLO _0x208002C
                +
00080c 81ac     +LDD R26 , Y + 4
00080d 81bd     +LDD R27 , Y + 4 + 1
00080e 818e     +LDD R24 , Y + 4 + 2
00080f 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000810 940e 0cbe 	CALL SUBOPT_0x26
000812 940e 0cb7 	CALL SUBOPT_0x25
000814 01df      	MOVW R26,R30
000815 01cb      	MOVW R24,R22
000816 940e 0750 	CALL _floor
                +
000818 83ec     +STD Y + 4 , R30
000819 83fd     +STD Y + 4 + 1 , R31
00081a 836e     +STD Y + 4 + 2 , R22
00081b 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00081c 940e 0c9a 	CALL SUBOPT_0x21
00081e 940e 0f67 	CALL __DIVF21
000820 940e 0e56 	CALL __CFD1U
000822 2f0e      	MOV  R16,R30
000823 940e 0cc5 	CALL SUBOPT_0x27
000825 940e 0ccc 	CALL SUBOPT_0x28
000827 27ff      	CLR  R31
000828 2766      	CLR  R22
000829 2777      	CLR  R23
00082a 940e 0e8f 	CALL __CDF1
                +
00082c 81ac     +LDD R26 , Y + 4
00082d 81bd     +LDD R27 , Y + 4 + 1
00082e 818e     +LDD R24 , Y + 4 + 2
00082f 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000830 940e 0f19 	CALL __MULF12
000832 940e 0c9a 	CALL SUBOPT_0x21
000834 940e 0c17 	CALL SUBOPT_0x10
000836 940e 0cb2 	CALL SUBOPT_0x24
000838 2fe1      	MOV  R30,R17
000839 5f1f      	SUBI R17,-1
00083a 30e0      	CPI  R30,0
00083b f669      	BRNE _0x208002A
00083c 940e 0cc5 	CALL SUBOPT_0x27
00083e e2ee      	LDI  R30,LOW(46)
00083f 93ec      	ST   X,R30
000840 cfc8      	RJMP _0x208002A
                 _0x208002C:
000841 940e 0cd1 	CALL SUBOPT_0x29
000843 9731      	SBIW R30,1
000844 85aa      	LDD  R26,Y+10
000845 83a0      	STD  Z+0,R26
000846 3030      	CPI  R19,0
000847 f42c      	BRGE _0x208002E
000848 9531      	NEG  R19
000849 85a8      	LDD  R26,Y+8
00084a 85b9      	LDD  R27,Y+8+1
00084b e2ed      	LDI  R30,LOW(45)
00084c c003      	RJMP _0x2080116
                 _0x208002E:
00084d 85a8      	LDD  R26,Y+8
00084e 85b9      	LDD  R27,Y+8+1
00084f e2eb      	LDI  R30,LOW(43)
                 _0x2080116:
000850 93ec      	ST   X,R30
000851 940e 0cd1 	CALL SUBOPT_0x29
000853 940e 0cd1 	CALL SUBOPT_0x29
000855 9731      	SBIW R30,1
000856 01bf      	MOVW R22,R30
000857 2fa3      	MOV  R26,R19
000858 e0ea      	LDI  R30,LOW(10)
000859 940e 0ffa 	CALL __DIVB21
00085b 5de0      	SUBI R30,-LOW(48)
00085c 01db      	MOVW R26,R22
00085d 93ec      	ST   X,R30
00085e 940e 0cd1 	CALL SUBOPT_0x29
000860 9731      	SBIW R30,1
000861 01bf      	MOVW R22,R30
000862 2fa3      	MOV  R26,R19
000863 e0ea      	LDI  R30,LOW(10)
000864 940e 1037 	CALL __MODB21
000866 5de0      	SUBI R30,-LOW(48)
000867 01db      	MOVW R26,R22
000868 93ec      	ST   X,R30
000869 85a8      	LDD  R26,Y+8
00086a 85b9      	LDD  R27,Y+8+1
00086b e0e0      	LDI  R30,LOW(0)
00086c 93ec      	ST   X,R30
                 _0x2120004:
00086d 940e 10e1 	CALL __LOADLOCR4
00086f 9660      	ADIW R28,16
000870 9508      	RET
                 ; .FEND
                 __print_G104:
                 ; .FSTART __print_G104
000871 93ba      	ST   -Y,R27
000872 93aa      	ST   -Y,R26
000873 97ef      	SBIW R28,63
000874 9761      	SBIW R28,17
000875 940e 10d8 	CALL __SAVELOCR6
000877 e010      	LDI  R17,0
                +
000878 01fe     +MOVW R30 , R28
000879 5ae8     +SUBI R30 , LOW ( - 88 )
00087a 4fff     +SBCI R31 , HIGH ( - 88 )
00087b 9001     +LD R0 , Z +
00087c 81f0     +LD R31 , Z
00087d 2de0     +MOV R30 , R0
                 	__GETW1SX 88
00087e 87e8      	STD  Y+8,R30
00087f 87f9      	STD  Y+8+1,R31
                +
000880 01fe     +MOVW R30 , R28
000881 5aea     +SUBI R30 , LOW ( - 86 )
000882 4fff     +SBCI R31 , HIGH ( - 86 )
000883 9001     +LD R0 , Z +
000884 81f0     +LD R31 , Z
000885 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000886 83ee      	STD  Y+6,R30
000887 83ff      	STD  Y+6+1,R31
000888 81ae      	LDD  R26,Y+6
000889 81bf      	LDD  R27,Y+6+1
00088a e0e0      	LDI  R30,LOW(0)
00088b e0f0      	LDI  R31,HIGH(0)
00088c 93ed      	ST   X+,R30
00088d 93fc      	ST   X,R31
                 _0x2080030:
00088e 01de      	MOVW R26,R28
00088f 5aa4      	SUBI R26,LOW(-(92))
000890 4fbf      	SBCI R27,HIGH(-(92))
000891 940e 0c73 	CALL SUBOPT_0x1D
000893 9731      	SBIW R30,1
000894 91e4      	LPM  R30,Z
000895 2f2e      	MOV  R18,R30
000896 30e0      	CPI  R30,0
000897 f409      	BRNE PC+2
000898 c1e9      	RJMP _0x2080032
000899 2fe1      	MOV  R30,R17
00089a 30e0      	CPI  R30,0
00089b f439      	BRNE _0x2080036
00089c 3225      	CPI  R18,37
00089d f411      	BRNE _0x2080037
00089e e011      	LDI  R17,LOW(1)
00089f c002      	RJMP _0x2080038
                 _0x2080037:
0008a0 940e 0cd7 	CALL SUBOPT_0x2A
                 _0x2080038:
0008a2 c1de      	RJMP _0x2080035
                 _0x2080036:
0008a3 30e1      	CPI  R30,LOW(0x1)
0008a4 f4c1      	BRNE _0x2080039
0008a5 3225      	CPI  R18,37
0008a6 f419      	BRNE _0x208003A
0008a7 940e 0cd7 	CALL SUBOPT_0x2A
0008a9 c1d6      	RJMP _0x2080117
                 _0x208003A:
0008aa e012      	LDI  R17,LOW(2)
0008ab e0e0      	LDI  R30,LOW(0)
0008ac 8bed      	STD  Y+21,R30
0008ad e000      	LDI  R16,LOW(0)
0008ae 322d      	CPI  R18,45
0008af f411      	BRNE _0x208003B
0008b0 e001      	LDI  R16,LOW(1)
0008b1 c1cf      	RJMP _0x2080035
                 _0x208003B:
0008b2 322b      	CPI  R18,43
0008b3 f419      	BRNE _0x208003C
0008b4 e2eb      	LDI  R30,LOW(43)
0008b5 8bed      	STD  Y+21,R30
0008b6 c1ca      	RJMP _0x2080035
                 _0x208003C:
0008b7 3220      	CPI  R18,32
0008b8 f419      	BRNE _0x208003D
0008b9 e2e0      	LDI  R30,LOW(32)
0008ba 8bed      	STD  Y+21,R30
0008bb c1c5      	RJMP _0x2080035
                 _0x208003D:
0008bc c002      	RJMP _0x208003E
                 _0x2080039:
0008bd 30e2      	CPI  R30,LOW(0x2)
0008be f439      	BRNE _0x208003F
                 _0x208003E:
0008bf e050      	LDI  R21,LOW(0)
0008c0 e013      	LDI  R17,LOW(3)
0008c1 3320      	CPI  R18,48
0008c2 f411      	BRNE _0x2080040
0008c3 6800      	ORI  R16,LOW(128)
0008c4 c1bc      	RJMP _0x2080035
                 _0x2080040:
0008c5 c002      	RJMP _0x2080041
                 _0x208003F:
0008c6 30e3      	CPI  R30,LOW(0x3)
0008c7 f491      	BRNE _0x2080042
                 _0x2080041:
0008c8 3320      	CPI  R18,48
0008c9 f010      	BRLO _0x2080044
0008ca 332a      	CPI  R18,58
0008cb f008      	BRLO _0x2080045
                 _0x2080044:
0008cc c007      	RJMP _0x2080043
                 _0x2080045:
0008cd e0aa      	LDI  R26,LOW(10)
0008ce 9f5a      	MUL  R21,R26
0008cf 2d50      	MOV  R21,R0
0008d0 2fe2      	MOV  R30,R18
0008d1 53e0      	SUBI R30,LOW(48)
0008d2 0f5e      	ADD  R21,R30
0008d3 c1ad      	RJMP _0x2080035
                 _0x2080043:
0008d4 e040      	LDI  R20,LOW(0)
0008d5 322e      	CPI  R18,46
0008d6 f411      	BRNE _0x2080046
0008d7 e014      	LDI  R17,LOW(4)
0008d8 c1a8      	RJMP _0x2080035
                 _0x2080046:
0008d9 c00f      	RJMP _0x2080047
                 _0x2080042:
0008da 30e4      	CPI  R30,LOW(0x4)
0008db f499      	BRNE _0x2080049
0008dc 3320      	CPI  R18,48
0008dd f010      	BRLO _0x208004B
0008de 332a      	CPI  R18,58
0008df f008      	BRLO _0x208004C
                 _0x208004B:
0008e0 c008      	RJMP _0x208004A
                 _0x208004C:
0008e1 6200      	ORI  R16,LOW(32)
0008e2 e0aa      	LDI  R26,LOW(10)
0008e3 9f4a      	MUL  R20,R26
0008e4 2d40      	MOV  R20,R0
0008e5 2fe2      	MOV  R30,R18
0008e6 53e0      	SUBI R30,LOW(48)
0008e7 0f4e      	ADD  R20,R30
0008e8 c198      	RJMP _0x2080035
                 _0x208004A:
                 _0x2080047:
0008e9 362c      	CPI  R18,108
0008ea f419      	BRNE _0x208004D
0008eb 6002      	ORI  R16,LOW(2)
0008ec e015      	LDI  R17,LOW(5)
0008ed c193      	RJMP _0x2080035
                 _0x208004D:
0008ee c003      	RJMP _0x208004E
                 _0x2080049:
0008ef 30e5      	CPI  R30,LOW(0x5)
0008f0 f009      	BREQ PC+2
0008f1 c18f      	RJMP _0x2080035
                 _0x208004E:
0008f2 2fe2      	MOV  R30,R18
0008f3 36e3      	CPI  R30,LOW(0x63)
0008f4 f459      	BRNE _0x2080053
0008f5 940e 0cde 	CALL SUBOPT_0x2B
0008f7 940e 0ce5 	CALL SUBOPT_0x2C
0008f9 940e 0cde 	CALL SUBOPT_0x2B
0008fb 81a4      	LDD  R26,Z+4
0008fc 93aa      	ST   -Y,R26
0008fd 940e 0cec 	CALL SUBOPT_0x2D
0008ff c180      	RJMP _0x2080054
                 _0x2080053:
000900 34e5      	CPI  R30,LOW(0x45)
000901 f011      	BREQ _0x2080057
000902 36e5      	CPI  R30,LOW(0x65)
000903 f409      	BRNE _0x2080058
                 _0x2080057:
000904 c003      	RJMP _0x2080059
                 _0x2080058:
000905 36e6      	CPI  R30,LOW(0x66)
000906 f009      	BREQ PC+2
000907 c048      	RJMP _0x208005A
                 _0x2080059:
000908 01fe      	MOVW R30,R28
000909 9676      	ADIW R30,22
00090a 87ee      	STD  Y+14,R30
00090b 87ff      	STD  Y+14+1,R31
00090c 940e 0cf2 	CALL SUBOPT_0x2E
00090e 940e 1079 	CALL __GETD1P
000910 940e 0cf9 	CALL SUBOPT_0x2F
000912 940e 0cfe 	CALL SUBOPT_0x30
000914 85ad      	LDD  R26,Y+13
000915 23aa      	TST  R26
000916 f032      	BRMI _0x208005B
000917 89ad      	LDD  R26,Y+21
000918 32ab      	CPI  R26,LOW(0x2B)
000919 f059      	BREQ _0x208005D
00091a 32a0      	CPI  R26,LOW(0x20)
00091b f081      	BREQ _0x208005F
00091c c017      	RJMP _0x2080060
                 _0x208005B:
00091d 940e 0d00 	CALL SUBOPT_0x31
00091f 940e 0e23 	CALL __ANEGF1
000921 940e 0cf9 	CALL SUBOPT_0x2F
000923 e2ed      	LDI  R30,LOW(45)
000924 8bed      	STD  Y+21,R30
                 _0x208005D:
000925 ff07      	SBRS R16,7
000926 c005      	RJMP _0x2080061
000927 89ed      	LDD  R30,Y+21
000928 93ea      	ST   -Y,R30
000929 940e 0cec 	CALL SUBOPT_0x2D
00092b c008      	RJMP _0x2080062
                 _0x2080061:
                 _0x208005F:
00092c 85ee      	LDD  R30,Y+14
00092d 85ff      	LDD  R31,Y+14+1
00092e 9631      	ADIW R30,1
00092f 87ee      	STD  Y+14,R30
000930 87ff      	STD  Y+14+1,R31
000931 9731      	SBIW R30,1
000932 89ad      	LDD  R26,Y+21
000933 83a0      	STD  Z+0,R26
                 _0x2080062:
                 _0x2080060:
000934 ff05      	SBRS R16,5
000935 e046      	LDI  R20,LOW(6)
000936 3626      	CPI  R18,102
000937 f451      	BRNE _0x2080064
000938 940e 0d00 	CALL SUBOPT_0x31
00093a 940e 109a 	CALL __PUTPARD1
00093c 934a      	ST   -Y,R20
00093d 89ab      	LDD  R26,Y+19
00093e 89bc      	LDD  R27,Y+19+1
00093f 940e 0acc 	CALL _ftoa
000941 c009      	RJMP _0x2080065
                 _0x2080064:
000942 940e 0d00 	CALL SUBOPT_0x31
000944 940e 109a 	CALL __PUTPARD1
000946 934a      	ST   -Y,R20
000947 932a      	ST   -Y,R18
000948 89ac      	LDD  R26,Y+20
000949 89bd      	LDD  R27,Y+20+1
00094a de54      	RCALL __ftoe_G104
                 _0x2080065:
00094b 01fe      	MOVW R30,R28
00094c 9676      	ADIW R30,22
00094d 940e 0d05 	CALL SUBOPT_0x32
00094f c01e      	RJMP _0x2080066
                 _0x208005A:
000950 37e3      	CPI  R30,LOW(0x73)
000951 f439      	BRNE _0x2080068
000952 940e 0cfe 	CALL SUBOPT_0x30
000954 940e 0d0d 	CALL SUBOPT_0x33
000956 940e 0d05 	CALL SUBOPT_0x32
000958 c00e      	RJMP _0x2080069
                 _0x2080068:
000959 37e0      	CPI  R30,LOW(0x70)
00095a f4c1      	BRNE _0x208006B
00095b 940e 0cfe 	CALL SUBOPT_0x30
00095d 940e 0d0d 	CALL SUBOPT_0x33
00095f 87ee      	STD  Y+14,R30
000960 87ff      	STD  Y+14+1,R31
000961 85ae      	LDD  R26,Y+14
000962 85bf      	LDD  R27,Y+14+1
000963 940e 0ba7 	CALL _strlenf
000965 2f1e      	MOV  R17,R30
000966 6008      	ORI  R16,LOW(8)
                 _0x2080069:
000967 770f      	ANDI R16,LOW(127)
000968 3040      	CPI  R20,0
000969 f011      	BREQ _0x208006D
00096a 1741      	CP   R20,R17
00096b f008      	BRLO _0x208006E
                 _0x208006D:
00096c c001      	RJMP _0x208006C
                 _0x208006E:
00096d 2f14      	MOV  R17,R20
                 _0x208006C:
                 _0x2080066:
00096e e040      	LDI  R20,LOW(0)
00096f e0e0      	LDI  R30,LOW(0)
000970 8bec      	STD  Y+20,R30
000971 e030      	LDI  R19,LOW(0)
000972 c06d      	RJMP _0x208006F
                 _0x208006B:
000973 36e4      	CPI  R30,LOW(0x64)
000974 f011      	BREQ _0x2080072
000975 36e9      	CPI  R30,LOW(0x69)
000976 f411      	BRNE _0x2080073
                 _0x2080072:
000977 6004      	ORI  R16,LOW(4)
000978 c002      	RJMP _0x2080074
                 _0x2080073:
000979 37e5      	CPI  R30,LOW(0x75)
00097a f4a1      	BRNE _0x2080075
                 _0x2080074:
00097b e0ea      	LDI  R30,LOW(10)
00097c 8bec      	STD  Y+20,R30
00097d ff01      	SBRS R16,1
00097e c008      	RJMP _0x2080076
                +
00097f e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000980 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000981 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000982 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000983 940e 0d12 	CALL SUBOPT_0x34
000985 e01a      	LDI  R17,LOW(10)
000986 c022      	RJMP _0x2080077
                 _0x2080076:
                +
000987 e1e0     +LDI R30 , LOW ( 0x2710 )
000988 e2f7     +LDI R31 , HIGH ( 0x2710 )
000989 e060     +LDI R22 , BYTE3 ( 0x2710 )
00098a e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00098b 940e 0d12 	CALL SUBOPT_0x34
00098d e015      	LDI  R17,LOW(5)
00098e c01a      	RJMP _0x2080077
                 _0x2080075:
00098f 35e8      	CPI  R30,LOW(0x58)
000990 f411      	BRNE _0x2080079
000991 6008      	ORI  R16,LOW(8)
000992 c003      	RJMP _0x208007A
                 _0x2080079:
000993 37e8      	CPI  R30,LOW(0x78)
000994 f009      	BREQ PC+2
000995 c0ea      	RJMP _0x20800B8
                 _0x208007A:
000996 e1e0      	LDI  R30,LOW(16)
000997 8bec      	STD  Y+20,R30
000998 ff01      	SBRS R16,1
000999 c008      	RJMP _0x208007C
                +
00099a e0e0     +LDI R30 , LOW ( 0x10000000 )
00099b e0f0     +LDI R31 , HIGH ( 0x10000000 )
00099c e060     +LDI R22 , BYTE3 ( 0x10000000 )
00099d e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00099e 940e 0d12 	CALL SUBOPT_0x34
0009a0 e018      	LDI  R17,LOW(8)
0009a1 c007      	RJMP _0x2080077
                 _0x208007C:
                +
0009a2 e0e0     +LDI R30 , LOW ( 0x1000 )
0009a3 e1f0     +LDI R31 , HIGH ( 0x1000 )
0009a4 e060     +LDI R22 , BYTE3 ( 0x1000 )
0009a5 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0009a6 940e 0d12 	CALL SUBOPT_0x34
0009a8 e014      	LDI  R17,LOW(4)
                 _0x2080077:
0009a9 3040      	CPI  R20,0
0009aa f011      	BREQ _0x208007D
0009ab 770f      	ANDI R16,LOW(127)
0009ac c001      	RJMP _0x208007E
                 _0x208007D:
0009ad e041      	LDI  R20,LOW(1)
                 _0x208007E:
0009ae ff01      	SBRS R16,1
0009af c008      	RJMP _0x208007F
0009b0 940e 0cfe 	CALL SUBOPT_0x30
0009b2 940e 0cf2 	CALL SUBOPT_0x2E
0009b4 9614      	ADIW R26,4
0009b5 940e 1079 	CALL __GETD1P
0009b7 c00f      	RJMP _0x2080118
                 _0x208007F:
0009b8 ff02      	SBRS R16,2
0009b9 c007      	RJMP _0x2080081
0009ba 940e 0cfe 	CALL SUBOPT_0x30
0009bc 940e 0d0d 	CALL SUBOPT_0x33
0009be 940e 0fe2 	CALL __CWD1
0009c0 c006      	RJMP _0x2080118
                 _0x2080081:
0009c1 940e 0cfe 	CALL SUBOPT_0x30
0009c3 940e 0d0d 	CALL SUBOPT_0x33
0009c5 2766      	CLR  R22
0009c6 2777      	CLR  R23
                 _0x2080118:
                +
0009c7 87ea     +STD Y + 10 , R30
0009c8 87fb     +STD Y + 10 + 1 , R31
0009c9 876c     +STD Y + 10 + 2 , R22
0009ca 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0009cb ff02      	SBRS R16,2
0009cc c012      	RJMP _0x2080083
0009cd 85ad      	LDD  R26,Y+13
0009ce 23aa      	TST  R26
0009cf f442      	BRPL _0x2080084
0009d0 940e 0d00 	CALL SUBOPT_0x31
0009d2 940e 0fd4 	CALL __ANEGD1
0009d4 940e 0cf9 	CALL SUBOPT_0x2F
0009d6 e2ed      	LDI  R30,LOW(45)
0009d7 8bed      	STD  Y+21,R30
                 _0x2080084:
0009d8 89ed      	LDD  R30,Y+21
0009d9 30e0      	CPI  R30,0
0009da f019      	BREQ _0x2080085
0009db 5f1f      	SUBI R17,-LOW(1)
0009dc 5f4f      	SUBI R20,-LOW(1)
0009dd c001      	RJMP _0x2080086
                 _0x2080085:
0009de 7f0b      	ANDI R16,LOW(251)
                 _0x2080086:
                 _0x2080083:
0009df 2f34      	MOV  R19,R20
                 _0x208006F:
0009e0 fd00      	SBRC R16,0
0009e1 c014      	RJMP _0x2080087
                 _0x2080088:
0009e2 1715      	CP   R17,R21
0009e3 f410      	BRSH _0x208008B
0009e4 1735      	CP   R19,R21
0009e5 f008      	BRLO _0x208008C
                 _0x208008B:
0009e6 c00f      	RJMP _0x208008A
                 _0x208008C:
0009e7 ff07      	SBRS R16,7
0009e8 c008      	RJMP _0x208008D
0009e9 ff02      	SBRS R16,2
0009ea c004      	RJMP _0x208008E
0009eb 7f0b      	ANDI R16,LOW(251)
0009ec 892d      	LDD  R18,Y+21
0009ed 5011      	SUBI R17,LOW(1)
0009ee c001      	RJMP _0x208008F
                 _0x208008E:
0009ef e320      	LDI  R18,LOW(48)
                 _0x208008F:
0009f0 c001      	RJMP _0x2080090
                 _0x208008D:
0009f1 e220      	LDI  R18,LOW(32)
                 _0x2080090:
0009f2 940e 0cd7 	CALL SUBOPT_0x2A
0009f4 5051      	SUBI R21,LOW(1)
0009f5 cfec      	RJMP _0x2080088
                 _0x208008A:
                 _0x2080087:
                 _0x2080091:
0009f6 1714      	CP   R17,R20
0009f7 f490      	BRSH _0x2080093
0009f8 6100      	ORI  R16,LOW(16)
0009f9 ff02      	SBRS R16,2
0009fa c006      	RJMP _0x2080094
0009fb 940e 0d17 	CALL SUBOPT_0x35
0009fd f009      	BREQ _0x2080095
0009fe 5051      	SUBI R21,LOW(1)
                 _0x2080095:
0009ff 5011      	SUBI R17,LOW(1)
000a00 5041      	SUBI R20,LOW(1)
                 _0x2080094:
000a01 e3e0      	LDI  R30,LOW(48)
000a02 93ea      	ST   -Y,R30
000a03 940e 0cec 	CALL SUBOPT_0x2D
000a05 3050      	CPI  R21,0
000a06 f009      	BREQ _0x2080096
000a07 5051      	SUBI R21,LOW(1)
                 _0x2080096:
000a08 5041      	SUBI R20,LOW(1)
000a09 cfec      	RJMP _0x2080091
                 _0x2080093:
000a0a 2f31      	MOV  R19,R17
000a0b 89ec      	LDD  R30,Y+20
000a0c 30e0      	CPI  R30,0
000a0d f4b9      	BRNE _0x2080097
                 _0x2080098:
000a0e 3030      	CPI  R19,0
000a0f f0a1      	BREQ _0x208009A
000a10 ff03      	SBRS R16,3
000a11 c006      	RJMP _0x208009B
000a12 85ee      	LDD  R30,Y+14
000a13 85ff      	LDD  R31,Y+14+1
000a14 9125      	LPM  R18,Z+
000a15 87ee      	STD  Y+14,R30
000a16 87ff      	STD  Y+14+1,R31
000a17 c005      	RJMP _0x208009C
                 _0x208009B:
000a18 85ae      	LDD  R26,Y+14
000a19 85bf      	LDD  R27,Y+14+1
000a1a 912d      	LD   R18,X+
000a1b 87ae      	STD  Y+14,R26
000a1c 87bf      	STD  Y+14+1,R27
                 _0x208009C:
000a1d 940e 0cd7 	CALL SUBOPT_0x2A
000a1f 3050      	CPI  R21,0
000a20 f009      	BREQ _0x208009D
000a21 5051      	SUBI R21,LOW(1)
                 _0x208009D:
000a22 5031      	SUBI R19,LOW(1)
000a23 cfea      	RJMP _0x2080098
                 _0x208009A:
000a24 c051      	RJMP _0x208009E
                 _0x2080097:
                 _0x20800A0:
000a25 940e 0d29 	CALL SUBOPT_0x36
000a27 940e 1012 	CALL __DIVD21U
000a29 2f2e      	MOV  R18,R30
000a2a 302a      	CPI  R18,10
000a2b f030      	BRLO _0x20800A2
000a2c ff03      	SBRS R16,3
000a2d c002      	RJMP _0x20800A3
000a2e 5c29      	SUBI R18,-LOW(55)
000a2f c001      	RJMP _0x20800A4
                 _0x20800A3:
000a30 5a29      	SUBI R18,-LOW(87)
                 _0x20800A4:
000a31 c001      	RJMP _0x20800A5
                 _0x20800A2:
000a32 5d20      	SUBI R18,-LOW(48)
                 _0x20800A5:
000a33 fd04      	SBRC R16,4
000a34 c021      	RJMP _0x20800A7
000a35 3321      	CPI  R18,49
000a36 f460      	BRSH _0x20800A9
                +
000a37 89a8     +LDD R26 , Y + 16
000a38 89b9     +LDD R27 , Y + 16 + 1
000a39 898a     +LDD R24 , Y + 16 + 2
000a3a 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000a3b 30a1     +CPI R26 , LOW ( 0x1 )
000a3c e0e0     +LDI R30 , HIGH ( 0x1 )
000a3d 07be     +CPC R27 , R30
000a3e e0e0     +LDI R30 , BYTE3 ( 0x1 )
000a3f 078e     +CPC R24 , R30
000a40 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000a41 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000a42 f409      	BRNE _0x20800A8
                 _0x20800A9:
000a43 c00b      	RJMP _0x20800AB
                 _0x20800A8:
000a44 1743      	CP   R20,R19
000a45 f440      	BRSH _0x2080119
000a46 1753      	CP   R21,R19
000a47 f010      	BRLO _0x20800AE
000a48 ff00      	SBRS R16,0
000a49 c001      	RJMP _0x20800AF
                 _0x20800AE:
000a4a c010      	RJMP _0x20800AD
                 _0x20800AF:
000a4b e220      	LDI  R18,LOW(32)
000a4c ff07      	SBRS R16,7
000a4d c008      	RJMP _0x20800B0
                 _0x2080119:
000a4e e320      	LDI  R18,LOW(48)
                 _0x20800AB:
000a4f 6100      	ORI  R16,LOW(16)
000a50 ff02      	SBRS R16,2
000a51 c004      	RJMP _0x20800B1
000a52 940e 0d17 	CALL SUBOPT_0x35
000a54 f009      	BREQ _0x20800B2
000a55 5051      	SUBI R21,LOW(1)
                 _0x20800B2:
                 _0x20800B1:
                 _0x20800B0:
                 _0x20800A7:
000a56 940e 0cd7 	CALL SUBOPT_0x2A
000a58 3050      	CPI  R21,0
000a59 f009      	BREQ _0x20800B3
000a5a 5051      	SUBI R21,LOW(1)
                 _0x20800B3:
                 _0x20800AD:
000a5b 5031      	SUBI R19,LOW(1)
000a5c 940e 0d29 	CALL SUBOPT_0x36
000a5e 940e 1051 	CALL __MODD21U
000a60 940e 0cf9 	CALL SUBOPT_0x2F
000a62 89ec      	LDD  R30,Y+20
                +
000a63 89a8     +LDD R26 , Y + 16
000a64 89b9     +LDD R27 , Y + 16 + 1
000a65 898a     +LDD R24 , Y + 16 + 2
000a66 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000a67 27ff      	CLR  R31
000a68 2766      	CLR  R22
000a69 2777      	CLR  R23
000a6a 940e 1012 	CALL __DIVD21U
000a6c 940e 0d12 	CALL SUBOPT_0x34
                +
000a6e 89e8     +LDD R30 , Y + 16
000a6f 89f9     +LDD R31 , Y + 16 + 1
000a70 896a     +LDD R22 , Y + 16 + 2
000a71 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000a72 940e 10ce 	CALL __CPD10
000a74 f009      	BREQ _0x20800A1
000a75 cfaf      	RJMP _0x20800A0
                 _0x20800A1:
                 _0x208009E:
000a76 ff00      	SBRS R16,0
000a77 c008      	RJMP _0x20800B4
                 _0x20800B5:
000a78 3050      	CPI  R21,0
000a79 f031      	BREQ _0x20800B7
000a7a 5051      	SUBI R21,LOW(1)
000a7b e2e0      	LDI  R30,LOW(32)
000a7c 93ea      	ST   -Y,R30
000a7d 940e 0cec 	CALL SUBOPT_0x2D
000a7f cff8      	RJMP _0x20800B5
                 _0x20800B7:
                 _0x20800B4:
                 _0x20800B8:
                 _0x2080054:
                 _0x2080117:
000a80 e010      	LDI  R17,LOW(0)
                 _0x2080035:
000a81 ce0c      	RJMP _0x2080030
                 _0x2080032:
000a82 81ae      	LDD  R26,Y+6
000a83 81bf      	LDD  R27,Y+6+1
000a84 940e 1075 	CALL __GETW1P
000a86 940e 10df 	CALL __LOADLOCR6
000a88 96ef      	ADIW R28,63
000a89 966f      	ADIW R28,31
000a8a 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000a8b 92ff      	PUSH R15
000a8c 2ef8      	MOV  R15,R24
000a8d 9726      	SBIW R28,6
000a8e 940e 10da 	CALL __SAVELOCR4
000a90 940e 0d32 	CALL SUBOPT_0x37
000a92 9730      	SBIW R30,0
000a93 f419      	BRNE _0x20800B9
000a94 efef      	LDI  R30,LOW(65535)
000a95 efff      	LDI  R31,HIGH(65535)
000a96 c023      	RJMP _0x2120003
                 _0x20800B9:
000a97 01de      	MOVW R26,R28
000a98 9616      	ADIW R26,6
000a99 940e 0fcc 	CALL __ADDW2R15
000a9b 018d      	MOVW R16,R26
000a9c 940e 0d32 	CALL SUBOPT_0x37
000a9e 83ee      	STD  Y+6,R30
000a9f 83ff      	STD  Y+6+1,R31
000aa0 e0e0      	LDI  R30,LOW(0)
000aa1 87e8      	STD  Y+8,R30
000aa2 87e9      	STD  Y+8+1,R30
000aa3 01de      	MOVW R26,R28
000aa4 961a      	ADIW R26,10
000aa5 940e 0fcc 	CALL __ADDW2R15
000aa7 940e 1075 	CALL __GETW1P
000aa9 93fa      	ST   -Y,R31
000aaa 93ea      	ST   -Y,R30
000aab 931a      	ST   -Y,R17
000aac 930a      	ST   -Y,R16
000aad e6e5      	LDI  R30,LOW(_put_buff_G104)
000aae e0f7      	LDI  R31,HIGH(_put_buff_G104)
000aaf 93fa      	ST   -Y,R31
000ab0 93ea      	ST   -Y,R30
000ab1 01de      	MOVW R26,R28
000ab2 961a      	ADIW R26,10
000ab3 ddbd      	RCALL __print_G104
000ab4 019f      	MOVW R18,R30
000ab5 81ae      	LDD  R26,Y+6
000ab6 81bf      	LDD  R27,Y+6+1
000ab7 e0e0      	LDI  R30,LOW(0)
000ab8 93ec      	ST   X,R30
000ab9 01f9      	MOVW R30,R18
                 _0x2120003:
000aba 940e 10e1 	CALL __LOADLOCR4
000abc 962a      	ADIW R28,10
000abd 90ff      	POP  R15
000abe 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _bcd2bin:
                 ; .FSTART _bcd2bin
000abf 93aa      	ST   -Y,R26
000ac0 81e8          ld   r30,y
000ac1 95e2          swap r30
000ac2 70ef          andi r30,0xf
000ac3 2fae          mov  r26,r30
000ac4 0faa          lsl  r26
000ac5 0faa          lsl  r26
000ac6 0fea          add  r30,r26
000ac7 0fee          lsl  r30
000ac8 91a9          ld   r26,y+
000ac9 70af          andi r26,0xf
000aca 0fea          add  r30,r26
000acb 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000acc 940e 0c79 	CALL SUBOPT_0x1E
000ace e0e0      	LDI  R30,LOW(0)
000acf 83ea      	STD  Y+2,R30
000ad0 e3ef      	LDI  R30,LOW(63)
000ad1 83eb      	STD  Y+3,R30
000ad2 931a      	ST   -Y,R17
000ad3 930a      	ST   -Y,R16
000ad4 85eb      	LDD  R30,Y+11
000ad5 85fc      	LDD  R31,Y+11+1
000ad6 3fef      	CPI  R30,LOW(0xFFFF)
000ad7 efaf      	LDI  R26,HIGH(0xFFFF)
000ad8 07fa      	CPC  R31,R26
000ad9 f439      	BRNE _0x20C000D
000ada 940e 0d39 	CALL SUBOPT_0x38
                +
000adc eca2     +LDI R26 , LOW ( 2 * _0x20C0000 + ( 0 ) )
000add e0b0     +LDI R27 , HIGH ( 2 * _0x20C0000 + ( 0 ) )
                 	__POINTW2FN _0x20C0000,0
000ade 940e 0b8e 	CALL _strcpyf
000ae0 c0a9      	RJMP _0x2120002
                 _0x20C000D:
000ae1 3fef      	CPI  R30,LOW(0x7FFF)
000ae2 e7af      	LDI  R26,HIGH(0x7FFF)
000ae3 07fa      	CPC  R31,R26
000ae4 f439      	BRNE _0x20C000C
000ae5 940e 0d39 	CALL SUBOPT_0x38
                +
000ae7 eca3     +LDI R26 , LOW ( 2 * _0x20C0000 + ( 1 ) )
000ae8 e0b0     +LDI R27 , HIGH ( 2 * _0x20C0000 + ( 1 ) )
                 	__POINTW2FN _0x20C0000,1
000ae9 940e 0b8e 	CALL _strcpyf
000aeb c09e      	RJMP _0x2120002
                 _0x20C000C:
000aec 85ac      	LDD  R26,Y+12
000aed 23aa      	TST  R26
000aee f462      	BRPL _0x20C000F
                +
000aef 85e9     +LDD R30 , Y + 9
000af0 85fa     +LDD R31 , Y + 9 + 1
000af1 856b     +LDD R22 , Y + 9 + 2
000af2 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000af3 940e 0e23 	CALL __ANEGF1
000af5 940e 0d3e 	CALL SUBOPT_0x39
000af7 940e 0d43 	CALL SUBOPT_0x3A
000af9 e2ed      	LDI  R30,LOW(45)
000afa 93ec      	ST   X,R30
                 _0x20C000F:
000afb 85a8      	LDD  R26,Y+8
000afc 30a7      	CPI  R26,LOW(0x7)
000afd f010      	BRLO _0x20C0010
000afe e0e6      	LDI  R30,LOW(6)
000aff 87e8      	STD  Y+8,R30
                 _0x20C0010:
000b00 8518      	LDD  R17,Y+8
                 _0x20C0011:
000b01 2fe1      	MOV  R30,R17
000b02 5011      	SUBI R17,1
000b03 30e0      	CPI  R30,0
000b04 f039      	BREQ _0x20C0013
000b05 940e 0d4a 	CALL SUBOPT_0x3B
000b07 940e 0cbe 	CALL SUBOPT_0x26
000b09 940e 0d4f 	CALL SUBOPT_0x3C
000b0b cff5      	RJMP _0x20C0011
                 _0x20C0013:
000b0c 940e 0d54 	CALL SUBOPT_0x3D
000b0e 940e 0ec9 	CALL __ADDF12
000b10 940e 0d3e 	CALL SUBOPT_0x39
000b12 e010      	LDI  R17,LOW(0)
                +
000b13 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000b14 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000b15 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000b16 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000b17 940e 0d4f 	CALL SUBOPT_0x3C
                 _0x20C0014:
000b19 940e 0d54 	CALL SUBOPT_0x3D
000b1b 940e 0fac 	CALL __CMPF12
000b1d f088      	BRLO _0x20C0016
000b1e 940e 0d4a 	CALL SUBOPT_0x3B
000b20 940e 0cab 	CALL SUBOPT_0x23
000b22 940e 0d4f 	CALL SUBOPT_0x3C
000b24 5f1f      	SUBI R17,-LOW(1)
000b25 3217      	CPI  R17,39
000b26 f038      	BRLO _0x20C0017
000b27 940e 0d39 	CALL SUBOPT_0x38
                +
000b29 eca7     +LDI R26 , LOW ( 2 * _0x20C0000 + ( 5 ) )
000b2a e0b0     +LDI R27 , HIGH ( 2 * _0x20C0000 + ( 5 ) )
                 	__POINTW2FN _0x20C0000,5
000b2b 940e 0b8e 	CALL _strcpyf
000b2d c05c      	RJMP _0x2120002
                 _0x20C0017:
000b2e cfea      	RJMP _0x20C0014
                 _0x20C0016:
000b2f 3010      	CPI  R17,0
000b30 f429      	BRNE _0x20C0018
000b31 940e 0d43 	CALL SUBOPT_0x3A
000b33 e3e0      	LDI  R30,LOW(48)
000b34 93ec      	ST   X,R30
000b35 c029      	RJMP _0x20C0019
                 _0x20C0018:
                 _0x20C001A:
000b36 2fe1      	MOV  R30,R17
000b37 5011      	SUBI R17,1
000b38 30e0      	CPI  R30,0
000b39 f129      	BREQ _0x20C001C
000b3a 940e 0d4a 	CALL SUBOPT_0x3B
000b3c 940e 0cbe 	CALL SUBOPT_0x26
000b3e 940e 0cb7 	CALL SUBOPT_0x25
000b40 01df      	MOVW R26,R30
000b41 01cb      	MOVW R24,R22
000b42 940e 0750 	CALL _floor
000b44 940e 0d4f 	CALL SUBOPT_0x3C
000b46 940e 0d54 	CALL SUBOPT_0x3D
000b48 940e 0f67 	CALL __DIVF21
000b4a 940e 0e56 	CALL __CFD1U
000b4c 2f0e      	MOV  R16,R30
000b4d 940e 0d43 	CALL SUBOPT_0x3A
000b4f 940e 0ccc 	CALL SUBOPT_0x28
000b51 e0f0      	LDI  R31,0
000b52 940e 0d4a 	CALL SUBOPT_0x3B
000b54 940e 0be5 	CALL SUBOPT_0x7
000b56 940e 0f19 	CALL __MULF12
000b58 940e 0d5d 	CALL SUBOPT_0x3E
000b5a 940e 0c17 	CALL SUBOPT_0x10
000b5c 940e 0d3e 	CALL SUBOPT_0x39
000b5e cfd7      	RJMP _0x20C001A
                 _0x20C001C:
                 _0x20C0019:
000b5f 85e8      	LDD  R30,Y+8
000b60 30e0      	CPI  R30,0
000b61 f121      	BREQ _0x2120001
000b62 940e 0d43 	CALL SUBOPT_0x3A
000b64 e2ee      	LDI  R30,LOW(46)
000b65 93ec      	ST   X,R30
                 _0x20C001E:
000b66 85e8      	LDD  R30,Y+8
000b67 50e1      	SUBI R30,LOW(1)
000b68 87e8      	STD  Y+8,R30
000b69 5fef      	SUBI R30,-LOW(1)
000b6a f0d9      	BREQ _0x20C0020
000b6b 940e 0d5d 	CALL SUBOPT_0x3E
000b6d 940e 0cab 	CALL SUBOPT_0x23
000b6f 940e 0d3e 	CALL SUBOPT_0x39
                +
000b71 85e9     +LDD R30 , Y + 9
000b72 85fa     +LDD R31 , Y + 9 + 1
000b73 856b     +LDD R22 , Y + 9 + 2
000b74 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000b75 940e 0e56 	CALL __CFD1U
000b77 2f0e      	MOV  R16,R30
000b78 940e 0d43 	CALL SUBOPT_0x3A
000b7a 940e 0ccc 	CALL SUBOPT_0x28
000b7c e0f0      	LDI  R31,0
000b7d 940e 0d5d 	CALL SUBOPT_0x3E
000b7f 940e 0be5 	CALL SUBOPT_0x7
000b81 940e 0c17 	CALL SUBOPT_0x10
000b83 940e 0d3e 	CALL SUBOPT_0x39
000b85 cfe0      	RJMP _0x20C001E
                 _0x20C0020:
                 _0x2120001:
000b86 81ae      	LDD  R26,Y+6
000b87 81bf      	LDD  R27,Y+6+1
000b88 e0e0      	LDI  R30,LOW(0)
000b89 93ec      	ST   X,R30
                 _0x2120002:
000b8a 8119      	LDD  R17,Y+1
000b8b 8108      	LDD  R16,Y+0
000b8c 962d      	ADIW R28,13
000b8d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000b8e 93ba      	ST   -Y,R27
000b8f 93aa      	ST   -Y,R26
000b90 91e9          ld   r30,y+
000b91 91f9          ld   r31,y+
000b92 91a9          ld   r26,y+
000b93 91b9          ld   r27,y+
000b94 01cd          movw r24,r26
                 strcpyf0:
000b95 9005      	lpm  r0,z+
000b96 920d          st   x+,r0
000b97 2000          tst  r0
000b98 f7e1          brne strcpyf0
000b99 01fc          movw r30,r24
000b9a 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000b9b 93ba      	ST   -Y,R27
000b9c 93aa      	ST   -Y,R26
000b9d 91a9          ld   r26,y+
000b9e 91b9          ld   r27,y+
000b9f 27ee          clr  r30
000ba0 27ff          clr  r31
                 strlen0:
000ba1 916d          ld   r22,x+
000ba2 2366          tst  r22
000ba3 f011          breq strlen1
000ba4 9631          adiw r30,1
000ba5 cffb          rjmp strlen0
                 strlen1:
000ba6 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000ba7 93ba      	ST   -Y,R27
000ba8 93aa      	ST   -Y,R26
000ba9 27aa          clr  r26
000baa 27bb          clr  r27
000bab 91e9          ld   r30,y+
000bac 91f9          ld   r31,y+
                 strlenf0:
000bad 9005      	lpm  r0,z+
000bae 2000          tst  r0
000baf f011          breq strlenf1
000bb0 9611          adiw r26,1
000bb1 cffb          rjmp strlenf0
                 strlenf1:
000bb2 01fd          movw r30,r26
000bb3 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 ___ds18b20_scratch_pad:
000264           	.BYTE 0x9
                 _Temp:
00026d           	.BYTE 0x4
                 _lcd_buff:
000271           	.BYTE 0x10
                 
                 	.ESEG
                 _Year_century:
000000           	.BYTE 0x1
                 
                 	.DSEG
                 _sDay:
000281           	.BYTE 0x1
                 _menu_selector:
000282           	.BYTE 0x1
                 __base_y_G102:
000283           	.BYTE 0x4
                 __lcd_x:
000287           	.BYTE 0x1
                 __lcd_y:
000288           	.BYTE 0x1
                 __lcd_maxx:
000289           	.BYTE 0x1
                 __seed_G106:
00028a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
000bb4 e0a0      	LDI  R26,LOW(_Year_century)
000bb5 e0b0      	LDI  R27,HIGH(_Year_century)
000bb6 940e 10b1 	CALL __EEPROMRDB
000bb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000bb9 e7e1      	LDI  R30,LOW(_lcd_buff)
000bba e0f2      	LDI  R31,HIGH(_lcd_buff)
000bbb 93fa      	ST   -Y,R31
000bbc 93ea      	ST   -Y,R30
                +
000bbd e7e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000bbe e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000bbf 93fa      	ST   -Y,R31
000bc0 93ea      	ST   -Y,R30
000bc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
000bc2 e6a4      	LDI  R26,LOW(100)
000bc3 9fea      	MUL  R30,R26
000bc4 01f0      	MOVW R30,R0
000bc5 01df      	MOVW R26,R30
000bc6 2de6      	MOV  R30,R6
000bc7 e0f0      	LDI  R31,0
000bc8 0fea      	ADD  R30,R26
000bc9 1ffb      	ADC  R31,R27
000bca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000bcb 27ff      	CLR  R31
000bcc 2766      	CLR  R22
000bcd 2777      	CLR  R23
000bce 940e 109a 	CALL __PUTPARD1
000bd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000bd1 93ea      	ST   -Y,R30
000bd2 e0a0      	LDI  R26,LOW(0)
000bd3 940e 06a0 	CALL _lcd_gotoxy
000bd5 e7a1      	LDI  R26,LOW(_lcd_buff)
000bd6 e0b2      	LDI  R27,HIGH(_lcd_buff)
000bd7 940c 06df 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x5:
000bd9 e7e1      	LDI  R30,LOW(_lcd_buff)
000bda e0f2      	LDI  R31,HIGH(_lcd_buff)
000bdb 93fa      	ST   -Y,R31
000bdc 93ea      	ST   -Y,R30
000bdd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000bde 81aa      	LDD  R26,Y+2
000bdf 81bb      	LDD  R27,Y+2+1
000be0 e0e4      	LDI  R30,LOW(4)
000be1 e0f0      	LDI  R31,HIGH(4)
000be2 940e 1043 	CALL __MODW21
000be4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
000be5 940e 0fe2 	CALL __CWD1
000be7 940e 0e8f 	CALL __CDF1
000be9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
                +
000bea e0e0     +LDI R30 , LOW ( 0x43B6A000 )
000beb eaf0     +LDI R31 , HIGH ( 0x43B6A000 )
000bec eb66     +LDI R22 , BYTE3 ( 0x43B6A000 )
000bed e473     +LDI R23 , BYTE4 ( 0x43B6A000 )
                 	__GETD1N 0x43B6A000
000bee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000bef 940e 0ec9 	CALL __ADDF12
                +
000bf1 87ee     +STD Y + 14 , R30
000bf2 87ff     +STD Y + 14 + 1 , R31
000bf3 8b68     +STD Y + 14 + 2 , R22
000bf4 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
000bf5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 37 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0xA:
                +
000bf6 85ee     +LDD R30 , Y + 14
000bf7 85ff     +LDD R31 , Y + 14 + 1
000bf8 8968     +LDD R22 , Y + 14 + 2
000bf9 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
000bfa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
000bfb e0a0     +LDI R26 , LOW ( 0x41F80000 )
000bfc e0b0     +LDI R27 , HIGH ( 0x41F80000 )
000bfd ef88     +LDI R24 , BYTE3 ( 0x41F80000 )
000bfe e491     +LDI R25 , BYTE4 ( 0x41F80000 )
                 	__GETD2N 0x41F80000
000bff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
                +
000c00 87ee     +STD Y + 14 , R30
000c01 87ff     +STD Y + 14 + 1 , R31
000c02 8b68     +STD Y + 14 + 2 , R22
000c03 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
000c04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
                +
000c05 85ae     +LDD R26 , Y + 14
000c06 85bf     +LDD R27 , Y + 14 + 1
000c07 8988     +LDD R24 , Y + 14 + 2
000c08 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
000c09 dfe0      	RCALL SUBOPT_0x8
000c0a 940e 0f67 	CALL __DIVF21
000c0c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
                +
000c0d e0a0     +LDI R26 , LOW ( 0x3F800000 )
000c0e e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000c0f e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000c10 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000c11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF:
                +
000c12 85ae     +LDD R26 , Y + 14
000c13 85bf     +LDD R27 , Y + 14 + 1
000c14 8988     +LDD R24 , Y + 14 + 2
000c15 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
000c16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
000c17 940e 10a4 	CALL __SWAPD12
000c19 940e 0ec2 	CALL __SUBF12
000c1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11:
                +
000c1c 85aa     +LDD R26 , Y + 10
000c1d 85bb     +LDD R27 , Y + 10 + 1
000c1e 858c     +LDD R24 , Y + 10 + 2
000c1f 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
                +
000c20 e0e4     +LDI R30 , LOW ( 0x4 )
000c21 e0f0     +LDI R31 , HIGH ( 0x4 )
000c22 e060     +LDI R22 , BYTE3 ( 0x4 )
000c23 e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
000c24 940e 1055 	CALL __MODD21
000c26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x12:
000c27 940e 0ec2 	CALL __SUBF12
000c29 940e 0e58 	CALL __CFD1
000c2b 01af      	MOVW R20,R30
000c2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x13:
                +
000c2d 85ea     +LDD R30 , Y + 10
000c2e 85fb     +LDD R31 , Y + 10 + 1
000c2f 856c     +LDD R22 , Y + 10 + 2
000c30 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
                +
000c31 50e1     +SUBI R30 , LOW ( 1 )
000c32 40f0     +SBCI R31 , HIGH ( 1 )
000c33 4060     +SBCI R22 , BYTE3 ( 1 )
000c34 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
                +
000c35 87ea     +STD Y + 10 , R30
000c36 87fb     +STD Y + 10 + 1 , R31
000c37 876c     +STD Y + 10 + 2 , R22
000c38 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
                +
000c39 e02c     +LDI R18 , LOW ( 12 )
000c3a e030     +LDI R19 , HIGH ( 12 )
                 	__GETWRN 18,19,12
000c3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
000c3c 940e 0d67 	CALL _i2c_start
000c3e eda0      	LDI  R26,LOW(208)
000c3f 940c 0d9b 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000c41 940e 0d9b 	CALL _i2c_write
000c43 940c 0d76 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
000c45 940e 0d67 	CALL _i2c_start
000c47 eda1      	LDI  R26,LOW(209)
000c48 940e 0d9b 	CALL _i2c_write
000c4a e0a1      	LDI  R26,LOW(1)
000c4b 940c 0d80 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000c4d 2fae      	MOV  R26,R30
000c4e 940e 0abf 	CALL _bcd2bin
000c50 81a8      	LD   R26,Y
000c51 81b9      	LDD  R27,Y+1
000c52 93ec      	ST   X,R30
000c53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18:
000c54 e0a1      	LDI  R26,LOW(1)
000c55 940e 0d80 	CALL _i2c_read
000c57 2fae      	MOV  R26,R30
000c58 940c 0abf 	JMP  _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000c5a 81aa      	LDD  R26,Y+2
000c5b 81bb      	LDD  R27,Y+2+1
000c5c 93ec      	ST   X,R30
000c5d e0a0      	LDI  R26,LOW(0)
000c5e 940c 0d80 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
                +
000c60 e0e0     +LDI R30 , LOW ( 0xC61C3C00 )
000c61 e3fc     +LDI R31 , HIGH ( 0xC61C3C00 )
000c62 e16c     +LDI R22 , BYTE3 ( 0xC61C3C00 )
000c63 ec76     +LDI R23 , BYTE4 ( 0xC61C3C00 )
                 	__GETD1N 0xC61C3C00
000c64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
000c65 940e 068c 	CALL __lcd_write_data
000c67 e0a3      	LDI  R26,LOW(3)
000c68 e0b0      	LDI  R27,0
000c69 940c 0db3 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1C:
000c6b e3a0      	LDI  R26,LOW(48)
000c6c 940e 0678 	CALL __lcd_write_nibble_G102
                +
000c6e ec88     +LDI R24 , LOW ( 200 )
000c6f e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000c70 9701     +SBIW R24 , 1
000c71 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000c72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
000c73 91ed      	LD   R30,X+
000c74 91fd      	LD   R31,X+
000c75 9631      	ADIW R30,1
000c76 93fe      	ST   -X,R31
000c77 93ee      	ST   -X,R30
000c78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1E:
000c79 93ba      	ST   -Y,R27
000c7a 93aa      	ST   -Y,R26
000c7b 9724      	SBIW R28,4
000c7c e0e0      	LDI  R30,LOW(0)
000c7d 83e8      	ST   Y,R30
000c7e 83e9      	STD  Y+1,R30
000c7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1F:
                +
000c80 81ac     +LDD R26 , Y + 4
000c81 81bd     +LDD R27 , Y + 4 + 1
000c82 818e     +LDD R24 , Y + 4 + 2
000c83 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000c84 e0e0     +LDI R30 , LOW ( 0x41200000 )
000c85 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000c86 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000c87 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000c88 940e 0f19 	CALL __MULF12
                +
000c8a 83ec     +STD Y + 4 , R30
000c8b 83fd     +STD Y + 4 + 1 , R31
000c8c 836e     +STD Y + 4 + 2 , R22
000c8d 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000c8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x20:
                +
000c8f 81ec     +LDD R30 , Y + 4
000c90 81fd     +LDD R31 , Y + 4 + 1
000c91 816e     +LDD R22 , Y + 4 + 2
000c92 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000c93 85ac     +LDD R26 , Y + 12
000c94 85bd     +LDD R27 , Y + 12 + 1
000c95 858e     +LDD R24 , Y + 12 + 2
000c96 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000c97 940e 0fac 	CALL __CMPF12
000c99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
                +
000c9a 85ac     +LDD R26 , Y + 12
000c9b 85bd     +LDD R27 , Y + 12 + 1
000c9c 858e     +LDD R24 , Y + 12 + 2
000c9d 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000c9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x22:
                +
000c9f eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000ca0 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000ca1 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000ca2 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000ca3 940e 0f19 	CALL __MULF12
                +
000ca5 87ec     +STD Y + 12 , R30
000ca6 87fd     +STD Y + 12 + 1 , R31
000ca7 876e     +STD Y + 12 + 2 , R22
000ca8 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000ca9 5f3f      	SUBI R19,-LOW(1)
000caa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
                +
000cab e0e0     +LDI R30 , LOW ( 0x41200000 )
000cac e0f0     +LDI R31 , HIGH ( 0x41200000 )
000cad e260     +LDI R22 , BYTE3 ( 0x41200000 )
000cae e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000caf 940e 0f19 	CALL __MULF12
000cb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
                +
000cb2 87ec     +STD Y + 12 , R30
000cb3 87fd     +STD Y + 12 + 1 , R31
000cb4 876e     +STD Y + 12 + 2 , R22
000cb5 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000cb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25:
                +
000cb7 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000cb8 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000cb9 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000cba e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000cbb 940e 0ec9 	CALL __ADDF12
000cbd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
                +
000cbe eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000cbf ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000cc0 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000cc1 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000cc2 940e 0f19 	CALL __MULF12
000cc4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
000cc5 85a8      	LDD  R26,Y+8
000cc6 85b9      	LDD  R27,Y+8+1
000cc7 9611      	ADIW R26,1
000cc8 87a8      	STD  Y+8,R26
000cc9 87b9      	STD  Y+8+1,R27
000cca 9711      	SBIW R26,1
000ccb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000ccc 2fe0      	MOV  R30,R16
000ccd 5de0      	SUBI R30,-LOW(48)
000cce 93ec      	ST   X,R30
000ccf 2fe0      	MOV  R30,R16
000cd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x29:
000cd1 85e8      	LDD  R30,Y+8
000cd2 85f9      	LDD  R31,Y+8+1
000cd3 9631      	ADIW R30,1
000cd4 87e8      	STD  Y+8,R30
000cd5 87f9      	STD  Y+8+1,R31
000cd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2A:
000cd7 932a      	ST   -Y,R18
000cd8 81af      	LDD  R26,Y+7
000cd9 85b8      	LDD  R27,Y+7+1
000cda 85e9      	LDD  R30,Y+9
000cdb 85fa      	LDD  R31,Y+9+1
000cdc 9509      	ICALL
000cdd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2B:
                +
000cde 01fe     +MOVW R30 , R28
000cdf 5ae6     +SUBI R30 , LOW ( - 90 )
000ce0 4fff     +SBCI R31 , HIGH ( - 90 )
000ce1 9001     +LD R0 , Z +
000ce2 81f0     +LD R31 , Z
000ce3 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000ce4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2C:
000ce5 9734      	SBIW R30,4
                +
000ce6 01de     +MOVW R26 , R28
000ce7 5aa6     +SUBI R26 , LOW ( - 90 )
000ce8 4fbf     +SBCI R27 , HIGH ( - 90 )
000ce9 93ed     +ST X + , R30
000cea 93fc     +ST X , R31
                 	__PUTW1SX 90
000ceb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2D:
000cec 81af      	LDD  R26,Y+7
000ced 85b8      	LDD  R27,Y+7+1
000cee 85e9      	LDD  R30,Y+9
000cef 85fa      	LDD  R31,Y+9+1
000cf0 9509      	ICALL
000cf1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2E:
                +
000cf2 01de     +MOVW R26 , R28
000cf3 5aa6     +SUBI R26 , LOW ( - 90 )
000cf4 4fbf     +SBCI R27 , HIGH ( - 90 )
000cf5 900d     +LD R0 , X +
000cf6 91bc     +LD R27 , X
000cf7 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000cf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
                +
000cf9 87ea     +STD Y + 10 , R30
000cfa 87fb     +STD Y + 10 + 1 , R31
000cfb 876c     +STD Y + 10 + 2 , R22
000cfc 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000cfd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x30:
000cfe dfdf      	RCALL SUBOPT_0x2B
000cff cfe5      	RJMP SUBOPT_0x2C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31:
                +
000d00 85ea     +LDD R30 , Y + 10
000d01 85fb     +LDD R31 , Y + 10 + 1
000d02 856c     +LDD R22 , Y + 10 + 2
000d03 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000d04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x32:
000d05 87ee      	STD  Y+14,R30
000d06 87ff      	STD  Y+14+1,R31
000d07 85ae      	LDD  R26,Y+14
000d08 85bf      	LDD  R27,Y+14+1
000d09 940e 0b9b 	CALL _strlen
000d0b 2f1e      	MOV  R17,R30
000d0c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x33:
000d0d dfe4      	RCALL SUBOPT_0x2E
000d0e 9614      	ADIW R26,4
000d0f 940e 1075 	CALL __GETW1P
000d11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x34:
                +
000d12 8be8     +STD Y + 16 , R30
000d13 8bf9     +STD Y + 16 + 1 , R31
000d14 8b6a     +STD Y + 16 + 2 , R22
000d15 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000d16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x35:
000d17 7f0b      	ANDI R16,LOW(251)
000d18 89ed      	LDD  R30,Y+21
000d19 93ea      	ST   -Y,R30
                +
000d1a 01de     +MOVW R26 , R28
000d1b 5aa9     +SUBI R26 , LOW ( - 87 )
000d1c 4fbf     +SBCI R27 , HIGH ( - 87 )
000d1d 900d     +LD R0 , X +
000d1e 91bc     +LD R27 , X
000d1f 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000d20 01fe     +MOVW R30 , R28
000d21 5ae7     +SUBI R30 , LOW ( - 89 )
000d22 4fff     +SBCI R31 , HIGH ( - 89 )
000d23 9001     +LD R0 , Z +
000d24 81f0     +LD R31 , Z
000d25 2de0     +MOV R30 , R0
                 	__GETW1SX 89
000d26 9509      	ICALL
000d27 3050      	CPI  R21,0
000d28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36:
                +
000d29 89e8     +LDD R30 , Y + 16
000d2a 89f9     +LDD R31 , Y + 16 + 1
000d2b 896a     +LDD R22 , Y + 16 + 2
000d2c 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000d2d 85aa     +LDD R26 , Y + 10
000d2e 85bb     +LDD R27 , Y + 10 + 1
000d2f 858c     +LDD R24 , Y + 10 + 2
000d30 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000d31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
000d32 01de      	MOVW R26,R28
000d33 961c      	ADIW R26,12
000d34 940e 0fcc 	CALL __ADDW2R15
000d36 940e 1075 	CALL __GETW1P
000d38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38:
000d39 81ee      	LDD  R30,Y+6
000d3a 81ff      	LDD  R31,Y+6+1
000d3b 93fa      	ST   -Y,R31
000d3c 93ea      	ST   -Y,R30
000d3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x39:
                +
000d3e 87e9     +STD Y + 9 , R30
000d3f 87fa     +STD Y + 9 + 1 , R31
000d40 876b     +STD Y + 9 + 2 , R22
000d41 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000d42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3A:
000d43 81ae      	LDD  R26,Y+6
000d44 81bf      	LDD  R27,Y+6+1
000d45 9611      	ADIW R26,1
000d46 83ae      	STD  Y+6,R26
000d47 83bf      	STD  Y+6+1,R27
000d48 9711      	SBIW R26,1
000d49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
                +
000d4a 81aa     +LDD R26 , Y + 2
000d4b 81bb     +LDD R27 , Y + 2 + 1
000d4c 818c     +LDD R24 , Y + 2 + 2
000d4d 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000d4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C:
                +
000d4f 83ea     +STD Y + 2 , R30
000d50 83fb     +STD Y + 2 + 1 , R31
000d51 836c     +STD Y + 2 + 2 , R22
000d52 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000d53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3D:
                +
000d54 81ea     +LDD R30 , Y + 2
000d55 81fb     +LDD R31 , Y + 2 + 1
000d56 816c     +LDD R22 , Y + 2 + 2
000d57 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000d58 85a9     +LDD R26 , Y + 9
000d59 85ba     +LDD R27 , Y + 9 + 1
000d5a 858b     +LDD R24 , Y + 9 + 2
000d5b 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000d5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E:
                +
000d5d 85a9     +LDD R26 , Y + 9
000d5e 85ba     +LDD R27 , Y + 9 + 1
000d5f 858b     +LDD R24 , Y + 9 + 2
000d60 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000d61 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __sda_bit=1
                 	.equ __scl_bit=0
                 	.equ __i2c_port=0x15 ;PORTC
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
000d62 98a8      	cbi  __i2c_port,__scl_bit
000d63 98a9      	cbi  __i2c_port,__sda_bit
000d64 9aa0      	sbi  __i2c_dir,__scl_bit
000d65 98a1      	cbi  __i2c_dir,__sda_bit
000d66 c015      	rjmp __i2c_delay2
                 _i2c_start:
000d67 98a1      	cbi  __i2c_dir,__sda_bit
000d68 98a0      	cbi  __i2c_dir,__scl_bit
000d69 27ee      	clr  r30
000d6a 0000      	nop
000d6b 9b99      	sbis __i2c_pin,__sda_bit
000d6c 9508      	ret
000d6d 9b98      	sbis __i2c_pin,__scl_bit
000d6e 9508      	ret
000d6f d004      	rcall __i2c_delay1
000d70 9aa1      	sbi  __i2c_dir,__sda_bit
000d71 d002      	rcall __i2c_delay1
000d72 9aa0      	sbi  __i2c_dir,__scl_bit
000d73 e0e1      	ldi  r30,1
                 __i2c_delay1:
000d74 e06d      	ldi  r22,13
000d75 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
000d76 9aa1      	sbi  __i2c_dir,__sda_bit
000d77 9aa0      	sbi  __i2c_dir,__scl_bit
000d78 d003      	rcall __i2c_delay2
000d79 98a0      	cbi  __i2c_dir,__scl_bit
000d7a dff9      	rcall __i2c_delay1
000d7b 98a1      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
000d7c e16b      	ldi  r22,27
                 __i2c_delay2l:
000d7d 956a      	dec  r22
000d7e f7f1      	brne __i2c_delay2l
000d7f 9508      	ret
                 _i2c_read:
000d80 e078      	ldi  r23,8
                 __i2c_read0:
000d81 98a0      	cbi  __i2c_dir,__scl_bit
000d82 dff1      	rcall __i2c_delay1
                 __i2c_read3:
000d83 9b98      	sbis __i2c_pin,__scl_bit
000d84 cffe      	rjmp __i2c_read3
000d85 dfee      	rcall __i2c_delay1
000d86 9488      	clc
000d87 9999      	sbic __i2c_pin,__sda_bit
000d88 9408      	sec
000d89 9aa0      	sbi  __i2c_dir,__scl_bit
000d8a dff1      	rcall __i2c_delay2
000d8b 1fee      	rol  r30
000d8c 957a      	dec  r23
000d8d f799      	brne __i2c_read0
000d8e 2f7a      	mov  r23,r26
000d8f 2377      	tst  r23
000d90 f411      	brne __i2c_read1
000d91 98a1      	cbi  __i2c_dir,__sda_bit
000d92 c001      	rjmp __i2c_read2
                 __i2c_read1:
000d93 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
000d94 dfdf      	rcall __i2c_delay1
000d95 98a0      	cbi  __i2c_dir,__scl_bit
000d96 dfe5      	rcall __i2c_delay2
000d97 9aa0      	sbi  __i2c_dir,__scl_bit
000d98 dfdb      	rcall __i2c_delay1
000d99 98a1      	cbi  __i2c_dir,__sda_bit
000d9a cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
000d9b e078      	ldi  r23,8
                 __i2c_write0:
000d9c 0faa      	lsl  r26
000d9d f410      	brcc __i2c_write1
000d9e 98a1      	cbi  __i2c_dir,__sda_bit
000d9f c001      	rjmp __i2c_write2
                 __i2c_write1:
000da0 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
000da1 dfda      	rcall __i2c_delay2
000da2 98a0      	cbi  __i2c_dir,__scl_bit
000da3 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
000da4 9b98      	sbis __i2c_pin,__scl_bit
000da5 cffe      	rjmp __i2c_write3
000da6 dfcd      	rcall __i2c_delay1
000da7 9aa0      	sbi  __i2c_dir,__scl_bit
000da8 957a      	dec  r23
000da9 f791      	brne __i2c_write0
000daa 98a1      	cbi  __i2c_dir,__sda_bit
000dab dfc8      	rcall __i2c_delay1
000dac 98a0      	cbi  __i2c_dir,__scl_bit
000dad dfce      	rcall __i2c_delay2
000dae e0e1      	ldi  r30,1
000daf 9999      	sbic __i2c_pin,__sda_bit
000db0 27ee      	clr  r30
000db1 9aa0      	sbi  __i2c_dir,__scl_bit
000db2 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
000db3 9610      	adiw r26,0
000db4 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000db5 ed80     +LDI R24 , LOW ( 0x7D0 )
000db6 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000db7 9701     +SBIW R24 , 1
000db8 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000db9 95a8      	wdr
000dba 9711      	sbiw r26,1
000dbb f7c9      	brne __delay_ms0
                 __delay_ms1:
000dbc 9508      	ret
                 
                 	.equ __w1_port=0x18
                 	.equ __w1_bit=0x00
                 
                 _w1_init:
000dbd 27ee      	clr  r30
000dbe 98c0      	cbi  __w1_port,__w1_bit
000dbf 9ab8      	sbi  __w1_port-1,__w1_bit
                +
000dc0 ec80     +LDI R24 , LOW ( 0x3C0 )
000dc1 e093     +LDI R25 , HIGH ( 0x3C0 )
                +__DELAY_USW_LOOP :
000dc2 9701     +SBIW R24 , 1
000dc3 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x3C0
000dc4 98b8      	cbi  __w1_port-1,__w1_bit
                +
000dc5 e285     +LDI R24 , LOW ( 0x25 )
                +__DELAY_USB_LOOP :
000dc6 958a     +DEC R24
000dc7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x25
000dc8 9bb0      	sbis __w1_port-2,__w1_bit
000dc9 9508      	ret
                +
000dca ec8b     +LDI R24 , LOW ( 0xCB )
                +__DELAY_USB_LOOP :
000dcb 958a     +DEC R24
000dcc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xCB
000dcd 9bb0      	sbis __w1_port-2,__w1_bit
000dce e0e1      	ldi  r30,1
                +
000dcf e08c     +LDI R24 , LOW ( 0x30C )
000dd0 e093     +LDI R25 , HIGH ( 0x30C )
                +__DELAY_USW_LOOP :
000dd1 9701     +SBIW R24 , 1
000dd2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x30C
000dd3 9508      	ret
                 
                 __w1_read_bit:
000dd4 9ab8      	sbi  __w1_port-1,__w1_bit
                +
000dd5 e085     +LDI R24 , LOW ( 0x5 )
                +__DELAY_USB_LOOP :
000dd6 958a     +DEC R24
000dd7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x5
000dd8 98b8      	cbi  __w1_port-1,__w1_bit
                +
000dd9 e18d     +LDI R24 , LOW ( 0x1D )
                +__DELAY_USB_LOOP :
000dda 958a     +DEC R24
000ddb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x1D
000ddc 9488      	clc
000ddd 99b0      	sbic __w1_port-2,__w1_bit
000dde 9408      	sec
000ddf 95e7      	ror  r30
                +
000de0 ed85     +LDI R24 , LOW ( 0xD5 )
                +__DELAY_USB_LOOP :
000de1 958a     +DEC R24
000de2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xD5
000de3 9508      	ret
                 
                 __w1_write_bit:
000de4 94e8      	clt
000de5 9ab8      	sbi  __w1_port-1,__w1_bit
                +
000de6 e085     +LDI R24 , LOW ( 0x5 )
                +__DELAY_USB_LOOP :
000de7 958a     +DEC R24
000de8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x5
000de9 fd70      	sbrc r23,0
000dea 98b8      	cbi  __w1_port-1,__w1_bit
                +
000deb e283     +LDI R24 , LOW ( 0x23 )
                +__DELAY_USB_LOOP :
000dec 958a     +DEC R24
000ded f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x23
000dee 99b0      	sbic __w1_port-2,__w1_bit
000def c003      	rjmp __w1_write_bit0
000df0 ff70      	sbrs r23,0
000df1 c003      	rjmp __w1_write_bit1
000df2 9508      	ret
                 __w1_write_bit0:
000df3 ff70      	sbrs r23,0
000df4 9508      	ret
                 __w1_write_bit1:
                +
000df5 ec88     +LDI R24 , LOW ( 0xC8 )
                +__DELAY_USB_LOOP :
000df6 958a     +DEC R24
000df7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xC8
000df8 98b8      	cbi  __w1_port-1,__w1_bit
                +
000df9 e08d     +LDI R24 , LOW ( 0xD )
                +__DELAY_USB_LOOP :
000dfa 958a     +DEC R24
000dfb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xD
000dfc 9468      	set
000dfd 9508      	ret
                 
                 _w1_read:
000dfe e068      	ldi  r22,8
                 	__w1_read0:
000dff dfd4      	rcall __w1_read_bit
000e00 956a      	dec  r22
000e01 f7e9      	brne __w1_read0
000e02 9508      	ret
                 
                 _w1_write:
000e03 2f7a      	mov  r23,r26
000e04 e068      	ldi  r22,8
000e05 27ee      	clr  r30
                 __w1_write0:
000e06 dfdd      	rcall __w1_write_bit
000e07 f426      	brtc __w1_write1
000e08 9577      	ror  r23
000e09 956a      	dec  r22
000e0a f7d9      	brne __w1_write0
000e0b 95e3      	inc  r30
                 __w1_write1:
000e0c 9508      	ret
                 
                 _w1_dow_crc8:
000e0d 27ee      	clr  r30
000e0e 23aa      	tst  r26
000e0f f089      	breq __w1_dow_crc83
000e10 2f8a      	mov  r24,r26
000e11 e168      	ldi  r22,0x18
000e12 81a8      	ld   r26,y
000e13 81b9      	ldd  r27,y+1
                 __w1_dow_crc80:
000e14 e098      	ldi  r25,8
000e15 91fd      	ld   r31,x+
                 __w1_dow_crc81:
000e16 2f7f      	mov  r23,r31
000e17 277e      	eor  r23,r30
000e18 9577      	ror  r23
000e19 f408      	brcc __w1_dow_crc82
000e1a 27e6      	eor  r30,r22
                 __w1_dow_crc82:
000e1b 95e7      	ror  r30
000e1c 95f6      	lsr  r31
000e1d 959a      	dec  r25
000e1e f7b9      	brne __w1_dow_crc81
000e1f 958a      	dec  r24
000e20 f799      	brne __w1_dow_crc80
                 __w1_dow_crc83:
000e21 9622      	adiw r28,2
000e22 9508      	ret
                 
                 __ANEGF1:
000e23 9730      	SBIW R30,0
000e24 4060      	SBCI R22,0
000e25 4070      	SBCI R23,0
000e26 f009      	BREQ __ANEGF10
000e27 5870      	SUBI R23,0x80
                 __ANEGF10:
000e28 9508      	RET
                 
                 __ROUND_REPACK:
000e29 2355      	TST  R21
000e2a f442      	BRPL __REPACK
000e2b 3850      	CPI  R21,0x80
000e2c f411      	BRNE __ROUND_REPACK0
000e2d ffe0      	SBRS R30,0
000e2e c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000e2f 9631      	ADIW R30,1
000e30 1f69      	ADC  R22,R25
000e31 1f79      	ADC  R23,R25
000e32 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000e33 e850      	LDI  R21,0x80
000e34 2757      	EOR  R21,R23
000e35 f411      	BRNE __REPACK0
000e36 935f      	PUSH R21
000e37 c0cf      	RJMP __ZERORES
                 __REPACK0:
000e38 3f5f      	CPI  R21,0xFF
000e39 f031      	BREQ __REPACK1
000e3a 0f66      	LSL  R22
000e3b 0c00      	LSL  R0
000e3c 9557      	ROR  R21
000e3d 9567      	ROR  R22
000e3e 2f75      	MOV  R23,R21
000e3f 9508      	RET
                 __REPACK1:
000e40 935f      	PUSH R21
000e41 2000      	TST  R0
000e42 f00a      	BRMI __REPACK2
000e43 c0cf      	RJMP __MAXRES
                 __REPACK2:
000e44 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000e45 e850      	LDI  R21,0x80
000e46 2e19      	MOV  R1,R25
000e47 2215      	AND  R1,R21
000e48 0f88      	LSL  R24
000e49 1f99      	ROL  R25
000e4a 2795      	EOR  R25,R21
000e4b 0f55      	LSL  R21
000e4c 9587      	ROR  R24
                 
                 __UNPACK1:
000e4d e850      	LDI  R21,0x80
000e4e 2e07      	MOV  R0,R23
000e4f 2205      	AND  R0,R21
000e50 0f66      	LSL  R22
000e51 1f77      	ROL  R23
000e52 2775      	EOR  R23,R21
000e53 0f55      	LSL  R21
000e54 9567      	ROR  R22
000e55 9508      	RET
                 
                 __CFD1U:
000e56 9468      	SET
000e57 c001      	RJMP __CFD1U0
                 __CFD1:
000e58 94e8      	CLT
                 __CFD1U0:
000e59 935f      	PUSH R21
000e5a dff2      	RCALL __UNPACK1
000e5b 3870      	CPI  R23,0x80
000e5c f018      	BRLO __CFD10
000e5d 3f7f      	CPI  R23,0xFF
000e5e f408      	BRCC __CFD10
000e5f c0a7      	RJMP __ZERORES
                 __CFD10:
000e60 e156      	LDI  R21,22
000e61 1b57      	SUB  R21,R23
000e62 f4aa      	BRPL __CFD11
000e63 9551      	NEG  R21
000e64 3058      	CPI  R21,8
000e65 f40e      	BRTC __CFD19
000e66 3059      	CPI  R21,9
                 __CFD19:
000e67 f030      	BRLO __CFD17
000e68 efef      	SER  R30
000e69 efff      	SER  R31
000e6a ef6f      	SER  R22
000e6b e77f      	LDI  R23,0x7F
000e6c f977      	BLD  R23,7
000e6d c01a      	RJMP __CFD15
                 __CFD17:
000e6e 2777      	CLR  R23
000e6f 2355      	TST  R21
000e70 f0b9      	BREQ __CFD15
                 __CFD18:
000e71 0fee      	LSL  R30
000e72 1fff      	ROL  R31
000e73 1f66      	ROL  R22
000e74 1f77      	ROL  R23
000e75 955a      	DEC  R21
000e76 f7d1      	BRNE __CFD18
000e77 c010      	RJMP __CFD15
                 __CFD11:
000e78 2777      	CLR  R23
                 __CFD12:
000e79 3058      	CPI  R21,8
000e7a f028      	BRLO __CFD13
000e7b 2fef      	MOV  R30,R31
000e7c 2ff6      	MOV  R31,R22
000e7d 2f67      	MOV  R22,R23
000e7e 5058      	SUBI R21,8
000e7f cff9      	RJMP __CFD12
                 __CFD13:
000e80 2355      	TST  R21
000e81 f031      	BREQ __CFD15
                 __CFD14:
000e82 9576      	LSR  R23
000e83 9567      	ROR  R22
000e84 95f7      	ROR  R31
000e85 95e7      	ROR  R30
000e86 955a      	DEC  R21
000e87 f7d1      	BRNE __CFD14
                 __CFD15:
000e88 2000      	TST  R0
000e89 f40a      	BRPL __CFD16
000e8a d149      	RCALL __ANEGD1
                 __CFD16:
000e8b 915f      	POP  R21
000e8c 9508      	RET
                 
                 __CDF1U:
000e8d 9468      	SET
000e8e c001      	RJMP __CDF1U0
                 __CDF1:
000e8f 94e8      	CLT
                 __CDF1U0:
000e90 9730      	SBIW R30,0
000e91 4060      	SBCI R22,0
000e92 4070      	SBCI R23,0
000e93 f0b1      	BREQ __CDF10
000e94 2400      	CLR  R0
000e95 f026      	BRTS __CDF11
000e96 2377      	TST  R23
000e97 f412      	BRPL __CDF11
000e98 9400      	COM  R0
000e99 d13a      	RCALL __ANEGD1
                 __CDF11:
000e9a 2e17      	MOV  R1,R23
000e9b e17e      	LDI  R23,30
000e9c 2011      	TST  R1
                 __CDF12:
000e9d f032      	BRMI __CDF13
000e9e 957a      	DEC  R23
000e9f 0fee      	LSL  R30
000ea0 1fff      	ROL  R31
000ea1 1f66      	ROL  R22
000ea2 1c11      	ROL  R1
000ea3 cff9      	RJMP __CDF12
                 __CDF13:
000ea4 2fef      	MOV  R30,R31
000ea5 2ff6      	MOV  R31,R22
000ea6 2d61      	MOV  R22,R1
000ea7 935f      	PUSH R21
000ea8 df8a      	RCALL __REPACK
000ea9 915f      	POP  R21
                 __CDF10:
000eaa 9508      	RET
                 
                 __SWAPACC:
000eab 934f      	PUSH R20
000eac 01af      	MOVW R20,R30
000ead 01fd      	MOVW R30,R26
000eae 01da      	MOVW R26,R20
000eaf 01ab      	MOVW R20,R22
000eb0 01bc      	MOVW R22,R24
000eb1 01ca      	MOVW R24,R20
000eb2 2d40      	MOV  R20,R0
000eb3 2c01      	MOV  R0,R1
000eb4 2e14      	MOV  R1,R20
000eb5 914f      	POP  R20
000eb6 9508      	RET
                 
                 __UADD12:
000eb7 0fea      	ADD  R30,R26
000eb8 1ffb      	ADC  R31,R27
000eb9 1f68      	ADC  R22,R24
000eba 9508      	RET
                 
                 __NEGMAN1:
000ebb 95e0      	COM  R30
000ebc 95f0      	COM  R31
000ebd 9560      	COM  R22
000ebe 5fef      	SUBI R30,-1
000ebf 4fff      	SBCI R31,-1
000ec0 4f6f      	SBCI R22,-1
000ec1 9508      	RET
                 
                 __SUBF12:
000ec2 935f      	PUSH R21
000ec3 df81      	RCALL __UNPACK
000ec4 3890      	CPI  R25,0x80
000ec5 f171      	BREQ __ADDF129
000ec6 e850      	LDI  R21,0x80
000ec7 2615      	EOR  R1,R21
                 
000ec8 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000ec9 935f      	PUSH R21
000eca df7a      	RCALL __UNPACK
000ecb 3890      	CPI  R25,0x80
000ecc f139      	BREQ __ADDF129
                 
                 __ADDF120:
000ecd 3870      	CPI  R23,0x80
000ece f121      	BREQ __ADDF128
                 __ADDF121:
000ecf 2f57      	MOV  R21,R23
000ed0 1b59      	SUB  R21,R25
000ed1 f12b      	BRVS __ADDF1211
000ed2 f412      	BRPL __ADDF122
000ed3 dfd7      	RCALL __SWAPACC
000ed4 cffa      	RJMP __ADDF121
                 __ADDF122:
000ed5 3158      	CPI  R21,24
000ed6 f018      	BRLO __ADDF123
000ed7 27aa      	CLR  R26
000ed8 27bb      	CLR  R27
000ed9 2788      	CLR  R24
                 __ADDF123:
000eda 3058      	CPI  R21,8
000edb f028      	BRLO __ADDF124
000edc 2fab      	MOV  R26,R27
000edd 2fb8      	MOV  R27,R24
000ede 2788      	CLR  R24
000edf 5058      	SUBI R21,8
000ee0 cff9      	RJMP __ADDF123
                 __ADDF124:
000ee1 2355      	TST  R21
000ee2 f029      	BREQ __ADDF126
                 __ADDF125:
000ee3 9586      	LSR  R24
000ee4 95b7      	ROR  R27
000ee5 95a7      	ROR  R26
000ee6 955a      	DEC  R21
000ee7 f7d9      	BRNE __ADDF125
                 __ADDF126:
000ee8 2d50      	MOV  R21,R0
000ee9 2551      	EOR  R21,R1
000eea f072      	BRMI __ADDF127
000eeb dfcb      	RCALL __UADD12
000eec f438      	BRCC __ADDF129
000eed 9567      	ROR  R22
000eee 95f7      	ROR  R31
000eef 95e7      	ROR  R30
000ef0 9573      	INC  R23
000ef1 f413      	BRVC __ADDF129
000ef2 c020      	RJMP __MAXRES
                 __ADDF128:
000ef3 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000ef4 df3e      	RCALL __REPACK
000ef5 915f      	POP  R21
000ef6 9508      	RET
                 __ADDF1211:
000ef7 f7d8      	BRCC __ADDF128
000ef8 cffb      	RJMP __ADDF129
                 __ADDF127:
000ef9 1bea      	SUB  R30,R26
000efa 0bfb      	SBC  R31,R27
000efb 0b68      	SBC  R22,R24
000efc f051      	BREQ __ZERORES
000efd f410      	BRCC __ADDF1210
000efe 9400      	COM  R0
000eff dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000f00 2366      	TST  R22
000f01 f392      	BRMI __ADDF129
000f02 0fee      	LSL  R30
000f03 1fff      	ROL  R31
000f04 1f66      	ROL  R22
000f05 957a      	DEC  R23
000f06 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000f07 27ee      	CLR  R30
000f08 27ff      	CLR  R31
000f09 2766      	CLR  R22
000f0a 2777      	CLR  R23
000f0b 915f      	POP  R21
000f0c 9508      	RET
                 
                 __MINRES:
000f0d efef      	SER  R30
000f0e efff      	SER  R31
000f0f e76f      	LDI  R22,0x7F
000f10 ef7f      	SER  R23
000f11 915f      	POP  R21
000f12 9508      	RET
                 
                 __MAXRES:
000f13 efef      	SER  R30
000f14 efff      	SER  R31
000f15 e76f      	LDI  R22,0x7F
000f16 e77f      	LDI  R23,0x7F
000f17 915f      	POP  R21
000f18 9508      	RET
                 
                 __MULF12:
000f19 935f      	PUSH R21
000f1a df2a      	RCALL __UNPACK
000f1b 3870      	CPI  R23,0x80
000f1c f351      	BREQ __ZERORES
000f1d 3890      	CPI  R25,0x80
000f1e f341      	BREQ __ZERORES
000f1f 2401      	EOR  R0,R1
000f20 9408      	SEC
000f21 1f79      	ADC  R23,R25
000f22 f423      	BRVC __MULF124
000f23 f31c      	BRLT __ZERORES
                 __MULF125:
000f24 2000      	TST  R0
000f25 f33a      	BRMI __MINRES
000f26 cfec      	RJMP __MAXRES
                 __MULF124:
000f27 920f      	PUSH R0
000f28 931f      	PUSH R17
000f29 932f      	PUSH R18
000f2a 933f      	PUSH R19
000f2b 934f      	PUSH R20
000f2c 2711      	CLR  R17
000f2d 2722      	CLR  R18
000f2e 2799      	CLR  R25
000f2f 9f68      	MUL  R22,R24
000f30 01a0      	MOVW R20,R0
000f31 9f8f      	MUL  R24,R31
000f32 2d30      	MOV  R19,R0
000f33 0d41      	ADD  R20,R1
000f34 1f59      	ADC  R21,R25
000f35 9f6b      	MUL  R22,R27
000f36 0d30      	ADD  R19,R0
000f37 1d41      	ADC  R20,R1
000f38 1f59      	ADC  R21,R25
000f39 9f8e      	MUL  R24,R30
000f3a d027      	RCALL __MULF126
000f3b 9fbf      	MUL  R27,R31
000f3c d025      	RCALL __MULF126
000f3d 9f6a      	MUL  R22,R26
000f3e d023      	RCALL __MULF126
000f3f 9fbe      	MUL  R27,R30
000f40 d01d      	RCALL __MULF127
000f41 9faf      	MUL  R26,R31
000f42 d01b      	RCALL __MULF127
000f43 9fae      	MUL  R26,R30
000f44 0d11      	ADD  R17,R1
000f45 1f29      	ADC  R18,R25
000f46 1f39      	ADC  R19,R25
000f47 1f49      	ADC  R20,R25
000f48 1f59      	ADC  R21,R25
000f49 2fe3      	MOV  R30,R19
000f4a 2ff4      	MOV  R31,R20
000f4b 2f65      	MOV  R22,R21
000f4c 2f52      	MOV  R21,R18
000f4d 914f      	POP  R20
000f4e 913f      	POP  R19
000f4f 912f      	POP  R18
000f50 911f      	POP  R17
000f51 900f      	POP  R0
000f52 2366      	TST  R22
000f53 f02a      	BRMI __MULF122
000f54 0f55      	LSL  R21
000f55 1fee      	ROL  R30
000f56 1fff      	ROL  R31
000f57 1f66      	ROL  R22
000f58 c002      	RJMP __MULF123
                 __MULF122:
000f59 9573      	INC  R23
000f5a f24b      	BRVS __MULF125
                 __MULF123:
000f5b decd      	RCALL __ROUND_REPACK
000f5c 915f      	POP  R21
000f5d 9508      	RET
                 
                 __MULF127:
000f5e 0d10      	ADD  R17,R0
000f5f 1d21      	ADC  R18,R1
000f60 1f39      	ADC  R19,R25
000f61 c002      	RJMP __MULF128
                 __MULF126:
000f62 0d20      	ADD  R18,R0
000f63 1d31      	ADC  R19,R1
                 __MULF128:
000f64 1f49      	ADC  R20,R25
000f65 1f59      	ADC  R21,R25
000f66 9508      	RET
                 
                 __DIVF21:
000f67 935f      	PUSH R21
000f68 dedc      	RCALL __UNPACK
000f69 3870      	CPI  R23,0x80
000f6a f421      	BRNE __DIVF210
000f6b 2011      	TST  R1
                 __DIVF211:
000f6c f40a      	BRPL __DIVF219
000f6d cf9f      	RJMP __MINRES
                 __DIVF219:
000f6e cfa4      	RJMP __MAXRES
                 __DIVF210:
000f6f 3890      	CPI  R25,0x80
000f70 f409      	BRNE __DIVF218
                 __DIVF217:
000f71 cf95      	RJMP __ZERORES
                 __DIVF218:
000f72 2401      	EOR  R0,R1
000f73 9408      	SEC
000f74 0b97      	SBC  R25,R23
000f75 f41b      	BRVC __DIVF216
000f76 f3d4      	BRLT __DIVF217
000f77 2000      	TST  R0
000f78 cff3      	RJMP __DIVF211
                 __DIVF216:
000f79 2f79      	MOV  R23,R25
000f7a 931f      	PUSH R17
000f7b 932f      	PUSH R18
000f7c 933f      	PUSH R19
000f7d 934f      	PUSH R20
000f7e 2411      	CLR  R1
000f7f 2711      	CLR  R17
000f80 2722      	CLR  R18
000f81 2733      	CLR  R19
000f82 2744      	CLR  R20
000f83 2755      	CLR  R21
000f84 e290      	LDI  R25,32
                 __DIVF212:
000f85 17ae      	CP   R26,R30
000f86 07bf      	CPC  R27,R31
000f87 0786      	CPC  R24,R22
000f88 0741      	CPC  R20,R17
000f89 f030      	BRLO __DIVF213
000f8a 1bae      	SUB  R26,R30
000f8b 0bbf      	SBC  R27,R31
000f8c 0b86      	SBC  R24,R22
000f8d 0b41      	SBC  R20,R17
000f8e 9408      	SEC
000f8f c001      	RJMP __DIVF214
                 __DIVF213:
000f90 9488      	CLC
                 __DIVF214:
000f91 1f55      	ROL  R21
000f92 1f22      	ROL  R18
000f93 1f33      	ROL  R19
000f94 1c11      	ROL  R1
000f95 1faa      	ROL  R26
000f96 1fbb      	ROL  R27
000f97 1f88      	ROL  R24
000f98 1f44      	ROL  R20
000f99 959a      	DEC  R25
000f9a f751      	BRNE __DIVF212
000f9b 01f9      	MOVW R30,R18
000f9c 2d61      	MOV  R22,R1
000f9d 914f      	POP  R20
000f9e 913f      	POP  R19
000f9f 912f      	POP  R18
000fa0 911f      	POP  R17
000fa1 2366      	TST  R22
000fa2 f032      	BRMI __DIVF215
000fa3 0f55      	LSL  R21
000fa4 1fee      	ROL  R30
000fa5 1fff      	ROL  R31
000fa6 1f66      	ROL  R22
000fa7 957a      	DEC  R23
000fa8 f243      	BRVS __DIVF217
                 __DIVF215:
000fa9 de7f      	RCALL __ROUND_REPACK
000faa 915f      	POP  R21
000fab 9508      	RET
                 
                 __CMPF12:
000fac 2399      	TST  R25
000fad f09a      	BRMI __CMPF120
000fae 2377      	TST  R23
000faf f042      	BRMI __CMPF121
000fb0 1797      	CP   R25,R23
000fb1 f048      	BRLO __CMPF122
000fb2 f429      	BRNE __CMPF121
000fb3 17ae      	CP   R26,R30
000fb4 07bf      	CPC  R27,R31
000fb5 0786      	CPC  R24,R22
000fb6 f020      	BRLO __CMPF122
000fb7 f031      	BREQ __CMPF123
                 __CMPF121:
000fb8 9498      	CLZ
000fb9 9488      	CLC
000fba 9508      	RET
                 __CMPF122:
000fbb 9498      	CLZ
000fbc 9408      	SEC
000fbd 9508      	RET
                 __CMPF123:
000fbe 9418      	SEZ
000fbf 9488      	CLC
000fc0 9508      	RET
                 __CMPF120:
000fc1 2377      	TST  R23
000fc2 f7c2      	BRPL __CMPF122
000fc3 1797      	CP   R25,R23
000fc4 f398      	BRLO __CMPF121
000fc5 f7a9      	BRNE __CMPF122
000fc6 17ea      	CP   R30,R26
000fc7 07fb      	CPC  R31,R27
000fc8 0768      	CPC  R22,R24
000fc9 f388      	BRLO __CMPF122
000fca f399      	BREQ __CMPF123
000fcb cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000fcc 2400      	CLR  R0
000fcd 0daf      	ADD  R26,R15
000fce 1db0      	ADC  R27,R0
000fcf 9508      	RET
                 
                 __ANEGW1:
000fd0 95f1      	NEG  R31
000fd1 95e1      	NEG  R30
000fd2 40f0      	SBCI R31,0
000fd3 9508      	RET
                 
                 __ANEGD1:
000fd4 95f0      	COM  R31
000fd5 9560      	COM  R22
000fd6 9570      	COM  R23
000fd7 95e1      	NEG  R30
000fd8 4fff      	SBCI R31,-1
000fd9 4f6f      	SBCI R22,-1
000fda 4f7f      	SBCI R23,-1
000fdb 9508      	RET
                 
                 __CBD1:
000fdc 2ffe      	MOV  R31,R30
000fdd 0fff      	ADD  R31,R31
000fde 0bff      	SBC  R31,R31
000fdf 2f6f      	MOV  R22,R31
000fe0 2f7f      	MOV  R23,R31
000fe1 9508      	RET
                 
                 __CWD1:
000fe2 2f6f      	MOV  R22,R31
000fe3 0f66      	ADD  R22,R22
000fe4 0b66      	SBC  R22,R22
000fe5 2f76      	MOV  R23,R22
000fe6 9508      	RET
                 
                 __LNEGB1:
000fe7 23ee      	TST  R30
000fe8 e0e1      	LDI  R30,1
000fe9 f009      	BREQ __LNEGB1F
000fea 27ee      	CLR  R30
                 __LNEGB1F:
000feb 9508      	RET
                 
                 __DIVB21U:
000fec 2400      	CLR  R0
000fed e098      	LDI  R25,8
                 __DIVB21U1:
000fee 0faa      	LSL  R26
000fef 1c00      	ROL  R0
000ff0 1a0e      	SUB  R0,R30
000ff1 f410      	BRCC __DIVB21U2
000ff2 0e0e      	ADD  R0,R30
000ff3 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000ff4 60a1      	SBR  R26,1
                 __DIVB21U3:
000ff5 959a      	DEC  R25
000ff6 f7b9      	BRNE __DIVB21U1
000ff7 2fea      	MOV  R30,R26
000ff8 2da0      	MOV  R26,R0
000ff9 9508      	RET
                 
                 __DIVB21:
000ffa d06e      	RCALL __CHKSIGNB
000ffb dff0      	RCALL __DIVB21U
000ffc f40e      	BRTC __DIVB211
000ffd 95e1      	NEG  R30
                 __DIVB211:
000ffe 9508      	RET
                 
                 __DIVW21U:
000fff 2400      	CLR  R0
001000 2411      	CLR  R1
001001 e190      	LDI  R25,16
                 __DIVW21U1:
001002 0faa      	LSL  R26
001003 1fbb      	ROL  R27
001004 1c00      	ROL  R0
001005 1c11      	ROL  R1
001006 1a0e      	SUB  R0,R30
001007 0a1f      	SBC  R1,R31
001008 f418      	BRCC __DIVW21U2
001009 0e0e      	ADD  R0,R30
00100a 1e1f      	ADC  R1,R31
00100b c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00100c 60a1      	SBR  R26,1
                 __DIVW21U3:
00100d 959a      	DEC  R25
00100e f799      	BRNE __DIVW21U1
00100f 01fd      	MOVW R30,R26
001010 01d0      	MOVW R26,R0
001011 9508      	RET
                 
                 __DIVD21U:
001012 933f      	PUSH R19
001013 934f      	PUSH R20
001014 935f      	PUSH R21
001015 2400      	CLR  R0
001016 2411      	CLR  R1
001017 2744      	CLR  R20
001018 2755      	CLR  R21
001019 e230      	LDI  R19,32
                 __DIVD21U1:
00101a 0faa      	LSL  R26
00101b 1fbb      	ROL  R27
00101c 1f88      	ROL  R24
00101d 1f99      	ROL  R25
00101e 1c00      	ROL  R0
00101f 1c11      	ROL  R1
001020 1f44      	ROL  R20
001021 1f55      	ROL  R21
001022 1a0e      	SUB  R0,R30
001023 0a1f      	SBC  R1,R31
001024 0b46      	SBC  R20,R22
001025 0b57      	SBC  R21,R23
001026 f428      	BRCC __DIVD21U2
001027 0e0e      	ADD  R0,R30
001028 1e1f      	ADC  R1,R31
001029 1f46      	ADC  R20,R22
00102a 1f57      	ADC  R21,R23
00102b c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00102c 60a1      	SBR  R26,1
                 __DIVD21U3:
00102d 953a      	DEC  R19
00102e f759      	BRNE __DIVD21U1
00102f 01fd      	MOVW R30,R26
001030 01bc      	MOVW R22,R24
001031 01d0      	MOVW R26,R0
001032 01ca      	MOVW R24,R20
001033 915f      	POP  R21
001034 914f      	POP  R20
001035 913f      	POP  R19
001036 9508      	RET
                 
                 __MODB21:
001037 94e8      	CLT
001038 ffa7      	SBRS R26,7
001039 c002      	RJMP __MODB211
00103a 95a1      	NEG  R26
00103b 9468      	SET
                 __MODB211:
00103c fde7      	SBRC R30,7
00103d 95e1      	NEG  R30
00103e dfad      	RCALL __DIVB21U
00103f 2fea      	MOV  R30,R26
001040 f40e      	BRTC __MODB212
001041 95e1      	NEG  R30
                 __MODB212:
001042 9508      	RET
                 
                 __MODW21:
001043 94e8      	CLT
001044 ffb7      	SBRS R27,7
001045 c004      	RJMP __MODW211
001046 95a0      	COM  R26
001047 95b0      	COM  R27
001048 9611      	ADIW R26,1
001049 9468      	SET
                 __MODW211:
00104a fdf7      	SBRC R31,7
00104b df84      	RCALL __ANEGW1
00104c dfb2      	RCALL __DIVW21U
00104d 01fd      	MOVW R30,R26
00104e f40e      	BRTC __MODW212
00104f df80      	RCALL __ANEGW1
                 __MODW212:
001050 9508      	RET
                 
                 __MODD21U:
001051 dfc0      	RCALL __DIVD21U
001052 01fd      	MOVW R30,R26
001053 01bc      	MOVW R22,R24
001054 9508      	RET
                 
                 __MODD21:
001055 94e8      	CLT
001056 ff97      	SBRS R25,7
001057 c009      	RJMP __MODD211
001058 95a0      	COM  R26
001059 95b0      	COM  R27
00105a 9580      	COM  R24
00105b 9590      	COM  R25
00105c 5faf      	SUBI R26,-1
00105d 4fbf      	SBCI R27,-1
00105e 4f8f      	SBCI R24,-1
00105f 4f9f      	SBCI R25,-1
001060 9468      	SET
                 __MODD211:
001061 fd77      	SBRC R23,7
001062 df71      	RCALL __ANEGD1
001063 dfae      	RCALL __DIVD21U
001064 01fd      	MOVW R30,R26
001065 01bc      	MOVW R22,R24
001066 f40e      	BRTC __MODD212
001067 df6c      	RCALL __ANEGD1
                 __MODD212:
001068 9508      	RET
                 
                 __CHKSIGNB:
001069 94e8      	CLT
00106a ffe7      	SBRS R30,7
00106b c002      	RJMP __CHKSB1
00106c 95e1      	NEG  R30
00106d 9468      	SET
                 __CHKSB1:
00106e ffa7      	SBRS R26,7
00106f c004      	RJMP __CHKSB2
001070 95a1      	NEG  R26
001071 f800      	BLD  R0,0
001072 9403      	INC  R0
001073 fa00      	BST  R0,0
                 __CHKSB2:
001074 9508      	RET
                 
                 __GETW1P:
001075 91ed      	LD   R30,X+
001076 91fc      	LD   R31,X
001077 9711      	SBIW R26,1
001078 9508      	RET
                 
                 __GETD1P:
001079 91ed      	LD   R30,X+
00107a 91fd      	LD   R31,X+
00107b 916d      	LD   R22,X+
00107c 917c      	LD   R23,X
00107d 9713      	SBIW R26,3
00107e 9508      	RET
                 
                 __PUTDP1:
00107f 93ed      	ST   X+,R30
001080 93fd      	ST   X+,R31
001081 936d      	ST   X+,R22
001082 937c      	ST   X,R23
001083 9508      	RET
                 
                 __GETW1PF:
001084 9005      	LPM  R0,Z+
001085 91f4      	LPM  R31,Z
001086 2de0      	MOV  R30,R0
001087 9508      	RET
                 
                 __GETW2PF:
001088 91a5      	LPM  R26,Z+
001089 91b4      	LPM  R27,Z
00108a 9508      	RET
                 
                 __GETD1S0:
00108b 81e8      	LD   R30,Y
00108c 81f9      	LDD  R31,Y+1
00108d 816a      	LDD  R22,Y+2
00108e 817b      	LDD  R23,Y+3
00108f 9508      	RET
                 
                 __GETD2S0:
001090 81a8      	LD   R26,Y
001091 81b9      	LDD  R27,Y+1
001092 818a      	LDD  R24,Y+2
001093 819b      	LDD  R25,Y+3
001094 9508      	RET
                 
                 __PUTD1S0:
001095 83e8      	ST   Y,R30
001096 83f9      	STD  Y+1,R31
001097 836a      	STD  Y+2,R22
001098 837b      	STD  Y+3,R23
001099 9508      	RET
                 
                 __PUTPARD1:
00109a 937a      	ST   -Y,R23
00109b 936a      	ST   -Y,R22
00109c 93fa      	ST   -Y,R31
00109d 93ea      	ST   -Y,R30
00109e 9508      	RET
                 
                 __PUTPARD2:
00109f 939a      	ST   -Y,R25
0010a0 938a      	ST   -Y,R24
0010a1 93ba      	ST   -Y,R27
0010a2 93aa      	ST   -Y,R26
0010a3 9508      	RET
                 
                 __SWAPD12:
0010a4 2e18      	MOV  R1,R24
0010a5 2f86      	MOV  R24,R22
0010a6 2d61      	MOV  R22,R1
0010a7 2e19      	MOV  R1,R25
0010a8 2f97      	MOV  R25,R23
0010a9 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0010aa 2e1b      	MOV  R1,R27
0010ab 2fbf      	MOV  R27,R31
0010ac 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0010ad 2e1a      	MOV  R1,R26
0010ae 2fae      	MOV  R26,R30
0010af 2de1      	MOV  R30,R1
0010b0 9508      	RET
                 
                 __EEPROMRDB:
0010b1 99e1      	SBIC EECR,EEWE
0010b2 cffe      	RJMP __EEPROMRDB
0010b3 93ff      	PUSH R31
0010b4 b7ff      	IN   R31,SREG
0010b5 94f8      	CLI
0010b6 bbae      	OUT  EEARL,R26
0010b7 bbbf      	OUT  EEARH,R27
0010b8 9ae0      	SBI  EECR,EERE
0010b9 b3ed      	IN   R30,EEDR
0010ba bfff      	OUT  SREG,R31
0010bb 91ff      	POP  R31
0010bc 9508      	RET
                 
                 __EEPROMWRB:
0010bd 9be1      	SBIS EECR,EEWE
0010be c002      	RJMP __EEPROMWRB1
0010bf 95a8      	WDR
0010c0 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
0010c1 b79f      	IN   R25,SREG
0010c2 94f8      	CLI
0010c3 bbae      	OUT  EEARL,R26
0010c4 bbbf      	OUT  EEARH,R27
0010c5 9ae0      	SBI  EECR,EERE
0010c6 b38d      	IN   R24,EEDR
0010c7 17e8      	CP   R30,R24
0010c8 f019      	BREQ __EEPROMWRB0
0010c9 bbed      	OUT  EEDR,R30
0010ca 9ae2      	SBI  EECR,EEMWE
0010cb 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0010cc bf9f      	OUT  SREG,R25
0010cd 9508      	RET
                 
                 __CPD10:
0010ce 9730      	SBIW R30,0
0010cf 4060      	SBCI R22,0
0010d0 4070      	SBCI R23,0
0010d1 9508      	RET
                 
                 __CPD02:
0010d2 2400      	CLR  R0
0010d3 160a      	CP   R0,R26
0010d4 060b      	CPC  R0,R27
0010d5 0608      	CPC  R0,R24
0010d6 0609      	CPC  R0,R25
0010d7 9508      	RET
                 
                 __SAVELOCR6:
0010d8 935a      	ST   -Y,R21
                 __SAVELOCR5:
0010d9 934a      	ST   -Y,R20
                 __SAVELOCR4:
0010da 933a      	ST   -Y,R19
                 __SAVELOCR3:
0010db 932a      	ST   -Y,R18
                 __SAVELOCR2:
0010dc 931a      	ST   -Y,R17
0010dd 930a      	ST   -Y,R16
0010de 9508      	RET
                 
                 __LOADLOCR6:
0010df 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0010e0 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0010e1 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0010e2 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0010e3 8119      	LDD  R17,Y+1
0010e4 8108      	LD   R16,Y
0010e5 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  73 r1 :  38 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   5 r7 :   7 
r8 :  11 r9 :  21 r10:   1 r11:   5 r12:   1 r13:   0 r14:   0 r15:   4 
r16:  57 r17:  75 r18:  77 r19:  62 r20:  65 r21: 102 r22: 147 r23: 137 
r24: 144 r25: 112 r26: 451 r27: 184 r28:  39 r29:   1 r30: 731 r31: 286 
x  :  56 y  : 536 z  :  29 
Registers used: 31 out of 35 (88.6%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  25 add   :  20 
adiw  :  42 and   :   7 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   1 break :   0 breq  :  68 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  43 
brlt  :   3 brmi  :  11 brne  : 138 brpl  :   9 brsh  :  16 brtc  :   7 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 411 
cbi   :  26 cbr   :   1 clc   :   5 clh   :   0 cli   :   3 cln   :   0 
clr   :  70 cls   :   0 clt   :   8 clv   :   0 clz   :   2 com   :  14 
cp    :  39 cpc   :  70 cpi   : 142 cpse  :   0 dec   :  32 des   :   0 
eor   :   9 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   7 inc   :  14 jmp   :  35 ld    :  62 ldd   : 267 ldi   : 692 
lds   :  14 lpm   :  20 lsl   :  24 lsr   :   5 mov   : 109 movw  :  66 
mul   :  12 muls  :   0 mulsu :   0 neg   :  11 nop   :   1 or    :   1 
ori   :  12 out   :  49 pop   :  25 push  :  25 rcall :  82 ret   : 137 
reti  :   1 rjmp  : 226 rol   :  38 ror   :  19 sbc   :  12 sbci  :  28 
sbi   :  24 sbic  :   5 sbis  :   7 sbiw  :  40 sbr   :   5 sbrc  :   7 
sbrs  :  24 sec   :   7 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   7 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 167 std   : 109 sts   :  13 sub   :   7 subi  :  57 swap  :   3 
tst   :  30 wdr   :   2 
Instructions used: 84 out of 116 (72.4%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0021cc   8506    146   8652   32768  26.4%
[.dseg] 0x000060 0x00028e      0     46     46    2048   2.2%
[.eseg] 0x000000 0x000001      0      1      1    1024   0.1%

Assembly complete, 0 errors, 14 warnings
